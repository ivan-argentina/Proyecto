<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FiscalNET</name>
    </assembly>
    <members>
        <member name="T:FiscalNET.BixolonPA">
            <summary>Interfase de Alto Nivel para Impresoras Fiscales Samsung Bixolon, DASCOM y TALLY de Panamá</summary>
            <remarks>Esta interfase provee una interfase simplificada para enviarle comandos a la impresora fiscal</remarks>
        </member>
        <member name="T:FiscalNET.DriverFiscal">
            <summary>Interfase de bajo nivel generica para impresoras fiscales</summary>
            <remarks>Esta interfase provee una interfase de bajo nivel para 
            enviarle comandos a la impresora fiscal.Para mas información sobre su uso, 
            consulte el manual de programación</remarks>
        </member>
        <member name="M:FiscalNET.DriverFiscal.#ctor">
            <summary>
              Inicializa una nueva instancia de la clase DriverFiscal
            </summary>
        </member>
        <member name="M:FiscalNET.DriverFiscal.Finalize">
            <summary>Destructor de la instancia del objecto</summary>
            <remarks>Destructor de la instancia del objecto</remarks>
        </member>
        <member name="M:FiscalNET.DriverFiscal.IF_OPEN(System.String,System.Int32)">
             <summary>Abre el puerto de comunicaciones para enviarle comandos a la impresora fiscal</summary>
            	<param name='strPort'> puerto de comunicaciones (COM1,COM2, COM3, etc)</param>
            	<param name='nSpeed'>Expresión numérica que especifica la velocidad (9600,19200,38400,etc)</param>
             <returns>0 si no hay error, != 0 si hay un error</returns>
             <remarks>El puerto de comunicaciones debe coincidir con el puerto donde se encuentra 
             conectada la impresora fiscal. Asimismo la velocidad debe coincidir con la velocidad de transferencia de datos del impresor fiscal.</remarks>
        </member>
        <member name="M:FiscalNET.DriverFiscal.IF_CLOSE">
            <summary>Cierra el puerto de comunicaciones</summary>
            <returns>0 si no hay error, -1 si se produjo un error.</returns>
            <remarks>Luego de cerrar el puerto, deberá abrir el puerto nuevamente para poder enviarle comandos a la impresora fiscal.</remarks>
        </member>
        <member name="M:FiscalNET.DriverFiscal.IF_READ(System.Int32)">
             <summary>Lectura de un campo de la respuesta del controlador fiscal como una cadena de caracteres</summary>
            	<param name='nField'>Un número entero con el número de campo que se quiere recuperar.</param>
             <returns>Una cadena de caracteres con el valor del campo</returns>
             <remarks>Consulte el manual incluido con el driver para mas información sobre los campos que devuelve cada comando</remarks>
        </member>
        <member name="M:FiscalNET.DriverFiscal.IF_WRITE(System.String)">
             <summary>Envía un comando a la impresora fiscal a través del puerto de comunicaciones. El puerto de comunicaciones debe estar abierto con la función IF_OPEN()</summary>
            	<param name='strVal'>Una cadena de caracteres con el comando a enviar junto con los parámetros.</param>
             <returns>0 si no hay error, -1 si se produjo un error.</returns>
             <remarks>Consulte el manual incluido con el driver para conocer la lista de comandos</remarks>
        </member>
        <member name="M:FiscalNET.DriverFiscal.IF_ERROR1(System.Int32)">
             <summary>Devuelve el estado del mecanismo impresor como un número entero de 16 bits o el estado del bit nBit {1,16} </summary>
            	<param name='nBit'>Nro de bit a testear. ( 1 al 16 )</param>
             <returns>El estado del bit nBit ( 1= On, 0= Off). Si se envía nBit = 0 devuelve todo el código de estado</returns>
             <remarks>Consulte el manual incluido con el driver para más información sobre los códigos de estado</remarks>
        </member>
        <member name="M:FiscalNET.DriverFiscal.IF_ERROR2(System.Int32)">
             <summary>Devuelve el estado del controlador fiscal como un número entero de 16 bits o el estado del bit nBit {1,16} </summary>
            	<param name='nBit'>Nro de bit a testear. ( 1 al 16 )</param>
             <returns>El estado del bit nBit ( 1= On, 0= Off). Si se envía nBit = 0 devuelve todo el código de estado</returns>
             <remarks>Consulte el manual incluido con el driver para más información sobre los códigos de estado</remarks>
        </member>
        <member name="M:FiscalNET.DriverFiscal.IF_TRACE(System.Boolean)">
             <summary>Habilitar o deshabilitar el modo de depuración</summary>
            	<param name='bTrace'>variable booleana: 1 (TRUE) para habilitar o 0 (FALSE) para deshabilitar el modo depuración</param>
             <remarks>Los errores se grabaran en el archivo debug.log</remarks>
        </member>
        <member name="M:FiscalNET.DriverFiscal.IF_SETLOG(System.String)">
             <summary>Configurar el archivo de captura de información de depuración</summary>
            	<param name='strLogFile'>Nombre del archivo de captura de depuración</param>
             <remarks>Esta función es obsoleta y se incluye por compatibilidad con versiones anteriores. 
            	El nombre del archivo es siempre debug.log y se graba en el directorio de la aplicación</remarks>
        </member>
        <member name="E:FiscalNET.DriverFiscal.OnDriverEvent">
            <summary>Este evento se dispara cuando se produce un error en la carga del driver, o en el uso de la interfase fiscal</summary>
            <remarks></remarks>
        </member>
        <member name="E:FiscalNET.DriverFiscal.OnFiscalEvent">
            <summary>Este evento se dispara cuando se produce un error en el envío de un comando a la impresora fiscal</summary>
            <remarks></remarks>
        </member>
        <member name="P:FiscalNET.DriverFiscal.Printer">
            <summary>Configurar el modelo de la impresora fiscal a utilizar</summary>
            <remarks>Consulte la tabla de identificadores en el manual que se incluye con el driver</remarks>
        </member>
        <member name="P:FiscalNET.DriverFiscal.SerialNumber">
            <summary>Número de Serie</summary>
            <remarks>Número de Serie</remarks>
        </member>
        <member name="P:FiscalNET.DriverFiscal.Exceptions">
            <summary>
            Habilitar o deshabilitar la generación de excepciones.
            </summary>
            <remarks>Habilita o deshabilita las generación de excepciones cuando se produce algun error.</remarks>
            <value>m_bNoExceptions</value>
        </member>
        <member name="M:FiscalNET.BixolonPA.#ctor">
            <summary>Inicializa una nueva instancia de la clase BixolonPA y carga automaticamente el driver
            correspondiente. </summary>
            <remarks>Debera asegurarse de copiar el driver en el mismo directorio del componente FiscalNET.dll</remarks>
        </member>
        <member name="M:FiscalNET.BixolonPA.OpenPrinter(System.Int16,System.Int16)">
            <summary>Abrir Impresora Fiscal</summary>
            <remarks>Este comando y el de log-on del cajero deberán ejecutarse antes de los comandos de Ventas y de comprobantes</remarks>
            <param name='nVar1'>Nro de PC (siempre 01) (nn)</param>
            <param name='nVar2'>Número de secreto (ASCII) (nnnnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.ClosePrinter">
            <summary>Cerrar Impresora Fiscal</summary>
            <remarks>En caso de enviar este comando sin emitir INFORME FISCAL Z, automáticamente se emitirá INFORME FISCAL DIARIO Z. Toda información sobre impuestos y todo otro dato que debiera ser grabado, se escribirá en la memoria fiscal. Posteriormente, se borrarán todos los DATOS DEL INFORME DIARIO. En caso de que haya DATOS DEL INFORME que usted necesite, ejecútelos previamente antes de este comando</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.TrainingMode(System.String)">
            <summary>Inicio – Fin modo de Entrenamiento.</summary>
            <remarks>El modo entrenamiento permite realizar transacciones de ventas de prueba antes de la inicialización fiscal.</remarks>
            <param name='byVar1'>Modo {IF}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.Login(System.Int16)">
            <summary>Logon - Cajero</summary>
            <remarks>Es necesario asignar un cajero mediante este comando antes del primer registro después del comando de abrir impresora fiscal. Este comando tiene efecto sólo luego de abrir la IF, en medio de una transacción, no tiene ningún efecto. Si aún no se ha programado el mensaje del logo del encabezamiento, es obligatorio hacerlo antes de este comando. Vease tambien Programación Código Secreto y Nombre del Cajero en el punto 22-L del manual y la funcion SetUserData.</remarks>
            <param name='nVar1'>Número secreto(ASCII) (nnnnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.Logoff">
            <summary>Log-off cajero</summary>
            <remarks>Este comando no asignará ningún cajero. Este comando sólo es efectivo luego de abrir la IF y ya se realizó el log-on del CAJERO. En medio de una transacción, no tiene efecto alguno. No es necesario ejecutar este comando para sólo cambiar el cajero asignado.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.BarCode(System.String,System.String,System.String)">
            <summary>Códigos de Barra</summary>
            <remarks>Este comando permite imprimir un código de barra como referencia de un producto dentro de la factura y en el pie de la factura.</remarks>
            <param name='byVar1'>Tipo de Codigos de Barra {012}</param>
            <param name='strVar2'>Datos EAN 13 / ITS 2 de 5 / CODE 128 (max 32 bytes)</param>
            <param name='byVar3'>Modo {IP}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.Cancel">
            <summary>Cancelación</summary>
            <remarks>Cancela cualquier comprobante fiscal que se encuentre abierto</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.DirectPayment(System.Int16)">
            <summary>Pago Directo.</summary>
            <remarks>Este comando permite cerrar una factura y asignar el monto total a un medio de pago. Al ejecutar este comando se abre la gaveta de dinero.</remarks>
            <param name='nVar1'>Medio de pago ( 1 al 16) (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.LastItemCancel">
            <summary>Corrección de Error.</summary>
            <remarks>Este comando cancela la última entrada de un item o de un descuento.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.LastItemDiscount(System.Double,System.String)">
            <summary>Realiza un descuento sobre el último item registrado o sobre el subtotal.</summary>
            <remarks>Para realizar un descuento sobre el subtotal, se debe ejecutar previamente el comando Subtotal, y el monto del descuento se aplica de forma proporcional sobre todos los artículos.</remarks>
            <param name='dblVar1'>Porcentaje / Monto directo  (nn.nn)</param>
            <param name='byVar2'>Calificador {DdPp}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.SetCustomerData(System.Int16,System.String)">
            <summary>Datos comprador factura</summary>
            <remarks>Este comando permite ingresar los datos del cliente en una factura, para que el documento pueda dar derecho a crédito fiscal. Este comando es válido antes de registrar un producto.</remarks>
            <param name='nVar1'>Nro de línea ( 1 al 9) (n)</param>
            <param name='strVar2'>Nombre (max 40 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.SetCustomerInfo(System.String,System.String)">
            <summary>Este comando permite ingresar la razón social y el RUC del cliente en una factura / nota de débito / nota de crédito.</summary>
            <param name='strVar1'>Nombre o Razón Social del comprador (max 40 bytes)</param>
            <param name='strVar2'>Número de Registro Unico de Contribuyente (RUC) del comprador (max 20 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.SetCustomerName(System.String)">
            <summary>Este comando permite ingresar la razón social del cliente en una factura / nota de débito / nota de crédito.</summary>
            <param name='strVar1'>Nombre o Razón Social del comprador (max 40 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.SetCustomerTIN(System.String)">
            <summary>Este comando permite ingresar el RUC del Cliente.</summary>
            <param name='strVar1'>Número de Registro Unico de Contribuyente (RUC) del comprador (max 20 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.SetEmbarkNumber(System.String)">
            <summary>Este comando permite ingresar el número de la factura a la cual se le está haciendo una nota de Crédito/Débito</summary>
            <param name='strVar1'>Nro. de comprobante original (max 22 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.Subtotal">
            <summary>Subtotal con Impresión</summary>
            <remarks>Estos comandos permiten imprimir o mostrar en pantalla el monto correspondiente al subtotal de las ventas. Este comando debe ser ejecutado antes de realizar undescuento del subtotal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.TotalTender(System.Int16,System.Double)">
            <summary>Medio de Pago (Pago Parcial).</summary>
            <remarks>Este comando permite asignar parte del monto total de una factura a un medio de pago. Si el monto ingresado es superior al monto del total, se cierra la factura y se abre la gaveta de dinero.</remarks>
            <param name='nVar1'>Medio de pago(1 al 16) (nn)</param>
            <param name='dblVar2'>Monto de pago (nnnnnnnnnn.nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.PrintRefundItem(System.String,System.Double,System.Double,System.Int16)">
            <summary>Registro de Producto para Devolución / Nota de Crédito..</summary>
            <remarks>Este comando permite registrar productos en una nota de crédito. Cuando se envía este comando por primera vez, se imprime en el ticket la leyenda: "NOTA DE CREDITO"</remarks>
            <param name='strVar1'>Descripción del item (max 116 bytes)</param>
            <param name='dblVar2'>Cantidad (nnnnn.nnn)</param>
            <param name='dblVar3'>Monto del item (nnnnnnnn.nn)</param>
            <param name='nVar4'>Tasa de iva a utilizar (n)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.PrintDebitItem(System.String,System.Double,System.Double,System.Int16)">
            <summary>Registro de Producto en una Nota de Débito..</summary>
            <remarks>Este comando permite registrar productos en una nota de débito. Cuando se envía este comando por primera vez, se imprime en el ticket la leyenda: "NOTA DE DEBITO"</remarks>
            <param name='strVar1'>Descripción del item (max 116 bytes)</param>
            <param name='dblVar2'>Cantidad (nnnnn.nnn)</param>
            <param name='dblVar3'>Monto del item (nnnnnnnn.nn)</param>
            <param name='nVar4'>Tasa de iva a utilizar (n)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.PrintFiscalText(System.String)">
            <summary>Mensaje en Factura.</summary>
            <remarks>Este comando permite imprimir mensajes comerciales necesarios para la descripción de un artículo.</remarks>
            <param name='strVar1'>Texto Fiscal (max 20 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.PrintLineItem(System.String,System.Double,System.Double,System.Int16,System.String)">
            <summary>Imprimir item de línea en  tique fiscal</summary>
            <remarks>El registro de un producto solamente es posible si la tasa a la cual está ligada está registrada.</remarks>
            <param name='strVar1'>Descripcion del item (max 116 bytes)</param>
            <param name='dblVar2'>Cantidad (nnnnn.nnn)</param>
            <param name='dblVar3'>Monto del item (nnnnnnnn.nn)</param>
            <param name='nVar4'>Tasa de iva a utilizar (n)</param>
            <param name='byVar5'>Calificador de linea de item</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.PrintCashItem(System.Int16,System.Double,System.String)">
            <summary>Egreso / Ingreso de Efectivo (P/O, R/A).</summary>
            <remarks>Estos comandos permiten reportar ingresos y egresos de efectivo, o de otro medio de pago, de la gaveta de dinero. Son necesarios para realizar el arqueo de la caja.</remarks>
            <param name='nVar1'>Medio de pago (nn)</param>
            <param name='dblVar2'>Monto de pago (nnnnnnnnnn.nn)</param>
            <param name='byVar3'>Calificador de la operacion {01}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.CloseCashReceipt">
            <summary>Fin de Reporte de Egreso / Ingreso de Efectivo</summary>
            <remarks>Este comando finaliza un reporte de egresos / ingreso de un medio de pago. Al ejecutar este comando, se cierra el reporte y se abre la gaveta de dinero.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.PrintNonFiscalText(System.String,System.String)">
            <summary>Texto en documento no fiscal</summary>
            <remarks>En un documento no fiscal se imprime automáticamente cada cuatro líneas la siguiente leyenda</remarks>
            <param name='strVar1'>Texto no fiscal (max 40 bytes)</param>
            <param name='byVar2'>Modo {01}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.StatusRequest(System.String)">
            <summary>Consulta de estado</summary>
            <remarks>Este comando permite leer desde el host (PC) el estado de la impresora</remarks>
            <param name='byVar1'>Codigo de la operacion {12345N}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.ProgramTaxes(System.String,System.Double,System.String,System.Double,System.String,System.Double)">
            <summary>Programación de Tasa de Impuesto.</summary>
            <remarks>Este comando es válido solo si no existen ventas registradas.</remarks>
            <param name='byVar1'>Tipo de Tasa 1 {01}</param>
            <param name='dblVar2'>Valor de la Tasa 1 (nn.nn)</param>
            <param name='byVar3'>Tipo de Tasa 2 {01}</param>
            <param name='dblVar4'>Valor de la Tasa 2 (nn.nn)</param>
            <param name='byVar5'>Tipo de Tasa 3 {01}</param>
            <param name='dblVar6'>Valor de la Tasa 3 (nn.nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.SaveTaxes">
            <summary>Registrar Tasas en la Memoria Fiscal.</summary>
            <remarks>Este comando se utiliza para confirmar que las tasas registradas en RAM son correctas y grabar este valor en la memoria fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.ProgramClerk(System.Int16,System.Int16,System.String)">
            <summary>Programación de Datos del Cajero.</summary>
            <remarks>Este comando permite definir la información relativa a un cajero.</remarks>
            <param name='nVar1'>Nro de Cajero (1 al 15) (nn)</param>
            <param name='nVar2'>Codigo - Password (nnnnn) (nnnnn)</param>
            <param name='strVar3'>Nombre del cajero (max 16 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.ProgramPaymentMedia(System.Int16,System.String)">
            <summary>Programación de nombre de medio de pago.</summary>
            <remarks>Este comando permite definir los descriptores para cada medio de pago.</remarks>
            <param name='nVar1'>Nro medio de pago (1 al 16) (nn)</param>
            <param name='strVar2'>Nombre del medio de pago (max 14 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.SetDate(System.String)">
            <summary>Programación de fecha.</summary>
            <remarks>Este comando solo se puede ejecutar si no hay totales en la memoria de trabajo.</remarks>
            <param name='strVar1'>Fecha (DDMMYY) (max 6 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.SetTime(System.String)">
            <summary>Programación de hora.</summary>
            <remarks>Este comando solo se puede ejecutar si no hay totales en la memoria de trabajo.</remarks>
            <param name='strVar1'>Hora (HHMMSS) (max 6 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.ProgramMessage(System.Int16,System.String)">
            <summary>Programación de Mensajes.</summary>
            <remarks>Este comando permite programar los diferentes mensajes que utiliza la máquina.</remarks>
            <param name='nVar1'>Nro de mensaje 0 al 59  (nn)</param>
            <param name='strVar2'>Descripción del mensaje (max 20 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.ProgramSymbol(System.Int16,System.String)">
            <summary>Programación de Símbolos.</summary>
            <remarks>Este comando permite programar los diferentes símbolos que utiliza la máquina.</remarks>
            <param name='nVar1'>Nro de símbolo 0 al 123  (nnn)</param>
            <param name='strVar2'>Descripción del símbolo (max 14 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.ConfigureControllerByOne(System.Int16,System.Int16)">
            <summary>Configuracion del controlador por parámetros</summary>
            <remarks>Este comando permite definir el valor de las banderas utilizadas por el equipo.</remarks>
            <param name='nVar1'>Nro de Parametro (1..20) (nn)</param>
            <param name='nVar2'>Valor correspondiente al parámetro (0,1) (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.PrintConfigurationData">
            <summary>Imprimir valor de programación.</summary>
            <remarks>Este comando imprime los valores almacenados para: tasa de impuestos, nombres cajeros, medios de pagos, simbolos, mensajes</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.DailyClose(System.String,System.String)">
            <summary>Reportes de Cierres.</summary>
            <remarks>Este comando permite generar reportes de cierre de cajero (X), y reportes de cierres diarios fiscales (Z). Los reportes de cierre diario (reportes Z) son almacenados en la memoria fiscal al momento de imprimirse.</remarks>
            <param name='byVar1'>Modo {XZ}</param>
            <param name='byVar2'>Tipo de Cierre {01}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.DailyCloseByDate(System.String,System.String,System.String,System.String)">
            <summary>Reportes de Memoria Fiscal por Fechas.</summary>
            <remarks>Este comando permite imprimir un reporte de auditoría definido entre dos fechas.</remarks>
            <param name='strVar1'>Fecha 1 (DDMMYY) (max 6 bytes)</param>
            <param name='strVar2'>Fecha 2 (DDMMYY) (max 6 bytes)</param>
            <param name='byVar3'>Imprimir {IU}</param>
            <param name='byVar4'>Modo {ASM}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.DailyCloseByNumber(System.Int16,System.Int16,System.String,System.String)">
            <summary>Reportes de Auditoria por número de Z</summary>
            <remarks>Este comando permite imprimir un reporte de auditoría definido entre dos números de reportes de cierre diario.</remarks>
            <param name='nVar1'>Nro de Z inicial del período (nnnn)</param>
            <param name='nVar2'>Nro de Z final del período (nnnn)</param>
            <param name='byVar3'>Imprimir {IU}</param>
            <param name='byVar4'>Modo {ASM}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.OpenDrawer">
            <summary>Apertura de Gaveta de Dinero.</summary>
            <remarks>Este comando permite abrir la gaveta de dinero.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.ResetPrinterBuffer">
            <summary>Limpiar Buffer de Impresión</summary>
            <remarks>Este comando elimina toda la data y errores del buffer de impresión.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.PrintTest">
            <summary>Imprimir pagina de prueba</summary>
            <remarks>Imprime pagina de prueba y la información de la versión del software</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.SetHeaderTrailer(System.Int16,System.String)">
            <summary>Programación de encabezado y pie de página.</summary>
            <remarks>Este comando permite definir los mensajes que se muestran en el encabezado y pie de página de los documentos.</remarks>
            <param name='nVar1'>Nro de Línea (nn)</param>
            <param name='strVar2'>Texto (max 40 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.DisplayDateTime">
            <summary>Muestra en el display la hora y la fecha.</summary>
            <remarks>No es posible ejecutar este comando durante una transacción.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.DisplayCommercial">
            <summary>Muestra en la parte superior del display el mensaje comercial.</summary>
            <remarks>No es posible ejecutar este comando durante una transacción.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.ProgramCommercial(System.String)">
            <summary>Programación de Mensaje Comercial.</summary>
            <remarks>Este comando permite programar el mensaje comercial que se muestra en el display</remarks>
            <param name='strVar1'>Mensaje 50 Caracteres (max 50 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonPA.DisplayMessage(System.String,System.String)">
            <summary>Muestra un mensaje en el display.</summary>
            <param name='byVar1'>Nro de linea {UL}</param>
            <param name='strVar2'>Mensaje a exhibir (max 20 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="T:FiscalNET.BixolonVE">
            <summary>Interfase de Alto Nivel para Impresoras Fiscales Aclas,BMC,Bixolon,OKI de Venezuela</summary>
            <remarks>Esta interfase provee una interfase simplificada para enviarle comandos a la impresora fiscal</remarks>
        </member>
        <member name="M:FiscalNET.BixolonVE.#ctor">
            <summary>Inicializa una nueva instancia de la clase BixolonVE y carga automaticamente el driver
            correspondiente. </summary>
            <remarks>Debera asegurarse de copiar el driver en el mismo directorio del componente FiscalNET.dll</remarks>
        </member>
        <member name="M:FiscalNET.BixolonVE.OpenPrinter(System.Int16,System.Int16)">
            <summary>Abrir Impresora Fiscal</summary>
            <remarks>Este comando y el de log-on del cajero deberán ejecutarse antes de los comandos de Ventas y de comprobantes</remarks>
            <param name='nVar1'>Nro de PC (siempre 01) (nn)</param>
            <param name='nVar2'>Número de secreto (ASCII) (nnnnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.ClosePrinter">
            <summary>Cerrar Impresora Fiscal</summary>
            <remarks>En caso de enviar este comando sin emitir INFORME FISCAL Z, automáticamente se emitirá INFORME FISCAL DIARIO Z. Toda información sobre impuestos y todo otro dato que debiera ser grabado, se escribirá en la memoria fiscal. Posteriormente, se borrarán todos los DATOS DEL INFORME DIARIO. En caso de que haya DATOS DEL INFORME que usted necesite, ejecútelos previamente antes de este comando</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.TrainingMode(System.String)">
            <summary>Inicio – Fin modo de Entrenamiento.</summary>
            <remarks>El modo entrenamiento permite realizar transacciones de ventas de prueba antes de la inicialización fiscal.</remarks>
            <param name='byVar1'>Modo {IF}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.Login(System.Int16)">
            <summary>Logon - Cajero</summary>
            <remarks>Es necesario asignar un cajero mediante este comando antes del primer registro después del comando de abrir impresora fiscal. Este comando tiene efecto sólo luego de abrir la IF, en medio de una transacción, no tiene ningún efecto. Si aún no se ha programado el mensaje del logo del encabezamiento, es obligatorio hacerlo antes de este comando. Vease tambien Programación Código Secreto y Nombre del Cajero en el punto 22-L del manual y la funcion SetUserData.</remarks>
            <param name='nVar1'>Número secreto(ASCII) (nnnnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.Logoff">
            <summary>Log-off cajero</summary>
            <remarks>Este comando no asignará ningún cajero. Este comando sólo es efectivo luego de abrir la IF y ya se realizó el log-on del CAJERO. En medio de una transacción, no tiene efecto alguno. No es necesario ejecutar este comando para sólo cambiar el cajero asignado.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.SetCustomerData(System.Int16,System.String)">
            <summary>Datos comprador factura</summary>
            <remarks>Este comando permite ingresar los datos del cliente en una factura, para que el documento pueda dar derecho a crédito fiscal. Este comando es válido antes de registrar un producto.</remarks>
            <param name='nVar1'>Nro de línea ( 1 al 12) (nn)</param>
            <param name='strVar2'>Nombre (max 40 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.SetCustomerTIN(System.String)">
            <summary>Este comando permite ingresar el RIF o C.I. del Cliente.</summary>
            <remarks>Este comando esta disponible solo en las impresoras fiscales Dascom TALLY 1125.</remarks>
            <param name='strVar1'>Número de Registro Unico de Información Fiscal (RIF) o CI del comprador (max 40 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.SetCustomerInfo1(System.String)">
            <summary>Este comando permite ingresar datos de la Razon Social (linea 1).</summary>
            <remarks>Este comando esta disponible solo en las impresoras fiscales Dascom TALLY 1125.</remarks>
            <param name='strVar1'>Nombre o Razón Social del comprador (linea 1) (max 40 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.SetCustomerInfo2(System.String)">
            <summary>Este comando permite ingresar datos de la Razon Social (linea 1).</summary>
            <remarks>Este comando esta disponible solo en las impresoras fiscales Dascom TALLY 1125.</remarks>
            <param name='strVar1'>Nombre o Razón Social del comprador (linea 2) (max 40 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.SetCustomerExtraData(System.String,System.String,System.String)">
            <summary>Este comando permite programar la Razón Social y RIF del cliente en el encabezado de una factura / nota de débito / nota de crédito.</summary>
            <remarks>Este comando esta disponible solo en las impresoras fiscales Dascom TALLY 1125.</remarks>
            <param name='strVar1'>Nombre o Razón Social del comprador (línea 1) (max 40 bytes)</param>
            <param name='strVar2'>Nombre o Razón Social del comprador (línea 2) (max 40 bytes)</param>
            <param name='strVar3'>Número de RIF (Registro Unico de Información Fiscal) o CI del comprador (max 40 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.PrintLineItem(System.String,System.Double,System.Double,System.Int16,System.String)">
            <summary>Imprimir item de línea en  tique fiscal</summary>
            <remarks>El registro de un producto solamente es posible si la tasa a la cual está ligada está registrada.</remarks>
            <param name='strVar1'>Descripcion del item (max 40 bytes)</param>
            <param name='dblVar2'>Cantidad (nnnnn.nnn)</param>
            <param name='dblVar3'>Monto del item (nnnnnnnn.nn)</param>
            <param name='nVar4'>Tasa de iva a utilizar (n)</param>
            <param name='byVar5'>Calificador de linea de item</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.LastItemCancel">
            <summary>Corrección de Error.</summary>
            <remarks>Este comando cancela la última entrada de un item o de un descuento.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.Subtotal">
            <summary>Subtotal con Impresión</summary>
            <remarks>Estos comandos permiten imprimir o mostrar en pantalla el monto correspondiente al subtotal de las ventas. Este comando debe ser ejecutado antes de realizar undescuento del subtotal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.LastItemDiscount(System.Double,System.String)">
            <summary>Realiza un descuento sobre el último item registrado o sobre el subtotal.</summary>
            <remarks>Para realizar un descuento sobre el subtotal, se debe ejecutar previamente el comando Subtotal, y el monto del descuento se aplica de forma proporcional sobre todos los artículos.</remarks>
            <param name='dblVar1'>Porcentaje / Monto directo  (nn.nn)</param>
            <param name='byVar2'>Calificador {DdPp}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.DirectPayment(System.Int16)">
            <summary>Pago Directo.</summary>
            <remarks>Este comando permite cerrar una factura y asignar el monto total a un medio de pago. Al ejecutar este comando se abre la gaveta de dinero.</remarks>
            <param name='nVar1'>Medio de pago ( 1 al 16) (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.TotalTender(System.Int16,System.Double)">
            <summary>Medio de Pago (Pago Parcial).</summary>
            <remarks>Este comando permite asignar parte del monto total de una factura a un medio de pago. Si el monto ingresado es superior al monto del total, se cierra la factura y se abre la gaveta de dinero.</remarks>
            <param name='nVar1'>Medio de pago(1 al 16) (nn)</param>
            <param name='dblVar2'>Monto de pago (nnnnnnnnnn.nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.PrintFiscalText(System.String)">
            <summary>Mensaje en Factura.</summary>
            <remarks>Este comando permite imprimir mensajes comerciales necesarios para la descripción de un artículo.</remarks>
            <param name='strVar1'>Texto Fiscal (max 20 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.RefundItem(System.String,System.Double,System.Double,System.Int16)">
            <summary>Registro de Producto para devolución.</summary>
            <remarks>Este comando permite registrar productos en una nota de crédito. Cuando se envía este comando por primera vez, se imprime en el ticket la leyenda: "NOTA DE CREDITO"</remarks>
            <param name='strVar1'>Descripción del item (max 40 bytes)</param>
            <param name='dblVar2'>Cantidad (nnnnn.nnn)</param>
            <param name='dblVar3'>Monto del item (nnnnnnnn.nn)</param>
            <param name='nVar4'>Tasa de iva a utilizar (n)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.RefundClose(System.Double,System.Int16)">
            <summary>Cierre de devolución.</summary>
            <remarks>Permite asignar un monto del total de la devolución a un medio de pago.</remarks>
            <param name='dblVar1'>Monto de pago 12 dígitos (nnnnnnnnnn.nn)</param>
            <param name='nVar2'>Medio de Pago (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.Cancel">
            <summary>Cancelación</summary>
            <remarks>Cancela cualquier comprobante fiscal que se encuentre abierto</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.BarCode(System.Int16,System.String,System.String,System.String)">
            <summary>Código de Barras</summary>
            <remarks>Éste comando permite imprimir un código de barra como referencia de un producto dentro de la factura y en el pie de la factura.</remarks>
            <param name='nVar1'>Tipo de código</param>
            <param name='strVar2'>Datos (max 32 bytes)</param>
            <param name='byVar3'>Impresión numérica {PN}</param>
            <param name='byVar4'>Cuando imprimir {PN}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.PrintCashItem(System.Int16,System.Double,System.String)">
            <summary>Egreso / Ingreso de Efectivo (P/O, R/A).</summary>
            <remarks>Estos comandos permiten reportar ingresos y egresos de efectivo, o de otro medio de pago, de la gaveta de dinero. Son necesarios para realizar el arqueo de la caja.</remarks>
            <param name='nVar1'>Medio de pago (nn)</param>
            <param name='dblVar2'>Monto de pago (nnnnnnnnnn.nn)</param>
            <param name='byVar3'>Calificador de la operacion {01}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.CloseCashReceipt">
            <summary>Fin de Reporte de Egreso / Ingreso de Efectivo</summary>
            <remarks>Este comando finaliza un reporte de egresos / ingreso de un medio de pago. Al ejecutar este comando, se cierra el reporte y se abre la gaveta de dinero.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.PrintNonFiscalText(System.String,System.String)">
            <summary>Texto en documento no fiscal</summary>
            <remarks>En un documento no fiscal se imprime automáticamente cada cuatro líneas la siguiente leyenda</remarks>
            <param name='strVar1'>Texto no fiscal (max 40 bytes)</param>
            <param name='byVar2'>Modo {01}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.StatusRequest(System.String)">
            <summary>Consulta de estado</summary>
            <remarks>Este comando permite leer desde el host (PC) el estado de la impresora</remarks>
            <param name='byVar1'>Codigo de la operacion {12367N}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.ProgramTaxes(System.String,System.Double,System.String,System.Double,System.String,System.Double)">
            <summary>Programación de Tasa de Impuesto.</summary>
            <remarks>Este comando es válido solo si no existen ventas registradas.</remarks>
            <param name='byVar1'>Tipo de Tasa 1 {01}</param>
            <param name='dblVar2'>Valor de la Tasa 1 (nn.nn)</param>
            <param name='byVar3'>Tipo de Tasa 2 {01}</param>
            <param name='dblVar4'>Valor de la Tasa 2 (nn.nn)</param>
            <param name='byVar5'>Tipo de Tasa 3 {01}</param>
            <param name='dblVar6'>Valor de la Tasa 3 (nn.nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.SaveTaxes">
            <summary>Registrar Tasas en la Memoria Fiscal.</summary>
            <remarks>Este comando se utiliza para confirmar que las tasas registradas en RAM son correctas y grabar este valor en la memoria fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.ProgramClerk(System.Int16,System.String,System.String)">
            <summary>Programación de Datos del Cajero.</summary>
            <remarks>Este comando permite definir la información relativa a un cajero.</remarks>
            <param name='nVar1'>Nro de Cajero (1 al 15) (nn)</param>
            <param name='strVar2'>Password (max 5 bytes)</param>
            <param name='strVar3'>Nombre del cajero (max 16 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.ProgramPaymentMedia(System.Int16,System.String)">
            <summary>Programación de nombre de medio de pago.</summary>
            <remarks>Este comando permite definir los descriptores para cada medio de pago.</remarks>
            <param name='nVar1'>Nro medio de pago (1 al 16) (nn)</param>
            <param name='strVar2'>Nombre del medio de pago (max 14 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.SetDate(System.String)">
            <summary>Programación de fecha.</summary>
            <remarks>Este comando solo se puede ejecutar si no hay totales en la memoria de trabajo.</remarks>
            <param name='strVar1'>Fecha (DDMMYY) (max 6 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.SetTime(System.String)">
            <summary>Programación de hora.</summary>
            <remarks>Este comando solo se puede ejecutar si no hay totales en la memoria de trabajo.</remarks>
            <param name='strVar1'>Hora (HHMMSS) (max 6 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.ProgramSymbol(System.Int16,System.String)">
            <summary>Programación de Símbolos.</summary>
            <remarks>Este comando permite programar los diferentes símbolos que utiliza la máquina.</remarks>
            <param name='nVar1'>Nro de símbolo 0 al 123  (nnn)</param>
            <param name='strVar2'>Descripción del símbolo (max 14 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.ConfigureControllerByOne(System.Int16,System.Int16)">
            <summary>Configuracion del controlador por parámetros</summary>
            <remarks>Este comando permite definir el valor de las banderas utilizadas por el equipo.</remarks>
            <param name='nVar1'>Nro de Parametro (1..20) (nn)</param>
            <param name='nVar2'>Valor booleano del parámetro (0,1) (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.PrintConfigurationData">
            <summary>Imprimir valor de programación.</summary>
            <remarks>Este comando imprime los valores almacenados para: tasa de impuestos, nombres cajeros, medios de pagos, simbolos, mensajes</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.DailyClose(System.String,System.String)">
            <summary>Reportes de Cierres.</summary>
            <remarks>Este comando permite generar reportes de cierre de cajero (X), y reportes de cierres diarios fiscales (Z). Los reportes de cierre diario (reportes Z) son almacenados en la memoria fiscal al momento de imprimirse.</remarks>
            <param name='byVar1'>Modo {XZ}</param>
            <param name='byVar2'>Tipo de Cierre {01}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.DailyCloseByDate(System.String,System.String,System.String,System.String)">
            <summary>Reportes de Memoria Fiscal por Fechas.</summary>
            <remarks>Este comando permite imprimir un reporte de auditoría definido entre dos fechas.</remarks>
            <param name='strVar1'>Fecha 1 (DDMMYY) (max 6 bytes)</param>
            <param name='strVar2'>Fecha 2 (DDMMYY) (max 6 bytes)</param>
            <param name='byVar3'>Imprimir {IU}</param>
            <param name='byVar4'>Modo {ASM}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.DailyCloseByNumber(System.Int16,System.Int16,System.String,System.String)">
            <summary>Reportes de Auditoria por número de Z</summary>
            <remarks>Este comando permite imprimir un reporte de auditoría definido entre dos números de reportes de cierre diario.</remarks>
            <param name='nVar1'>Nro de Z inicial del período (nnnn)</param>
            <param name='nVar2'>Nro de Z final del período (nnnn)</param>
            <param name='byVar3'>Imprimir {IU}</param>
            <param name='byVar4'>Modo {ASM}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.Reprint">
            <summary>Reimprimir el último documento almacenado en la memoria de auditoria.</summary>
            <remarks>Sólo disponible en impresoras fiscales con memoria de auditoria.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.ReprintByDate(System.String,System.String,System.String)">
            <summary>Re-impresión de documentos almacenados en memoria de auditoria por rango de fechas</summary>
            <remarks>Sólo disponible en impresoras fiscales con memoria de auditoria.</remarks>
            <param name='strVar1'>Fecha inicial del período (YYMMDD) (max 6 bytes)</param>
            <param name='strVar2'>Fecha final del período (YYMMDD) (max 6 bytes)</param>
            <param name='byVar3'>Modo {FCNZR}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.ReprintByNumber(System.Int16,System.Int16,System.String)">
            <summary>Re-impresión de documentos almacenados en memoria de auditoria por rango de número</summary>
            <remarks>Sólo disponible en impresoras fiscales con memoria de auditoria.</remarks>
            <param name='nVar1'>Nro. de documento inicial del período (nnnnnnn)</param>
            <param name='nVar2'>Nro. de documento final del período (nnnnnnn)</param>
            <param name='byVar3'>Modo {FCNZR}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.ReprintByTIN(System.String,System.String)">
            <summary>Re-impresión de documentos almacenados en memoria de auditoria por nro. de Cédula o RIF</summary>
            <remarks>Sólo disponible en impresoras fiscales con memoria de auditoria.</remarks>
            <param name='strVar1'>Nro. de RIF o CI (max 9 bytes)</param>
            <param name='byVar2'>Modo {JGVE}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.PrintAuditStatusReport">
            <summary>Imprimir Estado de la Memoria de Auditoría</summary>
            <remarks>Por medio de este comando la impresora genera un ticket con la información correspondiente al estado general de la memoria de Auditoria.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.OpenDrawer">
            <summary>Apertura de Gaveta de Dinero.</summary>
            <remarks>Este comando permite abrir la gaveta de dinero.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.ResetPrinterBuffer">
            <summary>Limpiar Buffer de Impresión</summary>
            <remarks>Este comando elimina toda la data y errores del buffer de impresión.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.PrintTest">
            <summary>Imprimir pagina de prueba</summary>
            <remarks>Imprime pagina de prueba y la información de la versión del software</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.SetHeaderTrailer(System.Int16,System.String)">
            <summary>Programación de encabezado y pie de página.</summary>
            <remarks>Este comando permite definir los mensajes que se muestran en el encabezado y pie de página de los documentos.</remarks>
            <param name='nVar1'>Nro de Línea (nn)</param>
            <param name='strVar2'>Texto (max 40 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.SendRawCommand(System.String)">
            <summary>Enviar un comando en el formato nativo de la impresora fiscal</summary>
            <remarks>Este comando permite mandarle cualquier comando al controlador fiscal en formato nativo. El driver automáticamente empaqueta el frame de datos.</remarks>
            <param name='strVar1'>Una cadena de caracteres conteniendo el comando y los parámetros en el formato nativo (la trama de datos)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.DisplayDateTime">
            <summary>Muestra en el display la hora y la fecha.</summary>
            <remarks>No es posible ejecutar este comando durante una transacción.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.DisplayCommercial">
            <summary>Muestra en la parte superior del display el mensaje comercial.</summary>
            <remarks>No es posible ejecutar este comando durante una transacción.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.DisplayMessage(System.String,System.String)">
            <summary>Muestra un mensaje en el display.</summary>
            <param name='byVar1'>Nro de linea {UL}</param>
            <param name='strVar2'>Mensaje a exhibir (max 20 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.ProgramCommercial(System.String)">
            <summary>Programación de Mensaje Comercial.</summary>
            <remarks>Este comando permite programar el mensaje comercial que se muestra en el display</remarks>
            <param name='strVar1'>Mensaje 50 Caracteres (max 50 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.ProgramMessage(System.Int16,System.String)">
            <summary>Programación de Mensajes.</summary>
            <remarks>Este comando permite programar los diferentes mensajes que utiliza la máquina.</remarks>
            <param name='nVar1'>Nro de mensaje 0 al 59  (nn)</param>
            <param name='strVar2'>Descripción del mensaje (max 20 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.ModeSlip(System.String)">
            <summary>Modo de Slip</summary>
            <remarks>Los siguientes comandos son exclusivos para las impresoras fiscales con la funcionalidad adicional de chequera, como es la STAR HSP7000.</remarks>
            <param name='byVar1'>Modo {01}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.FormatCheck(System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Double,System.String,System.String)">
            <summary>Formato del Cheque (Parte Frontal)</summary>
            <remarks>Los siguientes comandos son exclusivos para las impresoras fiscales con la funcionalidad adicional de chequera, como es la STAR HSP7000.</remarks>
            <param name='nVar1'>Número de Líneas entre el Top y la Cantidad (n)</param>
            <param name='nVar2'>Número de Líneas entre la Cantidad y No Endosable (n)</param>
            <param name='nVar3'>Número de Líneas entre No endosable y el Nombre (n)</param>
            <param name='nVar4'>Número de Líneas entre el Nombre y la Cantidad (n)</param>
            <param name='nVar5'>Número de Líneas entre la Cantidad y la Fecha) (n)</param>
            <param name='dblVar6'>Monto (nnnnnnnn.nn)</param>
            <param name='strVar7'>Datos del cliente (max 50 bytes)</param>
            <param name='strVar8'>Datos de la fecha (max 50 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.FormatEndorse(System.Int16,System.String)">
            <summary>Formato del Cheque (Endoso)</summary>
            <remarks>Los siguientes comandos son exclusivos para las impresoras fiscales con la funcionalidad adicional de chequera, como es la STAR HSP7000.</remarks>
            <param name='nVar1'>Numero de Línea a ser enviada por cada comando (n)</param>
            <param name='strVar2'>Texto variable (max 30 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.PrintEndorse(System.Int16)">
            <summary>Imprimir Endoso</summary>
            <remarks>Los siguientes comandos son exclusivos para las impresoras fiscales con la funcionalidad adicional de chequera, como es la STAR HSP7000.</remarks>
            <param name='nVar1'>Numero de Líneas entre el Top y “Nº: (1 a 9) (n)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.ModeValidation(System.String)">
            <summary>Modo de Validación</summary>
            <remarks>Los siguientes comandos son exclusivos para las impresoras fiscales con la funcionalidad adicional de chequera, como es la STAR HSP7000.</remarks>
            <param name='byVar1'>Modo {01}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.PrintValidation(System.String)">
            <summary>Impresión de Validación</summary>
            <remarks>Los siguientes comandos son exclusivos para las impresoras fiscales con la funcionalidad adicional de chequera, como es la STAR HSP7000.</remarks>
            <param name='strVar1'>Texto a Imprimir (max 50 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.BixolonVE.ReadMICR">
            <summary>Lectura del MICR</summary>
            <remarks>Los siguientes comandos son exclusivos para las impresoras fiscales con la funcionalidad adicional de chequera, como es la STAR HSP7000.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="T:FiscalNET.DriverError">
            <summary>Enumeración de errores reportados por el evento</summary>
            <remarks></remarks>
        </member>
        <member name="F:FiscalNET.DriverError.Error_NoPort">
            <summary>El puerto de comunicaciones no esta abierto</summary> 
            <remarks>Deberá abrir el puerto de comunicaciones antes de enviarle comandos
            a la impresora fiscal</remarks>
        </member>
        <member name="F:FiscalNET.DriverError.Error_NoDriver">
            <summary>
            No se encontró el driver correspondiente a la impresora seleccionada
            </summary>
            <remarks>Asegurese de copiar la dll del driver en el mismo directorio 
            del componente para .NET </remarks>
        </member>
        <member name="F:FiscalNET.DriverError.Error_Loading">
            <summary>
            Error cargando el driver. No se pudo cargar la DLL del driver 
            </summary>
            <remarks>Verifique que la dll este intacta o envíe un email a soporte técnico</remarks>
        </member>
        <member name="F:FiscalNET.DriverError.Error_NoInterface">
            <summary>
            No hay una interfase activa. 
            </summary>
            <remarks> Este error se debe a que no hay un driver activado, o el componente
            no encontró drivers en el directorio donde se esta instalado. Para solucionarlo
            instale las dll correspondientes a las impresoras en el mismo directorio del
            componente para NET y reinicie la aplicación</remarks>
        </member>
        <member name="F:FiscalNET.DriverError.Error_NoPrinter">
            <summary>No hay una impresora configurada o falta la dll del driver</summary> 
            <remarks>Se recomienda copiar la dll dll del driver en el mismo directorio 
            del componente para .NET</remarks>
        </member>
        <member name="F:FiscalNET.DriverError.Error_Command">
            <summary>Error en la respuesta del controlador fiscal al enviar el comando</summary> 
            <remarks>El error puede ser causado por impresora apagada, falta de cierrez, etc. 
            Debera consultar los códigos de estado devueltos por el driver para determinar el 
            problema y tomar la accion mas apropiada según el contexto en que se encuentra 
            la impresora fiscal</remarks> 
        </member>
        <member name="T:FiscalNET.FiscalEventHandler">
            <summary>Este evento se dispara cuando se recibe un error después de enviarle un 
            comando a la impresora fiscal</summary>
            <param name='PrintError'>Código de estado del mecanismo impresor</param>
            <param name='FiscalError'>Código de estado del controlador fiscal</param>
            <remarks>El error puede ser causado por impresora apagada, falta de cierrez, etc. 
            Debera consultar los códigos de estado devueltos por el driver en el evento para 
            determinar el problema y tomar la accion mas apropiada segun el contexto 
            en que se encuentre la impresora fiscal</remarks> 
        </member>
        <member name="T:FiscalNET.DriverEventHandler">
            <summary>Este evento se dispara cuando se produce un problema al cargar la dll del driver</summary>
            <param name='Error'>Código del error</param>
            <remarks>Se debe verificar que la dll del driver se encuente en el mismo directorio 
            del componente para .NET</remarks>
        </member>
        <member name="T:FiscalNET.EpsonBR">
            <summary>Interfase de Alto Nivel para Impresoras Fiscales Epson de Brasil</summary>
            <remarks>Esta interfase provee una interfase simplificada para enviarle comandos a la impresora fiscal</remarks>
        </member>
        <member name="M:FiscalNET.EpsonBR.#ctor">
            <summary>Inicializa una nueva instancia de la clase EpsonBR y carga automaticamente el driver
            correspondiente. </summary>
            <remarks>Debera asegurarse de copiar el driver en el mismo directorio del componente FiscalNET.dll</remarks>
        </member>
        <member name="M:FiscalNET.EpsonBR.StatusRequest">
            <summary>Obtém o estado da impressora fiscal e verifica se a impressora está comunicando.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetInitErrorInfo">
            <summary>Obtém erro de iniciação da impressora.</summary>
            <remarks>Este comando permite conhecer a causa precisa de um erro produzido por um corte de energia. Por exemplo, antes do corte de energia durante a emissão de um documento determinado que precisa ser reimpresso e ao retornar a energia o mecanismo apresentar falha não será possível executar a reimpressão.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetInternalError">
            <summary>Obtém o código de erro correspondente ao erro de processo interno.</summary>
            <remarks>Este comando permite conhecer a causa de um erro causado por uma operação interna que impossibilita a operação normal da impressora. Por exemplo, um comando que requera impressão, mas nesse momento ocorre uma falha no mecanismo de impressão.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.SetComSpeed(System.Int16)">
            <summary>Configura a velocidade de comunicação da porta do usuário.</summary>
            <remarks>Se ocorrer a recuperação da MT a configuração da porta volta para o valor padrão de 38400bps.</remarks>
            <param name='nVar1'>Velocidade (nnnnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.ResetFiscalPrinter">
            <summary>Reinicia a impressora.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetPrinterVersion">
            <summary>Obter os dados de serialização.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.SetDateTime(System.String,System.String,System.String)">
            <summary>Configurar Data e Hora</summary>
            <remarks>Configura a data e hora controlados pelo relógio de tempo real da impressora ou habilita a entrada no modo de intervenção técnica</remarks>
            <param name='byVar1'>Modo {01}</param>
            <param name='strVar2'>Data (DDMMCCAA)(opcional) (max 8 bytes)</param>
            <param name='strVar3'>Hora  (HHMMSS)(opcional) (max 6 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetDateTime">
            <summary>Obtém a data e hora do relógio de tempo real da impressora.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.SetUserInfo(System.String,System.String,System.String,System.String,System.String,System.Int16,System.String)">
            <summary>Configura dados adicionais do usuário contribuinte que serão impressos no rodapé e cabeçalho dos documentos</summary>
            <param name='strVar1'>Nome da loja (max 40 bytes)</param>
            <param name='strVar2'>Nome fantasia (opcional) (max 40 bytes)</param>
            <param name='strVar3'>Endereço – linha 1 (max 40 bytes)</param>
            <param name='strVar4'>Endereço – linha 2 (max 40 bytes)</param>
            <param name='strVar5'>Endereço – linha 3 (não é impresso) (max 40 bytes)</param>
            <param name='nVar6'>Indicador de ECF (nnn)</param>
            <param name='strVar7'>Indicador de loja (LJ) (opcional) (max 4 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetInitData">
            <summary>Obtém os dados de fiscalização, conforme gravado na memória fiscal.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.SetPaymentMedia(System.String,System.Int16,System.String)">
            <summary>Configura meio de pagamento.</summary>
            <remarks>O número do meio de pagamento deve estar compreendido entre 2 e 20, já que o meio de pagamento 1, dinheiro, é residente na impressora</remarks>
            <param name='byVar1'>Modo {01}</param>
            <param name='nVar2'>Número do meio de pagamento (nn)</param>
            <param name='strVar3'>Descrição do meio de pagamento (max 15 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetPaymentMedia(System.Int16)">
            <summary>Obter os dados cadastrados para um meio de pagamento.</summary>
            <remarks>O número do meio de pagamento deve estar compreendido entre 1 e 20.</remarks>
            <param name='nVar1'>Número do meio de pagamento (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.ClearPaymentMedia(System.Int16)">
            <summary>Apaga um meio de pagamento cadastrado..</summary>
            <remarks>O número do meio de pagamento deve estar compreendido entre 2 e 20.</remarks>
            <param name='nVar1'>Número do meio de pagamento (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.SetDayLightSaving">
            <summary>Configura a entrada ou saída do horário de verão automaticamente.</summary>
            <remarks>A saída ou a entrada do horário de verão são permitidos após a emissão da Redução Z e antes de qualquer documento.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetDayLightSaving">
            <summary>Obter a configuração do horário de verão.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.SetISSqnDiscount(System.String)">
            <summary>Configurar impressora para emitir desconto sobre ISSQN (Imposto Sobre Serviços de Qualquer Natureza).</summary>
            <remarks>Requires: Jornada fiscal fechada, Jumper configurado para modo de intervenção</remarks>
            <param name='byVar1'>Modo {01}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetISSqnDiscount">
            <summary>Ler a configuraração do desconto sobre ISSQN (Imposto Sobre Serviços de Qualquer Natureza).</summary>
            <remarks>Requires: Jornada fiscal fechada, Jumper configurado para modo de intervenção</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.SetLogoData(System.String,System.Int16)">
            <summary>Envia os dados do bitmap a ser impresso no cabeçalho.</summary>
            <remarks>O bitmap será dividido em, no máximo, 7 linhas. Cada linha terá uma altura de 24 pontos (pixels) por 120 pontos (pixels) horizontais.</remarks>
            <param name='strVar1'>Dados do Bitmap (max 720 bytes)</param>
            <param name='nVar2'>Numero da linha do bitmap (n)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.ProgramTaxes(System.Double,System.String)">
            <summary>Cadastrar alíquotas referentes a tributos incidentes a ICMS (Imposto sobre circulação de mercadorias e prestação de serviços) e ISSQN (Imposto Sobre Serviços de Qualquer Natureza).</summary>
            <remarks>Impressão do Relatório Gerencial de configuração (caso fora do modo de intervenção).</remarks>
            <param name='dblVar1'>Valor da Taxa (nn.nn)</param>
            <param name='byVar2'>Modo {01}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.ClearTaxes(System.String)">
            <summary>Apagar alíquotas referentes a tributos incidentes a ICMS e ISSQN.</summary>
            <remarks>Req: Jornada fiscal fechada, Jumper configurado para modo de intervenção</remarks>
            <param name='strVar1'>Símbolo da situação tributária (max 2 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetTaxesTable">
            <summary>Obter todas as situações tributárias cadastradas.</summary>
            <remarks>Campos de saída: 3n, n= 1 a 18</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.SetOperatorName(System.String,System.String)">
            <summary>Define o indicador do Operador impresso no rodapé.</summary>
            <remarks></remarks>
            <param name='strVar1'>Nome do Operador (max 20 bytes)</param>
            <param name='byVar2'>Modo {01}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetOperatorName">
            <summary>Obtém o indicador do Operador impresso no rodapé.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetGTCode">
            <summary>Obtém a codificação do Totalizador Geral.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.EnrollManagmentReport(System.String)">
            <summary>Cadastra relatório gerencial.</summary>
            <param name='strVar1'>Descrição do relatório gerencial (max 15 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.EnrollNonFiscalDoc(System.String)">
            <summary>Cadastra documento não fiscal.</summary>
            <param name='strVar1'>Descrição do documento (max 15 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.RemoveManagementReport(System.Int16)">
            <summary>Apaga relatório gerencial.</summary>
            <param name='nVar1'>Número do relatório gerencial (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.RemoveNonFiscalDoc(System.Int16)">
            <summary>Apaga documento não fiscal.</summary>
            <param name='nVar1'>Número da operação não-fiscal (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.VerifyMonetaryOperation">
            <summary>Verifica se o documento não-fiscal possui operações de controle de monetário (sangria e fundo de troco).</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.SetCurrencySymbol(System.String)">
            <summary>Define o símbolo da moeda.</summary>
            <param name='strVar1'>Símbolo da moeda (max 4 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetCurrencySymbol">
            <summary>Obtém símbolo da moeda.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetDecimalPlaces">
            <summary>Obtém número de casas decimais da quantidade e do valor unitário.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.PrintLogo(System.String)">
            <summary>Configura a impressão do logotipo do usuário</summary>
            <param name='byVar1'>Formato {01}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.PaperFeed(System.Int16,System.String)">
            <summary>Avançar o papel na estação indicada a quantidade de linhas especificadas.</summary>
            <param name='nVar1'>Quantidade de linhas a avançar (nn)</param>
            <param name='byVar2'>Modo {012}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.PaperCut">
            <summary>Corta o papel da estação fiscal.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.PaperLoad(System.String)">
            <summary>Carrega o papel nas estações de cheque e autenticação.</summary>
            <param name='byVar1'>Estação {01}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.PaperEject(System.String)">
            <summary>Expulsa o papel da estação de cheque ou autenticação.</summary>
            <param name='byVar1'>Estação {0123}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.WaitCancel">
            <summary>Cancela espera de inserção de papel nas estações de cheque e autenticação.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.OpenDrawer(System.String)">
            <summary>Realiza a abertura da caixa de dinheiro.</summary>
            <param name='byVar1'>Nro de cajon (1 o 2) {12}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetDrawerStatus">
            <summary>Retorna o estado lógico da gaveta de dinheiro.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.CheckReadMICR(System.String,System.String,System.String)">
                   * <summary>Prepara estação de cheque para leitura do MICR.</summary>
                   * <remarks>O mecanismo impressor esperará pela inserção do cheque. Uma vez carregado iniciará a leitura do MICR. No caso de solicitar informações estendidas, e caso tenha ocorrido erro, a impressora
                 retornará um byte adicional indicando a causa do erro.</remarks>
                   * <param name='byVar1'>Formato {01}</param>
                   * <param name='byVar2'>Receber informações estendidas {SN}</param>
                   * <param name='byVar3'>Substituir caracteres não reconhecidos por ? {SN}</param>
                   * <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.CheckEjectMICR">
            <summary>Expulsa o cheque da leitura do MICR</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.CheckSelectSlipMICR">
            <summary>Seleciona a estação slip com o papel carregado para leitura do MICR.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.CheckGetReadingMICR">
            <summary>Obtém valor da última leitura realizada na estação do cheque.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.CheckClearMICR">
            <summary>Limpa o sensor magnético do MICR.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.CheckResetPos(System.String)">
            <summary>Prepara o cheque na posição inicial de impressão.</summary>
            <param name='byVar1'>Modo {01}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.SetCheckScanArea(System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>Configura os valores das coordenadas para realizar o scan de imagens através da estação do cheque</summary>
            <remarks>Valores permitidos para as coordenadas são:</remarks>
            <param name='nVar1'>Valor x1 (coordenada superior esquerda) (nnn)</param>
            <param name='nVar2'>Valor y1 (ordenada superior esquerda) (nnn)</param>
            <param name='nVar3'>Valor x2 (coordenada inferior direita) (nnn)</param>
            <param name='nVar4'>Valor y2 (ordenada inferior direita) (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetCheckScanArea">
            <summary>Obter as coordenadas da área definida para o scan.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.SetCheckScanCropArea(System.Int16,System.Int16,System.Int16,System.Int16,System.Int16)">
                   * <summary>Configura uma área de recorte dentro da área definida para o scan.</summary>
                   * <remarks>O número de área de recorte deve estar compreendido entre 1 e 10.Em caso de envio de valor fora dos limites permitidos, a impressora assumirá o valor válido
                 mais próximo.</remarks>
                   * <param name='nVar1'>Número de área de recorte (nn)</param>
                   * <param name='nVar2'>Valor x1 (nnn)</param>
                   * <param name='nVar3'>Valor y1 (nnn)</param>
                   * <param name='nVar4'>Valor x2 (nnn)</param>
                   * <param name='nVar5'>Valor y2 (nnn)</param>
                   * <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetCheckScanCropArea">
            <summary>Obter a configuração uma área de recorte dentro da área definida para o scan.</summary>
            <remarks>O número de área de recorte deve estar compreendido entre 1 e 10.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.CheckClearScanCropArea(System.Int16)">
            <summary>Apaga a configuração da área de recorte usada para scan de imagens na estação de cheque.</summary>
            <remarks>O número da área de recorte deve estar compreendido entre 1 e 10. Área de recorte o (zero) fará com que a impressora apague todas as áreas configuradas.</remarks>
            <param name='nVar1'>Número de área de recorte (0 = todas as áreas) (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.CheckPrescan">
            <summary>Efetua um pre-scan da imagem através da estação do cheque.</summary>
            <remarks>O resultado do pre-scan retornará os seguintes valores: 0x40 – Pre-scan finalizado normalmente. 0x60 – Pre-scan finalizado com falha.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.CheckStartScan(System.String,System.Int16)">
            <summary>Inicia o processo de scan na estação de cheque.</summary>
            <remarks>Se o processo de scan falhar, os campos de retorno 5 a 10 serão vazios</remarks>
            <param name='byVar1'>Formato {012}</param>
            <param name='nVar2'>Valor de brilho de scan (1-100) (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.CheckGetNextScanData">
            <summary>Obtém os próximos dados de scan.</summary>
            <remarks>Deve ter um processo de scan em andamento.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.CheckEndScan">
            <summary>Finaliza o processo de leitura de dados de scan.</summary>
            <remarks>Deve ter um processo de scan em andamento.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.CheckCancelScan">
            <summary>Cancela o processo de leitura de scan.</summary>
            <remarks>Deve ter um processo de scan em andamento.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.SetLineSpacing(System.Int16)">
            <summary>Configura o espaçamento entre linhas na impressão de documentos.</summary>
            <remarks>Caso o espaçamento entre linhas seja especificado como zero, o espaçamento padrão será configurado.</remarks>
            <param name='nVar1'>Espaçamento entre linhas (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.SetPageLineSpacing(System.Int16)">
            <summary>Configura o número de linhas na mudança de página (formfeed).</summary>
            <remarks>Caso o espaçamento entre linhas seja especificado como zero, o espaçamento padrão será configurado.</remarks>
            <param name='nVar1'>Total de linhas (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.SetPaperCut(System.String)">
            <summary>Configura o corte do papel.</summary>
            <param name='byVar1'>Formato {01}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetPaperCut">
            <summary>Obter status do corte do papel.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.DailyCloseZ(System.String,System.String,System.String)">
            <summary>Finaliza a jornada fiscal com a gravação dos dados na memória fiscal e reinicia os dados de contagem diária</summary>
            <param name='byVar1'>Modo {012345}</param>
            <param name='strVar2'>Data (Opcional) (max 8 bytes)</param>
            <param name='strVar3'>Hora (Opcional) (max 6 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.DailyCloseX(System.String)">
            <summary>Imprime o documento de leitura X ou faz a leitura serial..</summary>
            <remarks>Os campos de saída só existem na leitura serial.A leitura X pela serial não grava os dados na MFD.</remarks>
            <param name='byVar1'>Modo {012}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.OpenFiscalDay">
            <summary>Abre uma nova jornada fiscal.</summary>
            <remarks>Sempre imprime uma leitura X indicando a abertura da jornada fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetCurrentDailyReport">
            <summary>Obtém os dados da última jornada fiscal (atual, se aberta).</summary>
            <remarks>Se não houver emissão de cupom fiscal, os campos 9 e 10 serão vazios.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetOperationTime">
            <summary>Retorna o tempo emitindo documento fiscal e o tempo operacional.</summary>
            <remarks>Os tempos somente são atualizados após a LX impressa.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetFiscalDayStatus">
            <summary>Retorna o estado da jornada fiscal.</summary>
            <remarks>Estado da jornada fiscal: 1 = Dia aberto</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetEnrolledTotals(System.String)">
            <summary>Obter o número total de meios de pagamento, operações não fiscais e relatórios gerenciais cadastrados.</summary>
            <param name='byVar1'>Modo {012}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetNonFiscalTable(System.Int16,System.String)">
            <summary>Obter informações sobre meios de pagamento, operações não fiscais e relatórios gerenciais</summary>
            <param name='nVar1'>Número do meio de pagamento, operação não-fiscal ou relatório gerencial, conforme cadastrado na memória de trabalho (nn)</param>
            <param name='byVar2'>Modo {012}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetLastRegisteredItem">
            <summary>Obter o número do último item registrado</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetRegisteredItemData(System.Int16)">
            <summary>Obter os dados de itens registrados</summary>
            <param name='nVar1'>Número do item registrado válido (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetCharsPerLine">
            <summary>Obter o número de caracteres na linha</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetFiscalAccumulators">
            <summary>Retorna os acumuladores.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetFiscalCounters">
            <summary>Retorna valor dos contadores.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetLastDocument">
            <summary>Retorna dados do último documento emitido</summary>
            <remarks>Relação do tipo do documento: Nenhum documento = 0, etc</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetReturnRechargeInfo">
            <summary>Retorna informações sobre descontos e acréscimos em cupom fiscal e comprovante não-fiscal.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetGeneralConfiguration">
            <summary>Retorna informações sobre a configuração da impressora.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetInternalPrinterInfo">
            <summary>Retorna informações de diagnostico sobre o functionamento interno da impressora.</summary>
            <remarks>O campo de saída 17 tem 8 bits, mas o status dos dips estão nos quatro bits menos significativos ...</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetGrossSales">
            <summary>Retorna a venda bruta diária.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetDailyTotalsByNumber(System.Int16,System.String)">
            <summary>Retorna os totais da jornada fiscal.</summary>
            <remarks>Campos de salida: 25 + 18*2(Maximo)</remarks>
            <param name='nVar1'>Número da Redução Z (nnnn)</param>
            <param name='byVar2'>Formato {01}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.DailyCloseByDate(System.String,System.String,System.String)">
            <summary>Emite o documento Leitura da Memória Fiscal ou envia pela serial.</summary>
            <remarks>Os campos de saída só existem na leitura serial. A LMF pela serial não grava os dados na MFD.</remarks>
            <param name='byVar1'>Formato {123456}</param>
            <param name='strVar2'>Data inicial (opcional) (max 8 bytes)</param>
            <param name='strVar3'>Data final (opcional) (max 8 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.DailyCloseByNumber(System.String,System.Int16,System.Int16)">
            <summary>Emite o documento Leitura da Memória Fiscal ou envia pela serial.</summary>
            <remarks>Os campos de saída só existem na leitura serial. A LMF pela serial não grava os dados na MFD.</remarks>
            <param name='byVar1'>Formato {123456}</param>
            <param name='nVar2'>Numero da redução Z inicial (opcional) (nnnn)</param>
            <param name='nVar3'>Número da redução Z final (opcional) (nnnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.PrintAuditByNumber(System.Int16,System.Int16)">
            <summary>Imprime documentos a partir da memoria da fita-detalhe dentro de um intervalo de Contador de Ordem de Operação (COO).</summary>
            <param name='nVar1'>Nro da COO inicial (nnnnnn)</param>
            <param name='nVar2'>Nro da COO final (nnnnnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.PrintAuditByDate(System.String,System.String)">
            <summary>Imprime documentos a partir da memoria da fita-detalhe dentro de um intervalo de datas</summary>
            <param name='strVar1'>Data inicial (max 8 bytes)</param>
            <param name='strVar2'>Data final (max 8 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.TicketOpen">
            <summary>Realiza a abertura de um cupom fiscal.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.TicketItem(System.String,System.String,System.Double,System.String,System.Double,System.String,System.String)">
            <summary>Realiza a venda de um item. Os acumuladores fiscais e de alíquotas são afetados pelo comando.</summary>
            <remarks>A quantidade máxima de itens é de 999.</remarks>
            <param name='strVar1'>Código do Item (max 14 bytes)</param>
            <param name='strVar2'>Descrição (max 233 bytes)</param>
            <param name='dblVar3'>Quantidade (nnnnn.nn)</param>
            <param name='strVar4'>Unidade de Medida (Opcional) (max 3 bytes)</param>
            <param name='dblVar5'>Valor Unitário (nnnnnn.nn)</param>
            <param name='strVar6'>Situação Tributária (Ta,Tb,Sb,etc) (max 5 bytes)</param>
            <param name='byVar7'>Modo da Impressão {12}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.TicketSubtotal">
            <summary>Retorna o subtotal vendido até o momento no cupom fiscal.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.TicketReturnRecharge(System.Double,System.String)">
            <summary>Aplica um desconto ou acréscimo sobre um item ou no subtotal do cupom fiscal.</summary>
            <param name='dblVar1'>Valor do desconto/acréscimo (nnnnnnnnn.nn)</param>
            <param name='byVar2'>Formato {01234567}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.TicketPayment(System.Int16,System.Double,System.String,System.String)">
            <summary>Registra um pagamento no cupom fiscal</summary>
            <remarks>Caso o valor vendido no cupom seja zero, o cupom será cancelado.</remarks>
            <param name='nVar1'>Número do Meio de Pagamento (nn)</param>
            <param name='dblVar2'>Valor do Meio de Pagamento (nnnnnnnnnnn.nn)</param>
            <param name='strVar3'>Descrição opcional – Linha 1 (max 40 bytes)</param>
            <param name='strVar4'>Descrição opcional – Linha 2 (max 40 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.TicketClose(System.String)">
            <summary>Fecha o cupom fiscal.</summary>
            <param name='byVar1'>Formato {0123}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetTicketInfo">
            <summary>Obter informações sobre o cupom fiscal corrente.</summary>
            <remarks>Fase atual do cupom fiscal segue os seguintes valores: 0 – Fase inicial...</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.TicketPartialCancel(System.Int16,System.Double)">
            <summary>Cancelar parcial ou totalmente o item, dependendo da quantidade informada.</summary>
            <remarks>Se a quantidade for zero, cancela o item na totalidade.</remarks>
            <param name='nVar1'>Número do item (no caso de desconto sobre item) (nnn)</param>
            <param name='dblVar2'>Quantidade a ser cancelada (nnnnn.nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.TicketCancel(System.String,System.Int16)">
            <summary>Cancelar desconto, acréscimo, item ou cupom em emissão.</summary>
            <param name='byVar1'>Formato {012345}</param>
            <param name='nVar2'>Número do item (Opcional) (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.SetCustomerData(System.String,System.String,System.String,System.String,System.String)">
                   * <summary>Define dados do consumidor a ser impresso nos documentos específicos.</summary>
                   * <remarks>Após a fechamento de qualquer documento, os dados serão apagados.Ao enviar os dados para serem impressos no cabeçalho, com o cupom fiscal em fase de
                 venda (após abertura), o comando retornará “erro – comando inválido.Este comando não suporta o código de barra ou atributos</remarks>
                   * <param name='strVar1'>CPF / CNPJ do Consumidor (opcional) (max 20 bytes)</param>
                   * <param name='strVar2'>Nome do Consumidor (opcional) (max 30 bytes)</param>
                   * <param name='strVar3'>Endereço 1 (opcional) (max 40 bytes)</param>
                   * <param name='strVar4'>Endereço 2 (opcional) (max 39 bytes)</param>
                   * <param name='byVar5'>Formato {012}</param>
                   * <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.TicketSetTrailer(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Envia linhas de informações promocionais no fechamento de cupom fiscal.</summary>
            <param name='strVar1'>Linha 1 (opcional) (max 56 bytes)</param>
            <param name='strVar2'>Linha 2 (opcional) (max 56 bytes)</param>
            <param name='strVar3'>Linha 3 (opcional) (max 56 bytes)</param>
            <param name='strVar4'>Linha 4 (opcional) (max 56 bytes)</param>
            <param name='strVar5'>Linha 5 (opcional) (max 56 bytes)</param>
            <param name='strVar6'>Linha 6 (opcional) (max 56 bytes)</param>
            <param name='strVar7'>Linha 7 (opcional) (max 56 bytes)</param>
            <param name='strVar8'>Linha 8 (opcional) (max 56 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.TicketSetAppID(System.String,System.String)">
            <summary>Envia linhas de identificação do Aplicativo no fechamento de Cupom Fiscal.</summary>
            <remarks>Este comando não suporta o código de barra.</remarks>
            <param name='strVar1'>Linha 1 (opcional) (max 42 bytes)</param>
            <param name='strVar2'>Linha 2 (opcional) (max 42 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.NonFiscalOpen(System.String,System.Int16)">
            <summary>Realiza a abertura do comprovante não fiscal ou do relatório gerencial.</summary>
            <param name='byVar1'>Formato {01}</param>
            <param name='nVar2'>Número do Documento, de acordo com os documentos cadastrados para RG (Opcional) (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.NonFiscalPrintText(System.String)">
            <summary>Imprimir linhas de texto livre. Aplicável apenas para o comprovante de crédito ou débito e relatórios gerenciais.</summary>
            <remarks>A cada 10 (dez) linhas, e apenas para o caso de Relatórios Gerenciais, será impressa a mensagem NÃO É DOCUMENTO FISCAL...</remarks>
            <param name='strVar1'>Linha de texto livre (max 56 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.NonFiscalSubtotal">
            <summary>Retorna o subtotal do comprovante não fiscal.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.NonFiscalClose(System.String)">
            <summary>Fecha o documento não fiscal.</summary>
            <param name='byVar1'>Formato {01}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetNonFiscalInfo">
            <summary>Obtém informações sobre o documento não fiscal.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.NonFiscalChangePayment(System.Int16,System.Int16,System.Double,System.String)">
            <summary>Imprimir Comprovante Não Fiscal para estorno do meio de pagamento</summary>
            <param name='nVar1'>Número do meio de pagamento estornado (nn)</param>
            <param name='nVar2'>Número do meio de pagamento efetivado (nn)</param>
            <param name='dblVar3'>Valor a ser estornado (nnnnnnnnnnn.nn)</param>
            <param name='byVar4'>Formato {01}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.NonFiscalItem(System.Int16,System.Double)">
            <summary>Efetua registro de operações não fiscais em comprovante não-fiscal.</summary>
            <param name='nVar1'>Número da Operação não fiscal, conforme cadastrada (nn)</param>
            <param name='dblVar2'>Valor da operação (nnnnnnnnn.nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.NonFiscalReturnRecharge(System.Double,System.String)">
            <summary>Registra operação de desconto ou acréscimo em operações registradas no Comprovante Não-Fiscal.</summary>
            <remarks>A máxima quantidade de registros não fiscais é igual a 200.</remarks>
            <param name='dblVar1'>Valor do desconto/acréscimo (nnnnnnnnn.nn)</param>
            <param name='byVar2'>Formato {01234567}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.NonFiscalCancel(System.String,System.Int16)">
            <summary>Cancela o desconto, acréscimo, item ou comprovante em emissão.</summary>
            <param name='byVar1'>Formato {012345}</param>
            <param name='nVar2'>Número do item - (opcional)(no caso de desconto sobre operação) (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.NonFiscalPayment(System.Int16,System.Double,System.String,System.String)">
            <summary>Registra um meio de pagamento no comprovante não-fiscal</summary>
            <remarks>Caso o valor vendido no comprovante seja zero, o documento será cancelado.</remarks>
            <param name='nVar1'>Número do Meio de Pagamento (nn)</param>
            <param name='dblVar2'>Valor do Meio de Pagamento (nnnnnnnnnnn.nn)</param>
            <param name='strVar3'>Descrição opcional – Linha 1 (opcional) (max 40 bytes)</param>
            <param name='strVar4'>Descrição opcional – Linha 2 (opcional) (max 40 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.NonFiscalOpenCCD(System.Int16,System.Double,System.Int16,System.Int16,System.String)">
            <summary>Abre comprovante de crédito ou débito.</summary>
            <param name='nVar1'>Número do Meio de Pagamento (opcional) (nn)</param>
            <param name='dblVar2'>Valor pago (opcional) (nnnnnnnnnnn.nn)</param>
            <param name='nVar3'>Número de Parcelas (opcional) (nnn)</param>
            <param name='nVar4'>Número do COO a cancelar (opcional)(usado somente para estorno) (nnnnnn)</param>
            <param name='byVar5'>Formato {01234}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.NonFiscalPrintTextEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Imprime 15 linhas de texto livre. Aplicável apenas para ao CCD e RG.</summary>
            <remarks>A cada 10 (dez) linhas, e apenas para o caso de Relatórios Gerenciais, será impressa a mensagem NÃO É DOCUMENTO FISCAL...</remarks>
            <param name='strVar1'>Linha de texto livre 1 (Opcional) (max 56 bytes)</param>
            <param name='strVar2'>Linha de texto livre 2 (Opcional) (max 56 bytes)</param>
            <param name='strVar3'>Linha de texto livre 3 (Opcional) (max 56 bytes)</param>
            <param name='strVar4'>Linha de texto livre 4 (Opcional) (max 56 bytes)</param>
            <param name='strVar5'>Linha de texto livre 5 (Opcional) (max 56 bytes)</param>
            <param name='strVar6'>Linha de texto livre 6 (Opcional) (max 56 bytes)</param>
            <param name='strVar7'>Linha de texto livre 7 (Opcional) (max 56 bytes)</param>
            <param name='strVar8'>Linha de texto livre 8 (Opcional) (max 56 bytes)</param>
            <param name='strVar9'>Linha de texto livre 9 (Opcional) (max 56 bytes)</param>
            <param name='strVar10'>Linha de texto livre 10 (Opcional) (max 56 bytes)</param>
            <param name='strVar11'>Linha de texto livre 11 (Opcional) (max 56 bytes)</param>
            <param name='strVar12'>Linha de texto livre 12 (Opcional) (max 56 bytes)</param>
            <param name='strVar13'>Linha de texto livre 13 (Opcional) (max 56 bytes)</param>
            <param name='strVar14'>Linha de texto livre 14 (Opcional) (max 56 bytes)</param>
            <param name='strVar15'>Linha de texto livre 15 (Opcional) (max 56 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.DisplayWriteText(System.String)">
            <summary>Enviar linha de texto para o display EPSON conectado na impressora fiscal</summary>
            <param name='strVar1'>Texto a imprimir (max 60 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.DisplayClear(System.String)">
            <summary>Apaga a linha de texto no display EPSON conectado na impressora fiscal</summary>
            <param name='byVar1'>Formato {01}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.DisplaySetCursor(System.String,System.Int16,System.Int16)">
            <summary>Posiciona e configura as propriedades do cursor no display EPSON conectado na impressora fiscal.</summary>
            <param name='byVar1'>Formato {0123456789A}</param>
            <param name='nVar2'>Número de coluna (opcional) (nn)</param>
            <param name='nVar3'>Número de linha (opcional) (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.DisplayConfigure(System.String,System.String)">
            <summary>Configurar as preferências de visualização do display EPSON conectado na impressora fiscal.</summary>
            <remarks>Os valores de configuração possíveis são:...</remarks>
            <param name='byVar1'>Modo {012}</param>
            <param name='byVar2'>Valor de configuração {01234}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.DisplayTest(System.String)">
            <summary>Executa o teste de diagnostico no display EPSON conectado na impressora fiscal</summary>
            <param name='byVar1'>Formato {123}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.CheckSetEndorsementPos(System.String,System.Int16,System.Int16)">
            <summary>Prepara a estação de cheque para impressão de linhas de endosso</summary>
            <param name='byVar1'>Formato {01}</param>
            <param name='nVar2'>Posição X (nnn)</param>
            <param name='nVar3'>Posição Y (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.CheckPrintEndorsementLine(System.String)">
            <summary>Imprime linha na estação de endosso.</summary>
            <remarks>Comando suportado apenas na TM-H6000 com endosso.Cada linha ocupa 40 caracteres. O caracter 41 é colocado na próxima linha. Não tem limites de linhas impressas.</remarks>
            <param name='strVar1'>Texto a ser impresso (max 40 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.CheckEjectEndorsement">
            <summary>Ejeta o papel previamente inserido na estação de endosso.</summary>
            <remarks>Comando suportado apenas na TM-H6000 com endosso.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.CheckPrepareEndorsement">
            <summary>Posiciona o papel na estação de endosso.</summary>
            <remarks>Comando suportado apenas na TM-H6000 com endosso.Quando o comando é executado corretamente a LUZ SLIP da impressora fica piscando, informando para inserir o papel.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.CheckPrint(System.Int16,System.Double,System.String,System.String,System.String,System.String,System.String)">
            <summary>Imprimir texto no cheque.</summary>
            <param name='nVar1'>Número da configuração, conforme cadastrado (nn)</param>
            <param name='dblVar2'>Valor do cheque (nnnnnnnnnnn.nn)</param>
            <param name='strVar3'>Campo Nominal (opcional) (max 59 bytes)</param>
            <param name='strVar4'>Campo Cidade (max 30 bytes)</param>
            <param name='strVar5'>Linha de texto 1 (opcional) (max 56 bytes)</param>
            <param name='strVar6'>Linha de texto 2 (opcional) (max 56 bytes)</param>
            <param name='strVar7'>Data (max 8 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.PrintAuthentication(System.String,System.String)">
                   * <summary>Imprime a autenticação.</summary>
                   * <remarks>Comando suportado apenas na TM-H6000 FBII(mecanismo com autenticação).Permite autenticação do valor do item, desconto(item e subtotal), acréscimo(Item e
                 subtotal), pagamentos e total do documento. Serão permitidas apenas 5 impressões (1 impressão mais 4 reimpressões) da
                 autenticação, conforme previsto em lei vigente</remarks>
                   * <param name='byVar1'>Formato {01}</param>
                   * <param name='strVar2'>Linha de texto (opcional) (max 50 bytes)</param>
                   * <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.CheckCancelPrint">
            <summary>Cancela a solicitação de Impressão do cheque ou autenticação.</summary>
            <remarks>Comando suportado apenas na TM-H6000 FBII(mecanismo com autenticação)</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetCheckParams(System.Int16)">
            <summary>Obtém as configurações do cheque.</summary>
            <param name='nVar1'>Número da configuração, conforme cadastrado (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.SetCheckParams1(System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>Configura as coordenadas do valor e por extenso no cheque.</summary>
            <remarks>A impressora armazena no máximo 5 tipos de registros.</remarks>
            <param name='nVar1'>Número do registro (nn)</param>
            <param name='nVar2'>Valor X (nnn)</param>
            <param name='nVar3'>Valor Y (nnn)</param>
            <param name='nVar4'>Primeira linha por extenso X (nnn)</param>
            <param name='nVar5'>Primeira linha por extenso Y (nnn)</param>
            <param name='nVar6'>Segunda linha por extenso X (nnn)</param>
            <param name='nVar7'>Segunda linha por extenso Y (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.SetCheckParams2(System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.String)">
            <summary>Configura as coordenadas do nominal, cidade, data e linhas adicionais no cheque.</summary>
            <param name='nVar1'>Número do registro (nn)</param>
            <param name='nVar2'>Nominal X (nnn)</param>
            <param name='nVar3'>Nominal Y (nnn)</param>
            <param name='nVar4'>Cidade X (nnn)</param>
            <param name='nVar5'>Cidade Y (nnn)</param>
            <param name='nVar6'>Offset do dia, em relação à cidade (nn)</param>
            <param name='nVar7'>Offset do mês, em relação à cidade (nn)</param>
            <param name='nVar8'>Offset do ano, em relação à cidade (nn)</param>
            <param name='nVar9'>Linhas adicionais X (nnn)</param>
            <param name='nVar10'>Linhas adicionais Y (nnn)</param>
            <param name='byVar11'>Formato {01}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.SetAuthenticationLogo(System.String,System.Int16,System.String)">
            <summary>Configura bitmap na impressão da autenticação.</summary>
            <remarks>Comando suportado apenas na TM-H6000 FBII(mecanismo com autenticação)</remarks>
            <param name='strVar1'>Dados Bitmap (max 80 bytes)</param>
            <param name='nVar2'>Número de colunas do bitmap (nn)</param>
            <param name='byVar3'>Formato {01}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.SetCheckCurrency(System.String,System.String)">
            <summary>Configura o texto da moeda a ser impresso no cheque.</summary>
            <remarks>Comando suportado apenas na TM-H6000 FBII</remarks>
            <param name='strVar1'>Texto da moeda no singular (max 20 bytes)</param>
            <param name='strVar2'>Texto da moeda no plural (max 20 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonBR.GetCheckCurrency">
            <summary>Retorna o texto da moeda a ser impresso no cheque.</summary>
            <remarks>Comando suportado apenas na TM-H6000 FBII</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="T:FiscalNET.EpsonCL">
            <summary>Interfase de Alto Nivel para Impresoras Fiscales Epson de Chile</summary>
            <remarks>Esta interfase provee una interfase simplificada para enviarle comandos a la impresora fiscal</remarks>
        </member>
        <member name="M:FiscalNET.EpsonCL.#ctor">
            <summary>Inicializa una nueva instancia de la clase EpsonCL y carga automaticamente el driver
            correspondiente. </summary>
            <remarks>Debera asegurarse de copiar el driver en el mismo directorio del componente FiscalNET.dll</remarks>
        </member>
        <member name="M:FiscalNET.EpsonCL.Sincro">
            <summary>Cancela cualquier comprobante fiscal o no fiscal abierto</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.StatusRequest">
            <summary>Obtiene los valores de estado fiscal y de impresora en tiempo real.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetInitErrorInfo">
            <summary>Obtiene el código de error correspondiente si se ha producido un error en el inicio de la impresora fiscal.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetInternalError">
            <summary>Obtiene el código de error correspondiente si se ha producido un error en operaciones internas.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.SetComSpeed(System.String)">
            <summary>Configura la velocidad de comunicación del puerto de usuario (host port). La configuración se hará efectiva una vez que se apague y se vuelva a encender la impresora.</summary>
            <param name='byVar1'>Velocidad</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetPrinterStatus(System.String)">
            <summary>Imprime un documento con las características del mecanismo impresor.</summary>
            <param name='byVar1'>Imprimir</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.RippleTest(System.String,System.Int16)">
            <summary>Imprime el documento de ripple test.</summary>
            <param name='byVar1'>Impresión</param>
            <param name='nVar2'>Cantidad de lineas (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetFiscalFeatures(System.String)">
            <summary>Obtiene las características fiscales de la impresora fiscal.</summary>
            <param name='byVar1'>Imprimir</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetSysEvents">
            <summary>Obtiene información acerca de los eventos más recientes ocurridos en el sistema desde el último desbloqueo de fábrica (dip-switch 8 habilitado).</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetPrinterVersion(System.String)">
            <summary>Obtiene los datos de serialización que se encuentran configurados en el equipo. Es posible obtener una salida impresa.</summary>
            <param name='byVar1'>Impresion</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.SetDateTime(System.String,System.String)">
            <summary>Establece el valor del reloj interno de la impresora fiscal.</summary>
            <param name='strVar1'>Fecha (DDMMYY) (max 6 bytes)</param>
            <param name='strVar2'>Hora  (HHMMSS) (max 6 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetDateTime">
            <summary>Obtiene los valores actuales de configuración del reloj interno de la impresora fiscal.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.SetMaxPercentDiscount(System.Double)">
            <summary>Configura el máximo porcentaje de descuento permitido en una boleta fiscal.</summary>
            <param name='dblVar1'>Máximo porcentaje de descuento (.nnnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetInitData(System.String)">
            <summary>Obtiene los datos de fiscalización que se encuentran configurados en el equipo. Es posible obtener una salida impresa.</summary>
            <param name='byVar1'>Imprimir</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.SetHeader(System.Int16,System.String)">
            <summary>Configura el valor de las líneas de encabezado que se almacenan en la memoria de trabajo del equipo.</summary>
            <remarks>Para que la línea de encabezado no sea impresa se debe enviar el campo texto vacío.</remarks>
            <param name='nVar1'>Nro de línea (1 al 10) (nnn)</param>
            <param name='strVar2'>Texto del encabezamiento (max 42 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetHeader(System.Int16)">
            <summary>Obtiene los valores de las líneas de encabezado almacenadas en la memoria de trabajo de la impresora fiscal.</summary>
            <remarks>Si se recibe el campo texto vacío implica que la línea de encabezado no será impresa.</remarks>
            <param name='nVar1'>Nro de línea (1 al 10) (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.SetSiiHeader(System.String,System.String,System.String)">
            <summary>Configura el valor de las líneas de SII (Servicio de Impuestos Internos) en la apertura de la boleta.</summary>
            <remarks>Cada vez que se envie este comando, genera un nuevo registro en la memoria fiscal, salvo en caso de que la lineas ingresadas sean iguales a las ya configuradas.</remarks>
            <param name='strVar1'>Boleta Autorizada por el SII</param>
            <param name='strVar2'>Res. SII Nro.</param>
            <param name='strVar3'>Nro. Fiscal.</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetSiiHeader">
            <summary>Obtiene los valores de las líneas SII (Servicio de Impuestos Internos) almacenadas en la impresora fiscal.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.SetTrailer(System.Int16,System.String)">
            <summary>Configura el valor de las líneas de cola que se almacenan en la memoria de trabajo del equipo.</summary>
            <remarks>Para que la línea de cola no sea impresa se debe enviar el campo texto vacío.</remarks>
            <param name='nVar1'>Nro de línea (1 al 10) (nnn)</param>
            <param name='strVar2'>Texto de la línea (max 42 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetTrailer(System.Int16)">
            <summary>Obtiene los valores de las líneas de cola almacenadas en la memoria de trabajo de la impresora fiscal.</summary>
            <remarks>Si se recibe el campo texto vacío implica que la línea de cola no será impresa.</remarks>
            <param name='nVar1'>Nro de línea (1 al 10) (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.SetPaymentMedia(System.Int16,System.String)">
            <summary>Configura un tipo de pago para ser utilizado durante el proceso de facturación.</summary>
            <remarks>El número de tipo de pago debe estar comprendido entre 1 y 20.</remarks>
            <param name='nVar1'>Número de tipo de pago (nn)</param>
            <param name='strVar2'>Texto</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetPaymentMedia(System.Int16)">
            <summary>Obtiene los valores que han sido configurados como tipos de pago.</summary>
            <remarks>El número de tipo de pago debe estar comprendido entre 1 y 20.</remarks>
            <param name='nVar1'>Número de tipo de pago (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.PaperFeed(System.Int16,System.String)">
            <summary>Avanza el papel en la estación indicada la cantidad de líneas especificadas.</summary>
            <param name='nVar1'>Cantidad de líneas a avanzar (nn)</param>
            <param name='byVar2'>Estación</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.PaperCut">
            <summary>Corta el papel en la estación roll.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.PaperLoad(System.String)">
            <summary>Habilita la carga de papel en la estación slip o de validación.</summary>
            <param name='byVar1'>estación</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.PaperEject(System.String,System.String)">
            <summary>Expulsa el papel de la estación slip o validación.</summary>
            <param name='byVar1'>estación</param>
            <param name='byVar2'>modo</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.WaitCancel">
            <summary>Cancela la espera de carga o retiro de papel de la estación slip o de validación.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.OpenDrawer(System.String)">
            <summary>Realiza la apertura de las gavetas de dinero.</summary>
            <param name='byVar1'>Nro de cajon (1 o 2)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.CheckStartMICR(System.String,System.String,System.String)">
            <summary>Prepara la estación para cargar un cheque y realizar la lectura del mismo.</summary>
            <remarks>El mecanismo impresor esperará la carga del cheque y una vez cargado, procederá a la carga y lectura del mismo en forma simultánea.</remarks>
            <param name='byVar1'>Tipo de letra {01}</param>
            <param name='byVar2'>Recibir informacion extendida {SN}</param>
            <param name='byVar3'>Reemplazar los caracteres no reconocidos por ? {SN}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.CheckEjectMICR">
            <summary>Expulsa el cheque de la estación de slip (MICR).</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.SelectSlipMICR">
            <summary>Selecciona la estación slip cuando se encuentra cargado papel en estación slip para lectura de MICR.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetCheckDataMICR">
            <summary>Obtiene el valor de la última lectura realizada al cargar el cheque.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.ClearHeaderMICR">
            <summary>Realiza la limpieza del cabezal MICR.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.CheckResetPos(System.String)">
            <summary>Prepara el cheque en la posición inicial de impresión.</summary>
            <param name='byVar1'>Modo {FR}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.SetScannerArea(System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>Configura los valores de las coordenadas para realizar el scan de imágenes por la estación slip.</summary>
            <remarks>En caso de enviarse valor por fuera de los límites establecido, la impresora establecerá el valor mas cercano posible.</remarks>
            <param name='nVar1'>Valor x1 (coordenada superior izquierda) (nnn)</param>
            <param name='nVar2'>Valor y1 (coordenada superior izquierda) (nnn)</param>
            <param name='nVar3'>Valor x2 (coordenada inferior derecha) (nnn)</param>
            <param name='nVar4'>Valor y2 (coordenada inferior derecha) (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetScannerArea">
            <summary>Obtiene los valores de configuración de las coordenadas para realizar el scan de imágenes por la estación slip.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.SetScannerCropArea(System.Int16,System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>Configura los valores de las coordenadas para recortar un área cuando se realiza el scan de imágenespor la estación slip.</summary>
            <remarks>El número de área de recorte debe estar comprendido entre 1 y 10.</remarks>
            <param name='nVar1'>Nro de area de recorte (nnn)</param>
            <param name='nVar2'>Valor x1 (coordenada superior izquierda) (nnn)</param>
            <param name='nVar3'>Valor y1 (coordenada superior izquierda) (nnn)</param>
            <param name='nVar4'>Valor x2 (coordenada inferior derecha) (nnn)</param>
            <param name='nVar5'>Valor y2 (coordenada inferior derecha) (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetScannerCropArea">
            <summary>Obtiene los valores de configuración de las coordenadas para recortar un área cuando se realiza el scan de imágenes por la estación slip.</summary>
            <remarks>El número de área de recorte debe estar comprendido entre 1 y 10.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.ClearScannerCropArea(System.Int16)">
            <summary>Borra la configuración de un área de recorte para cuando se realiza el scan de imágenes por la estación slip.</summary>
            <remarks>El número de área de recorte debe estar comprendido entre 1 y 10. Si se envía 0 la impresora borrará todas las configuraciones de área de recorte.</remarks>
            <param name='nVar1'>Número de área de recorte (0 = todas las áreas) (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.ScannerPreScan">
            <summary>Efectúa un pre-scan de imagen por la estación slip.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.ScannerStartScan(System.String,System.Int16)">
            <summary>Comienza el proceso de scan por la estación slip.</summary>
            <remarks>Si el proceso de scan falla, los campos 5 al 10 serán retornados vacíos.</remarks>
            <param name='byVar1'>Formato {NBF}</param>
            <param name='nVar2'>Valor del brillo del scan</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.ScannerGetNextData">
            <summary>Obtiene el siguiente set de datos de scan.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.ScannerEndScan">
            <summary>Finaliza el proceso de descarga de datos de scan.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.ScannerCancelScan">
            <summary>Cancela el proceso de descarga de scan.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.DailyCloseZ(System.String)">
            <summary>Realiza el cierre de la jornada fiscal almacenando los importes facturados en memoria fiscal.</summary>
            <param name='byVar1'>Imprimir encabezados</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.DailyCloseX(System.String)">
            <summary>Realiza el cierre de cajero (cambio de turno). Imprimiendo la información parcial desde el último cierre de cajero o desde el inicio de la jornada fiscal.</summary>
            <remarks>El número de cierre de cajero es el correspondiente al número de reporte emitido dentro de la jornada fiscal.</remarks>
            <param name='byVar1'>Imprimir</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.DailyCloseByDate(System.String,System.String,System.String,System.String)">
            <summary>Inicia un informe de cierres Z. Obtiene la información de acuerdo a los parámetros solicitados y prepara la descarga electrónica de datos.</summary>
            <remarks>En caso de solicitar un informe por mes o por día la impresora fiscal considera los datos del primer campo para realizar el reporte.</remarks>
            <param name='strVar1'>Fecha inicial (DDMMYY) (max 6 bytes)</param>
            <param name='strVar2'>Fecha final (DDMMYY)(opcional) (max 6 bytes)</param>
            <param name='byVar3'>Tipo de informe</param>
            <param name='byVar4'>Imprimir</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.DailyCloseByNumber(System.Int16,System.Int16,System.String,System.String)">
            <summary>Inicia un informe de cierres Z. Obtiene la información de acuerdo a los parámetros solicitados y prepara la descarga electrónica de datos.</summary>
            <remarks>En caso de solicitar un informe por número de Z la impresora fiscal considera los datos del primer campo para realizar el reporte.</remarks>
            <param name='nVar1'>Nro de cierre Z inicial (nnnnn)</param>
            <param name='nVar2'>Nro de cierre Z final (opcional) (nnnnn)</param>
            <param name='byVar3'>Tipo de informe</param>
            <param name='byVar4'>Imprime</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.PrintReportX">
            <summary>Realiza el informe X (al igual que el de la secuencia del botón).</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetCurrentFiscalReport(System.String)">
            <summary>Obtiene información de la jornada fiscal en curso.</summary>
            <remarks>Si no se han emitido boletas durante la jornada fiscal, los campos 4 y 5 retornarán vacío.</remarks>
            <param name='byVar1'>Imprimir</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetCurrentVatReport(System.String,System.String)">
            <summary>Obtiene información de impuestos de la jornada fiscal en curso.</summary>
            <remarks>La impresora fiscal devolverá 3 campos por cada tasa que haya sido utilizada durante la jornada fiscal en el orden indicado del campo 2 al 4.</remarks>
            <param name='byVar1'>Imprimir</param>
            <param name='byVar2'>Modo</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetCurrentPaymentReport(System.String,System.String)">
            <summary>Obtiene información de pagos de la jornada fiscal en curso.</summary>
            <remarks>La impresora fiscal devolverá 2 campos por cada tipo de pago que haya sido utilizado durante la jornada fiscal en el orden indicado del campo 3 al 4.</remarks>
            <param name='byVar1'>Imprimir</param>
            <param name='byVar2'>Modo</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetBriefReportByDate(System.String,System.String,System.String)">
            <summary>Obtiene información acumulada (resumida) de las jornadas fiscales de acuerdo a un rango de fechas.</summary>
            <remarks>Si no se han emitido boletas durante el periodo consultado, los campos 5 y 6 retornarán vacío.</remarks>
            <param name='strVar1'>Fecha inicial (DDMMYY) (max 6 bytes)</param>
            <param name='strVar2'>Fecha final (DDMMYY) (max 6 bytes)</param>
            <param name='byVar3'>Imprimir</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetBriefReportByNumber(System.Int16,System.Int16,System.String)">
            <summary>Obtiene información acumulada (resumida) de las jornadas fiscales de acuerdo a un rango de números de cierre Z.</summary>
            <remarks>Si no se han emitido boletas durante el periodo consultado, los campos 5 y 6 retornarán vacío.</remarks>
            <param name='nVar1'>Nro del primer cierrez (nnnnn)</param>
            <param name='nVar2'>Nro del último cierrez (nnnnn)</param>
            <param name='byVar3'>Imprimir</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.StartTransactionReportByDate(System.String,System.String,System.String,System.String)">
            <summary>Inicia un informe de transacciones. Obtiene la información de acuerdo a los parámetros solicitados y prepara la descarga electrónica de datos.</summary>
            <remarks>En caso de solicitar un informe por mes o por día la impresora fiscal considera los datos del primer campo para realizar el reporte.</remarks>
            <param name='strVar1'>Fecha inicial (DDMMYY) (max 6 bytes)</param>
            <param name='strVar2'>Fecha final (DDMMYY)(opcional) (max 6 bytes)</param>
            <param name='byVar3'>Tipo de informe</param>
            <param name='byVar4'>Imprimir</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.StartTransactionReportByNumber(System.Int16,System.Int16,System.String,System.String)">
            <summary>Inicia un informe de transacciones. Obtiene la información de acuerdo a los parámetros solicitados y prepara la descarga electrónica de datos.</summary>
            <remarks>En caso de solicitar un informe por número de Z la impresora fiscal considera los datos del primer campo para realizar el reporte</remarks>
            <param name='nVar1'>Nro de cierre Z inicial (nnnnn)</param>
            <param name='nVar2'>Nro de cierre Z final (opcional) (nnnnn)</param>
            <param name='byVar3'>Tipo de informe</param>
            <param name='byVar4'>Imprimir</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetNextTransactionReportData">
            <summary>Obtiene el primero o siguiente registro a descargar.</summary>
            <remarks>Los datos son descargados en forma continua. La estructura de los mismos corresponderá de acuerdo al tipo de informe solicitado.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.CloseTransactionReport">
            <summary>Confirma la descarga existosa y da por finalizado el informe.</summary>
            <remarks>No deben existir pendientes de descarga</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.CancelTransactionReport">
            <summary>Cancela el informe en proceso de descarga.</summary>
            <remarks>Debe existir un informe de cierres Z ó de transacciones iniciado</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetWorkingMemory">
            <summary>Informa los acumuladores y contadores en la memoria fiscal.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.OpenAccountPaymentDocument(System.Double,System.Int16,System.String,System.Int16,System.Int16)">
            <summary>Realiza la apertura de un documento de Pago Cuota / Cuenta.</summary>
            <remarks>Si la coordenada X no es especificada, la misma cera tomada como valor 0 (cero).</remarks>
            <param name='dblVar1'>Importe de la cuota (nnnnnnnnn.)</param>
            <param name='nVar2'>Valor de la coordenada X del origen del papel (opcional) (nnn)</param>
            <param name='byVar3'>Imprimir encabezado</param>
            <param name='nVar4'>Numero de Logo a imprimir (opcional) (nnn)</param>
            <param name='nVar5'>Densidad de Impresión (opcional) (n)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.PrintAccountPaymentLineItem(System.String,System.String,System.Int16)">
            <summary>Realiza la impresión de línea en el documento de pago cuota/cuenta.</summary>
            <param name='strVar1'>Texto (opcional) (max 42 bytes)</param>
            <param name='byVar2'>Modo de avance de línea</param>
            <param name='nVar3'>Tamaño de avance de línea (opcional) (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.CloseAccountPaymentDocument(System.String,System.String)">
            <summary>Finaliza el documento de pago cuota / cuenta.</summary>
            <param name='byVar1'>Expulsión</param>
            <param name='byVar2'>Modo de expulsión {NR}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.OpenCashDocument(System.Double,System.Int16,System.String,System.Int16,System.Int16)">
            <summary>Realiza la apertura de un documento de Recepción de Dinero.</summary>
            <remarks>Si la coordenada X no es especificada, la misma sera tomada como valor 0 (cero).</remarks>
            <param name='dblVar1'>Importe (nnnnnnnnn.)</param>
            <param name='nVar2'>Valor de la coordenada X del origen del papel (opcional) (nnn)</param>
            <param name='byVar3'>Imprimir encabezado</param>
            <param name='nVar4'>Numero de Logo a imprimir (opcional) (nnn)</param>
            <param name='nVar5'>Densidad de Impresión (opcional) (n)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.PrintCashLineItem(System.String,System.String,System.Int16)">
            <summary>Realiza la impresión de línea en el documento de Recepción de Dinero.</summary>
            <param name='strVar1'>Texto (max 42 bytes)</param>
            <param name='byVar2'>Modo de avance de línea</param>
            <param name='nVar3'>Tamaño de avance de línea (opcional) (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.CloseCashDocument(System.String,System.String)">
            <summary>Finaliza el documento de recepción de dinero.</summary>
            <param name='byVar1'>Expulsión</param>
            <param name='byVar2'>Modo de expulsión</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.OpenInternalDocument(System.Int16,System.String,System.Int16,System.Int16)">
            <summary>Realiza la apertura de un documento interno.</summary>
            <remarks>Si la coordenada X no es especificada, la misma será tomada como valor 0 (cero).</remarks>
            <param name='nVar1'>Valor de la coordenada X del origen del papel (opcional) (nnn)</param>
            <param name='byVar2'>Imprimir encabezado</param>
            <param name='nVar3'>Numero de logo a imprimir (opcional) (nnn)</param>
            <param name='nVar4'>Densidad de Impresión (opcional) (n)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.PrintInternalLineItem(System.String,System.String,System.Int16)">
            <summary>Realiza la impresión de línea en el documento interno.</summary>
            <param name='strVar1'>Texto (max 42 bytes)</param>
            <param name='byVar2'>Modo de avance de línea</param>
            <param name='nVar3'>Tamaño de avance de línea (opcional) (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.CloseInternalDocument(System.String,System.String)">
            <summary>Finaliza el documento interno.</summary>
            <param name='byVar1'>Expulsión</param>
            <param name='byVar2'>Modo de expulsión</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.OpenWithdrawalDocument(System.Double,System.Int16,System.String,System.Int16,System.Int16)">
            <summary>Realiza la apertura de un documento de Retiro de Dinero.</summary>
            <remarks>Si la coordenada X no es especificada, la misma será tomada como valor 0 (cero).</remarks>
            <param name='dblVar1'>Importe (nnnnnnnnn.)</param>
            <param name='nVar2'>Valor de la coordenada X del origen del papel (opcional) (nnn)</param>
            <param name='byVar3'>Imprimir encabezado</param>
            <param name='nVar4'>Numero de Logo a imprimir (opcional) (nnn)</param>
            <param name='nVar5'>Densidad de Impresión (opcional) (n)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.PrintWithdrawalLineItem(System.String,System.String,System.Int16)">
            <summary>Realiza la impresión de línea en el documento de Retiro de Dinero.</summary>
            <param name='strVar1'>Texto (max 42 bytes)</param>
            <param name='byVar2'>Modo de avance de línea</param>
            <param name='nVar3'>Tamaño de avance de línea (opcional) (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.CloseWithdrawalDocument(System.String,System.String)">
            <summary>Finaliza el documento de Retiro de dinero.</summary>
            <param name='byVar1'>Expulsión</param>
            <param name='byVar2'>Modo de expulsión</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.TicketOpen(System.Int16,System.Int16)">
            <summary>Realiza la apertura de un documento boleta fiscal.</summary>
            <remarks>Si la jornada fiscal se encuentra abierta, no deben haber transcurrido mas de 24 horas desde el inicio de la jornada.</remarks>
            <param name='nVar1'>Nro de logo a imprimir (opcional)</param>
            <param name='nVar2'>Densidad de impresion (opcional)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.TicketItem(System.String,System.Double,System.Double,System.Double,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Realiza la emisión de ítem de venta o la devolución de un ítem en forma total o parcial.</summary>
            <remarks>Acumula los importes facturados en la memoria de trabajo y calcula los impuestos de acuerdo a la tasa deimpuestos enviada. Permite la emisión de ítems de bonificación y su correspondiente anulación</remarks>
            <param name='strVar1'>Descripción del item (max 42 bytes)</param>
            <param name='dblVar2'>Cantidad (nnnnn.nnnn)</param>
            <param name='dblVar3'>Precio unitario (nnnnnnn.nnnn)</param>
            <param name='dblVar4'>Tasa de impuestos (.nnnn)</param>
            <param name='byVar5'>Calificador de la operacion {MmRr}</param>
            <param name='byVar6'>Extencion IVA</param>
            <param name='strVar7'>Descripción extra #1 (Opcional) (max 42 bytes)</param>
            <param name='strVar8'>Descripción extra #2 (Opcional) (max 42 bytes)</param>
            <param name='strVar9'>Descripción extra #3 (Opcional) (max 42 bytes)</param>
            <param name='strVar10'>Descripción extra #4 (Opcional) (max 42 bytes)</param>
            <param name='strVar11'>Descripción extra #5 (Opcional) (max 42 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.TicketSubtotal(System.String)">
            <summary>Retorna el subtotal facturado dentro de la boleta fiscal.</summary>
            <param name='byVar1'>Imprimir el subtotal</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.TicketReturnRecharge(System.String,System.Double,System.String,System.String)">
            <summary>Aplica un descuento o recargo global a los montos facturados en la boleta fiscal.</summary>
            <remarks>No haber efectuado pagos dentro de la boleta fiscal</remarks>
            <param name='strVar1'>Descripción (max 42 bytes)</param>
            <param name='dblVar2'>Monto del descuento o recargo (nnnnnnnnnnnnnnn.)</param>
            <param name='byVar3'>Calificador de la operación</param>
            <param name='byVar4'>Imputación {AFX}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.TicketPayment(System.Int16,System.Double)">
            <summary>Aplica un pago a la boleta fiscal en proceso de emisión.</summary>
            <remarks>La impresión de las líneas de pagos se efectúa en el momento del cierre de la boleta fiscal.</remarks>
            <param name='nVar1'>Tipo de pago</param>
            <param name='dblVar2'>Monto del pago (nnnnnnnnnnnnnnn.)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.TicketClose(System.Int16,System.String,System.Int16,System.String,System.Int16,System.String)">
            <summary>Realiza el cierre de la boleta fiscal almacenando los datos de la transacción en la memoria de transacciones. </summary>
            <param name='nVar1'>Número de línea de cola de reemplazo 1 (opcional) (nnn)</param>
            <param name='strVar2'>Descripción de reemplazo 1 (opcional) (max 42 bytes)</param>
            <param name='nVar3'>Número de línea de cola de reemplazo 2 (opcional) (nnn)</param>
            <param name='strVar4'>Descripción de reemplazo 2 (opcional) (max 42 bytes)</param>
            <param name='nVar5'>Número de línea de cola de reemplazo 3 (opcional) (nnn)</param>
            <param name='strVar6'>Descripción de reemplazo 3 (opcional) (max 42 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.SetTicketOptions(System.String,System.String,System.String,System.String)">
            <summary>Configura las diferentes opciones para la emisión de boletas fiscales.</summary>
            <remarks>El vuelto incluye a la primer línea de vuelto (luego de los pagos) y a la segunda y última (luego de las donaciones).</remarks>
            <param name='byVar1'>Imprimir información sobre el total pagado y el vuelto</param>
            <param name='byVar2'>Imprimir cantidad x precio</param>
            <param name='byVar3'>Imprimir decimales en cantidad</param>
            <param name='byVar4'>Imprimir decimales en precio</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetTicketOptions">
            <summary>Obtiene los valores de configuración para la emisión de boletas fiscales que se encuentran almacenados en la memoria de trabajo.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetTicketInfo">
            <summary>Obtiene información de la boleta fiscal en proceso de emisión.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetTicketVatInfo(System.String)">
            <summary>Obtiene información de impuestos de la boleta fiscal en curso.</summary>
            <param name='byVar1'>Discriminar</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetTicketPaymentInfo(System.String)">
            <summary>Obtiene información de pagos de la boleta fiscal en curso.</summary>
            <param name='byVar1'>Tipo</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.TicketDonation(System.String,System.Double,System.String)">
            <summary>Aplica una donación a la boleta fiscal en proceso de emisión.</summary>
            <remarks>La impresión de las líneas de donaciones se efectúa en el momento del cierre de la boleta fiscal.</remarks>
            <param name='strVar1'>Descripción (max 42 bytes)</param>
            <param name='dblVar2'>Monto donación (nnnnnnnnnnnnnnn.)</param>
            <param name='byVar3'>Calificador de la operación</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.TicketPaymentExtra(System.Int16,System.Double,System.String,System.String)">
            <summary>Aplica un pago con descripcion extra a la boleta fiscal en proceso de emisión.</summary>
            <remarks>La impresión de las líneas de pagos se efectúa en el momento del cierre de la boleta fiscal.</remarks>
            <param name='nVar1'>Tipo de pago</param>
            <param name='dblVar2'>Monto del pago (nnnnnnnnnnnnnnn.)</param>
            <param name='byVar3'>Calificador</param>
            <param name='strVar4'>Línea de descripción (opcional) (max 42 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.RefundOpen(System.Double,System.Int16)">
            <summary>Realiza la apertura de una Nota de Crédito.</summary>
            <remarks>Si la jornada fiscal se encuentra abierta, no deben haber transcurrido mas de 24 horas desde el inicio de la jornada.</remarks>
            <param name='dblVar1'>Importe (nnnnnnnnn.)</param>
            <param name='nVar2'>Valor de la coordenada X del origen del papel (opcional)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.RefundItemText(System.String)">
            <summary>Realiza la impresión de linea de texto en una Nota de Crédito.</summary>
            <param name='strVar1'>Texto (max 42 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.RefundClose(System.String,System.String)">
            <summary>Finaliza la Nota de Crédito.</summary>
            <param name='byVar1'>Expulsar</param>
            <param name='byVar2'>Modo de expulsion</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.OpenNonFiscalReceipt(System.String,System.Int16,System.Int16)">
            <summary>Realiza la apertura de un documento no fiscal.</summary>
            <param name='byVar1'>Imprimir encabezados</param>
            <param name='nVar2'>Nro de logo a imprimir (opcional) (nnn)</param>
            <param name='nVar3'>Densidad de impresion (opcional) (n)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.PrintNonFiscalText(System.String)">
            <summary>Imprime una línea de texto no fiscal dentro de un documento no fiscal.</summary>
            <remarks>Se permiten sólo 30 (treinta) líneas de texto no fiscal.</remarks>
            <param name='strVar1'>Texto no fiscal (max 42 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.CloseNonFiscalReceipt(System.Int16,System.String,System.Int16,System.String,System.Int16,System.String,System.String)">
            <summary>Realiza el cierre del documento no fiscal en proceso de emisión.</summary>
            <param name='nVar1'>Número de línea de cola de reemplazo 1 (opcional)</param>
            <param name='strVar2'>Descripción de reemplazo 1 (opcional) (max 42 bytes)</param>
            <param name='nVar3'>Número de línea de cola de reemplazo 2 (opcional)</param>
            <param name='strVar4'>Descripción de reemplazo 2 (opcional) (max 42 bytes)</param>
            <param name='nVar5'>Número de línea de cola de reemplazo 3 (opcional)</param>
            <param name='strVar6'>Descripción de reemplazo 3 (opcional) (max 42 bytes)</param>
            <param name='byVar7'>Cortar papel</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetNonFiscalReceiptInfo">
            <summary>Obtiene información del documento no fiscal en proceso de emisión.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.PrintNonFiscalSingleItem(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int16,System.String,System.Int16,System.String,System.Int16,System.String,System.String,System.String,System.Int16,System.Int16)">
            <summary>Realiza un Documento No Fiscal de 30 líneas.</summary>
            <param name='strVar1'>Texto No fiscal línea 1 (opcional) (max 42 bytes)</param>
            <param name='strVar2'>Texto No fiscal línea 2 (opcional) (max 42 bytes)</param>
            <param name='strVar3'>Texto No fiscal línea 3 (opcional) (max 42 bytes)</param>
            <param name='strVar4'>Texto No fiscal línea 4 (opcional) (max 42 bytes)</param>
            <param name='strVar5'>Texto No fiscal línea 5 (opcional) (max 42 bytes)</param>
            <param name='strVar6'>Texto No fiscal línea 6 (opcional) (max 42 bytes)</param>
            <param name='strVar7'>Texto No fiscal línea 7 (max 42 bytes)</param>
            <param name='strVar8'>Texto No fiscal línea 8 (max 42 bytes)</param>
            <param name='strVar9'>Texto No fiscal línea 9 (max 42 bytes)</param>
            <param name='strVar10'>Texto No fiscal línea 10 (max 42 bytes)</param>
            <param name='strVar11'>Texto No fiscal línea 11 (max 42 bytes)</param>
            <param name='strVar12'>Texto No fiscal línea 12 (max 42 bytes)</param>
            <param name='strVar13'>Texto No fiscal línea 13 (max 42 bytes)</param>
            <param name='strVar14'>Texto No fiscal línea 14 (max 42 bytes)</param>
            <param name='strVar15'>Texto No fiscal línea 15 (max 42 bytes)</param>
            <param name='strVar16'>Texto No fiscal línea 16 (max 42 bytes)</param>
            <param name='strVar17'>Texto No fiscal línea 17 (max 42 bytes)</param>
            <param name='strVar18'>Texto No fiscal línea 18 (max 42 bytes)</param>
            <param name='strVar19'>Texto No fiscal línea 19 (max 42 bytes)</param>
            <param name='strVar20'>Texto No fiscal línea 20 (max 42 bytes)</param>
            <param name='strVar21'>Texto No fiscal línea 21 (max 42 bytes)</param>
            <param name='strVar22'>Texto No fiscal línea 22 (max 42 bytes)</param>
            <param name='strVar23'>Texto No fiscal línea 23 (max 42 bytes)</param>
            <param name='strVar24'>Texto No fiscal línea 24 (max 42 bytes)</param>
            <param name='strVar25'>Texto No fiscal línea 25 (max 42 bytes)</param>
            <param name='strVar26'>Texto No fiscal línea 26 (max 42 bytes)</param>
            <param name='strVar27'>Texto No fiscal línea 27 (max 42 bytes)</param>
            <param name='strVar28'>Texto No fiscal línea 28 (max 42 bytes)</param>
            <param name='strVar29'>Texto No fiscal línea 29 (max 42 bytes)</param>
            <param name='strVar30'>Texto No fiscal línea 30 (max 42 bytes)</param>
            <param name='nVar31'>Número de línea de cola de reemplazo 1 (opcional) (nnn)</param>
            <param name='strVar32'>Descripción de reemplazo 1 (opcional) (max 42 bytes)</param>
            <param name='nVar33'>Número de línea de cola de reemplazo 2 (opcional) (nnn)</param>
            <param name='strVar34'>Descripción de reemplazo 2 (opcional) (max 42 bytes)</param>
            <param name='nVar35'>Número de línea de cola de reemplazo 3 (opcional) (nnn)</param>
            <param name='strVar36'>Descripción de reemplazo 3 (opcional) (max 42 bytes)</param>
            <param name='byVar37'>Imprimir encabezados</param>
            <param name='byVar38'>Cortar papel</param>
            <param name='nVar39'>Nro de logo a imprimir (opcional) (nnn)</param>
            <param name='nVar40'>Densidad de impresión (opcional) (n)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.OpenPaymentMediaDocument(System.Int16,System.Int16)">
            <summary>Realiza la apertura de un documento no fiscal de medio de pago</summary>
            <param name='nVar1'>Número del logo a imprimir (opcional) (nnn)</param>
            <param name='nVar2'>Densidad de impresión (opcional) (n)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.PrintPaymentMediaText(System.String)">
            <summary>Imprime una línea de texto no fiscal dentro de un documento no fiscal de medio de pago.</summary>
            <param name='strVar1'>Texto no fiscal (max 42 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.ClosePaymentMediaDocument(System.String)">
            <summary>Realiza el cierre del documento no fiscal en proceso de emisión.</summary>
            <param name='byVar1'>Cortar papel</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.GetPaymentMediaDocumentInfo">
            <summary>Obtiene información del documento no fiscal de medio de pago en proceso de emisión</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.DisplayWriteText(System.String)">
            <summary>Muestra una línea de texto en un display EPSON conectado a la impresora fiscal.</summary>
            <param name='strVar1'>Texto a imprimir (max 42 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.DisplayClear(System.String)">
            <summary>Borra una línea de texto en un display EPSON conectado a la impresora fiscal.</summary>
            <param name='byVar1'>Borrar todo</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.DisplaySetCursor(System.Int16,System.Int16,System.String)">
            <summary>Posiciona y configura las propiedades del cursor en un display EPSON conectado a la impresora fiscal.</summary>
            <param name='nVar1'>Nro de columna (opcional) (nn)</param>
            <param name='nVar2'>Nro de fila (opcional) (nn)</param>
            <param name='byVar3'>Calificador de la operación</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.DisplayConfigure(System.String,System.Int16)">
            <summary>Configura las preferencias de visualización de un display EPSON conectado a la impresora fiscal.</summary>
            <param name='byVar1'>Parametro a modificar</param>
            <param name='nVar2'>Valor del parámetro</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.DisplayTest(System.String,System.String)">
            <summary>Ejecuta un test de diagnóstico en un display EPSON conectado a la impresora fiscal.</summary>
            <param name='byVar1'>Inicializar el Display</param>
            <param name='byVar2'>Realizar Autoverificacion</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.SlipStartPrint(System.String,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>Inicia la impresión por la terminal slip, validación o para imprimir un cheque. Este paso es requerido para poder imprimir líneas en las estaciones mencionadas.</summary>
            <remarks>Si la coordenada X no es especificada, la misma será tomada como valor 0 (cero)</remarks>
            <param name='byVar1'>Estación</param>
            <param name='nVar2'>Valor de la coordenada X del origen del papel (opcional) (nnn)</param>
            <param name='nVar3'>Valor de la coordenada Y del origen del papel (opcional) (nnn)</param>
            <param name='nVar4'>Ancho del papel a partir del origen X (opcional) (nnn)</param>
            <param name='nVar5'>Largo del papel a partir del origen Y (opcional) (nnn)</param>
            <param name='nVar6'>Número de logo a imprimir (opcional) (nnn)</param>
            <param name='nVar7'>Densidad de impresión (opcional) (n)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.SlipPrintText(System.String,System.String,System.Int16)">
            <summary>Imprime una línea de texto en la estación de slip, validación o cheque tanto para el frente como para el reverso</summary>
            <remarks>No se acepta código de barras.</remarks>
            <param name='strVar1'>Texto</param>
            <param name='byVar2'>Tipo de avance</param>
            <param name='nVar3'>Tamaño de avance de línea (opcional) (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.SlipEndPrint(System.String,System.String)">
            <summary>Finaliza la impresión por la terminal slip o validación.</summary>
            <remarks>Este paso es requerido para dar por finalizada la impresión en la estación seleccionada.</remarks>
            <param name='byVar1'>Expulsar papel</param>
            <param name='byVar2'>Modo</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonCL.SlipCancelPrint(System.String,System.String)">
            <summary>Cancela la impresión por la terminal slip o validación. Expulsa la hoja que se encuentra cargada en la estación.</summary>
            <param name='byVar1'>Expulsar papel</param>
            <param name='byVar2'>Modo</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="T:FiscalNET.EpsonForm">
            <summary>Interfase de Alto Nivel para Impresoras Fiscales Epson de Formulario continuo de Argentina</summary>
            <remarks>Esta interfase provee una interfase simplificada para enviarle comandos a la impresora fiscal</remarks>
        </member>
        <member name="M:FiscalNET.EpsonForm.#ctor">
            <summary>Inicializa una nueva instancia de la clase EpsonForm y carga automaticamente el driver
            correspondiente. </summary>
            <remarks>Debera asegurarse de copiar el driver en el mismo directorio del componente FiscalNET.dll</remarks>
        </member>
        <member name="M:FiscalNET.EpsonForm.ESTADO(System.String)">
            <summary>Consulta de estado</summary>
            <remarks>Los campos de la respuesta del controlador dependen del tipo de Información solicitada</remarks>
            <param name='byVar1'>Código de operación {NACDP}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.CIERRE(System.String,System.String)">
            <summary>Cierre de jornada fiscal</summary>
            <remarks>Este comando imprime el reporte de Totales Diarios y, en forma opcional, transfiere los Totales Diarios desde la Memoria de Trabajo a la Memoria Fiscal. Por ello, la duración de la Memoria Fiscal es independiente de la cantidad de transacciones que se realizan en el día.</remarks>
            <param name='byVar1'>Tipo de reporte {ZX}</param>
            <param name='byVar2'>Imprimir {PN}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.CIERREZ">
            <summary>Efectúa un CierreZ</summary>
            <remarks>Se realizará un Cierre Diario que hará que se graben los Totales Diarios en la Memoria Fiscal, y se los borre de la Memoria de Trabajo y el mismo saldrá impreso.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.CIERREX">
            <summary>Efectua un CierreX</summary>
            <remarks>Se realiza un cierre X, se borran los totales X, dejando intactos los Totales Diarios. Estos totales intermedios son útiles para generar totales de cajero a lo largo del día sin volver a establecer los Totales Diarios.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.AUDITORIAF(System.String,System.String,System.String)">
            <summary>Reporte de auditoría por fechas</summary>
            <remarks>Este comando imprime un reporte de Cierres Diarios en forma selectiva por un rango de fechas. Este comando usa tiempo extendido para su finalización. Además brinda la opción de producir sólo totales, o totales y detalles de Cierres Diarios.</remarks>
            <param name='strVar1'>Fecha inicial (AAMMDD) (max 6 bytes)</param>
            <param name='strVar2'>Fecha final (AAMMDD) (max 6 bytes)</param>
            <param name='byVar3'>tipo {TDtd}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.AUDITORIAZ(System.Int16,System.Int16,System.String)">
            <summary>Reporte de auditoría por fechas</summary>
            <remarks>Este comando imprime un reporte de cierres diarios en forma selectiva por un rango de números de cierre. Este comando usa tiempo extendido para la finalización. Provee la opción de producir sólo totales, o totales y detalles de Cierres Diarios.</remarks>
            <param name='nVar1'>Nro Z inicial (nnnn)</param>
            <param name='nVar2'>Nro Z final (nnnn)</param>
            <param name='byVar3'>tipo {TDtd}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.PREFERENCIA(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Seleccionar las preferencias del usuario</summary>
            <remarks>Este comando permite realizar configuraciones sobre la impresión en Hoja Suelta y/o Formulario Continuo.Para saber cuales es la configuración, se puede utilizar el comando Leer Preferencias del Usuario.</remarks>
            <param name='byVar1'>Se debe enviar 'P' {P}</param>
            <param name='byVar2'>Opción 2 {DP}</param>
            <param name='byVar3'>Opción 3 {MSR}</param>
            <param name='byVar4'>Opción 4 {FUS}</param>
            <param name='strVar5'>Opción 5 (max 3 bytes)</param>
            <param name='strVar6'>Opción 6 (max 3 bytes)</param>
            <param name='strVar7'>Opción 7 (max 3 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.LEEPREFERENCIA(System.String,System.String,System.String,System.String,System.String)">
            <summary>Leer las preferencias del usuario</summary>
            <remarks>Este comando se utiliza para leer de la memoria de trabajo las preferencias del usuario establecidas con el comando Seleccionar Preferencias del Usuario.</remarks>
            <param name='byVar1'>Se debe enviar P {P}</param>
            <param name='byVar2'>Opción 2 {DP}</param>
            <param name='byVar3'>Opción 3 {SR}</param>
            <param name='byVar4'>Opción 4 {S}</param>
            <param name='byVar5'>Opción 5 {U}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.ESTACIONPPAL">
            <summary>Preparar estación principal</summary>
            <remarks>Este comando se utiliza para preparar la estación de hoja suelta, para la impresión del próximo documento no fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.NOFISABRE(System.String)">
            <summary>Abrir comprobante no-fiscal</summary>
            <remarks>Este comando se utiliza para producir un Comprobante No Fiscal en Hoja Suelta o Formulario Continuo.</remarks>
            <param name='byVar1'>Se debe enviar S para imprimir en hoja suelta {S}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.NOFISITEM(System.String)">
            <summary>Imprimir texto no-fiscal</summary>
            <remarks>El comando será rechazado si no está abierto un comprobante no fiscal. Se restringirá el texto al conjunto de caracteres del Texto Fiscal</remarks>
            <param name='strVar1'>Texto no fiscal (max 136 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.NOFISCIERRA(System.String)">
            <summary>Cerrar comprobante no-fiscal</summary>
            <remarks>El comando será rechazado si un comprobante no fiscal no está abierto. Se lo rechazará si hay formularios en las entradas para impresión o validación de hojas sueltas.</remarks>
            <param name='byVar1'>Tipo de corte (opción ignorada en LX300F y FX880F) {TP}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.AVANZAHOJA(System.Int16)">
            <summary>Avanzar hoja suelta o factura</summary>
            <remarks>Este comando hace avanzar la hoja suelta o factura según la cantidad de líneas indicada. Se rechazará el comando si hay un comprobante fiscal abierto.</remarks>
            <param name='nVar1'>Nro de líneas a avanzar (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.CORTAPAPEL">
            <summary>Expulsar Hoja Suelta of Formulario Continuo</summary>
            <remarks>El comando será rechazado si está abierto un comprobante. Este comando se usa para ejectar el papel.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.PONEFECHORA(System.String,System.String)">
            <summary>Ingresar fecha y hora</summary>
            <remarks>Este comando establece la fecha y hora del reloj de tiempo real del Controlador Fiscal. La fecha y hora del reloj de tiempo real se estampa en todos los documentos fiscales y en todas las entradas de la Memoria Fiscal.</remarks>
            <param name='strVar1'>Fecha (AAMMDD) (max 6 bytes)</param>
            <param name='strVar2'>Hora (HHMMSS) (max 6 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.PIDEFECHORA">
            <summary>Consultar fecha y hora</summary>
            <remarks>Este comando devuelve la fecha y hora del reloj de tiempo real del Controlador Fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.PONEENCABEZADO(System.Int16,System.String)">
            <summary>Programar texto de encabezamiento y cola</summary>
            <remarks>Este comando almacena una línea de Datos Fijos de cabecera o cola en la Memoria de Trabajo. En el caso de que el campo descripción contenga la palabra TOTAL o sus variantes como T O T A L , T0Tal , TotAl , T0Tál , T@Tal etc. , el Impresor Fiscal procederá al reemplazo de las dos últimas letras por dos puntos.</remarks>
            <param name='nVar1'>Nro de línea de datos fijos (nnnnn)</param>
            <param name='strVar2'>Texto fiscal de datos fijos (max 40 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.PIDEENCABEZADO(System.Int16)">
            <summary>Consultar texto de encabezamiento y cola</summary>
            <remarks>Este comando devuelve una línea de Datos Fijos de cabecera o cola almacenada en la Memoria de Trabajo.</remarks>
            <param name='nVar1'>Nro de línea de datos fijos (nnnnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.BARCODE(System.Int16,System.String,System.Int16)">
            <summary>Imprimir Código de Barras en los encabezados o pié del Ticket.</summary>
            <remarks>Esta sección explica como deben programarse los Códigos de Barras usando el comando @BARCODE. </remarks>
            <param name='nVar1'>Tipo de código de Barra a imprimir (nn)</param>
            <param name='strVar2'>Datos a Imprimir (max 40 bytes)</param>
            <param name='nVar3'>Nro de línea de datos fijos (nnnnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.ZONAS(System.Int16,System.Int16,System.Int16,System.Int16,System.Int16)">
            	   * <summary>Configurar zonas de impresión fiscal</summary>
            	   * <remarks>Previo a la impresión de facturas, recibos, nota de crédito o débito o cualquier otro documento fiscal que sea impreso por hojas sueltas o formulario continuo, se deben establecer los tamaños de las zonas de impresión. Esta configuración se encuentra almacenada en la memoria de trabajo del equipo, su configuración es necesaria una sóla vez salvo que el equipo haya sufrido una intervención técnica. Asimismo se recomienda verificar
            la configuración una vez al día.</remarks>
            	   * <param name='nVar1'>Nro de zona a configurar (nnn)</param>
            	   * <param name='nVar2'>Coordenada horizontal borde superior izquierdo (nn)</param>
            	   * <param name='nVar3'>Coordenada vertical  borde superior izquierdo (nn)</param>
            	   * <param name='nVar4'>Coordenada horizontal borde inferior derecho (nn)</param>
            	   * <param name='nVar5'>Coordenada vertical borde inferior derecho (nn)</param>
            	   * <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.OFFSET(System.Int16)">
            <summary>Preferencias del offset</summary>
            <remarks>Previo a la impresión de facturas, recibos, nota de crédito o débito o cualquier otro documento fiscal que sea impreso por hojas sueltas o formulario continuo, se deben establecer los tamaños de las zonas de impresión. Esta preferencia indica desde donde se va a poder imprimir los subtotales de la factura, esto es coincidente con la declaración de la zona 90, es decir que cuando tenemos definida la zona 60 (line items) el offset sera la última linea de la zona 60 mas 1.</remarks>
            <param name='nVar1'>Valor en líneas desde el borde superior en la cual se empezará a imprimir los subtotales de la factura (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.LEEZONAS(System.Int16)">
            <summary>Obtener la configuración de las zonas de impresión</summary>
            <remarks>Este comando se utiliza para leer la configuración de las zonas de impresión almacenadas en la memoria de trabajo del controlador fiscal.</remarks>
            <param name='nVar1'>Nro de zona (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.CLEARZONEDAT">
            <summary>Borrar la configuración de las zonas de impresión</summary>
            <remarks>Este comando se utiliza para eliminar de la memoria de la Impresora Fiscal, todas las configuraciones que corresponden a las zonas de impresión.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.CLEARUSERDAT">
            <summary>Borrar todas las cfg def por el usuario</summary>
            <remarks>Este comando se utiliza para eliminar de la memoria de la Impresora Fiscal, todas las configuraciones que corresponden a todas las configuraciones, es decir, papel , dispositivo, etc.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.FACTABRE(System.String,System.String,System.String,System.Int16,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Abrir comprobante fiscal Factura o Nota de Crédito</summary>
            <remarks>Este comando es el primer paso para producir un comprobante fiscal tipo Factura ó Nota de Débito ó Recibo oficial.</remarks>
            <param name='byVar1'>Tipo de documento {FDRNELC}</param>
            <param name='byVar2'>Tipo de salida impresa para factura fiscal o recibo - factura {CS}</param>
            <param name='byVar3'>Letra del documento fiscal (A,B, C o X) {ABCX}</param>
            <param name='nVar4'>Cantidad de copias que se deben IMPRIMIR (1 a 5) (n)</param>
            <param name='byVar5'>Tipo de formulario que se utiliza para la factura emitidas en hoja suelta o formulario continuo {PFA}</param>
            <param name='strVar6'>Tamaño de los caracteres que se van a utilizar en toda la factura emitida en hoja suelta o formulario continuo) (max 2 bytes)</param>
            <param name='byVar7'>Responsabilidad frente al IVA del EMISOR en el modo entrenamiento {IRNEM}</param>
            <param name='byVar8'>Responsabilidad frente al IVA del COMPRADOR {IRNEMFS}</param>
            <param name='strVar9'>Nombre comercial del comprador línea 1 (max 80 bytes)</param>
            <param name='strVar10'>Nombre comercial del comprador línea 2 (max 80 bytes)</param>
            <param name='strVar11'>Tipo de documento del comprador (CUIT, CUIL,DNI) (max 6 bytes)</param>
            <param name='strVar12'>CUIT o documento del comprador (max 11 bytes)</param>
            <param name='byVar13'>Linea OPCIONAL bien de USO {NB}</param>
            <param name='strVar14'>Domicilio del comprador, línea 1 (max 40 bytes)</param>
            <param name='strVar15'>Domicilio del comprador, línea 2 (max 40 bytes)</param>
            <param name='strVar16'>Domicilio del comprador, línea 3 (max 40 bytes)</param>
            <param name='strVar17'>Línea 1 con datos sobre los remitos relacionados (max 60 bytes)</param>
            <param name='strVar18'>Línea 2 con datos sobre los remitos relacionados (max 60 bytes)</param>
            <param name='byVar19'>Formato para almacenar los datos (C o G) {CG}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.FACTITEM(System.String,System.Double,System.Double,System.Double,System.String,System.Int16,System.Double,System.String,System.String,System.String,System.Double,System.Double)">
            <summary>Imprimir Item</summary>
            <remarks>No se aceptará el comando si no hay un comprobante fiscal abierto. Se lo rechazará si no hay papel en la entrada para impresión o validación de hojas sueltas.</remarks>
            <param name='strVar1'>Descripción del producto (max 40 bytes)</param>
            <param name='dblVar2'>Cantidad de unidades (nnnnn.nnn)</param>
            <param name='dblVar3'>Monto del item (nnnnnnn.nn)</param>
            <param name='dblVar4'>Tasa del IVA (nn.nn)</param>
            <param name='byVar5'>Calificador de la operación {MmRr}</param>
            <param name='nVar6'>Nro de bultos (nnnnn)</param>
            <param name='dblVar7'>Tasa de ajuste variable (.nnnnnnnn)</param>
            <param name='strVar8'>Línea 1 descripción complementaria del item (max 40 bytes)</param>
            <param name='strVar9'>Línea 2 descripción complementaria del item (max 40 bytes)</param>
            <param name='strVar10'>Línea 3 descripción complementaria del item (max 40 bytes)</param>
            <param name='dblVar11'>Acrecentamiento (.nnnn)</param>
            <param name='dblVar12'>Impuestos internos fijos (nnnnnnnnn.nnnnnnnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.FACTSUBTOTAL(System.String,System.String)">
            <summary>Subtotal</summary>
            <remarks>Este comando será rechazado si no hay un comprobante fiscal abierto. El mismo es usado para enviar los totales de transacciones al Host . Luego de este, se pueden emitir comandos de impresión de ítems de línea adicionales.</remarks>
            <param name='byVar1'>Imprimir {PN}</param>
            <param name='strVar2'>Texto a imprimir en el subtotal (max 29 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.FACTPAGO(System.String,System.Double,System.String)">
            <summary>Devolucion de envases, Bonificaciones y Recargos</summary>
            <remarks>Se rechazará este comando si no hay un comprobante fiscal abierto. El mismo es utilizado para imprimir los pagos, Descuentos y Recargos de la transacción.</remarks>
            <param name='strVar1'>Texto con descripcion del pago (max 40 bytes)</param>
            <param name='dblVar2'>monto (nnnnnnnnnn.nn)</param>
            <param name='byVar3'>Calificador del item de línea {CTtDR}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.FACTPERCEP(System.String,System.String,System.Double,System.Double)">
            	   * <summary>Percepciones Tique Factura</summary>
            	   * <remarks>Se rechazará este comando si no hay una Factura abierta, si los montos acumulados generan un desbordamiento
            de total. Se usa este comando para imprimir información sobre percepciones Globales o del IVA.
            Si se envía una Percepción de IVA y no se han facturado productos a dicha tasa, el comando será rechazado.</remarks>
            	   * <param name='strVar1'>Descripción de la percepción (max 25 bytes)</param>
            	   * <param name='byVar2'>Indica si es una percepción sobre el IVA u otra percepción {OIT}</param>
            	   * <param name='dblVar3'>Monto de la percepción (nnnnnnnn.nn)</param>
            	   * <param name='dblVar4'>Tasa del IVA (percepciones sobre el IVA) (nn.nn)</param>
            	   * <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.FACTCIERRA(System.String,System.String,System.String)">
            <summary>Cerrar comprobante fiscal</summary>
            <remarks>Se rechazará este comando si no hay un comprobante fiscal abierto. Se rechazará si los montos acumulados generan un desbordamiento de total.</remarks>
            <param name='byVar1'>Tipo de documento {FDRNELC}</param>
            <param name='byVar2'>Letra del documento fiscal {ABCX}</param>
            <param name='strVar3'>Descripción que se imprime en la línea TOTAL (max 20 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.FACTCANCEL">
            <summary>Cancela una factura</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.CTRLINEA">
            <summary>Control de Items de línea</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.PAUSA(System.Int16)">
            <summary>Efectúa una pausa</summary>
            <param name='nVar1'>timeout (en milisegundos) (nnnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.SINCRO">
            <summary>Cancela cualquier comprobante fiscal abierto</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.TRANSPORTE(System.String)">
            <summary>Abre, cierra o efectua un transporte en reportes detallados</summary>
            <param name='byVar1'>Tipo de Transporte {OTA}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.TRANSPORTEDETAL">
            <summary>Transporte en Reportes Detallados</summary>
            <remarks>En el caso de que alguno de los reportes detallados que emite el controlador fiscal, este va a ser tranportadi cuando no quede mas lugar para terminar la impresión según el tamaño de papel definido por el usuario que es seteado por las preferencias.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.TRANSPOABRE">
            <summary>Abre una nueva hoja de transporte</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.TRANSPOPIDE">
            <summary>Cerrar hoja y proceder al transporte</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonForm.TAMANO(System.Int16,System.Int16)">
            <summary>Configurar el tamaño de la hoja</summary>
            <param name='nVar1'>Nro de columnas (nn)</param>
            <param name='nVar2'>Nro de filas (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="T:FiscalNET.EpsonTicket">
            <summary>Interfase de Alto Nivel para Impresoras Fiscales Epson de Tickets de Argentina</summary>
            <remarks>Esta interfase provee una interfase simplificada para enviarle comandos a la impresora fiscal</remarks>
        </member>
        <member name="M:FiscalNET.EpsonTicket.#ctor">
            <summary>Inicializa una nueva instancia de la clase EpsonTicket y carga automaticamente el driver
            correspondiente. </summary>
            <remarks>Debera asegurarse de copiar el driver en el mismo directorio del componente FiscalNET.dll</remarks>
        </member>
        <member name="M:FiscalNET.EpsonTicket.ESTADO(System.String)">
            	   * <summary>Consulta de estado</summary>
            	   * <remarks>Este comando se utiliza para conocer el estado del Impresor Fiscal. Puede ser enviado en cualquier instante ya que no realiza impresión alguna.
            	 Es conveniente llamar esta función antes de iniciar un Documento Fiscal, pero cuando se realiza la generación de documentos, los primeros dos campos de datos poseen la información necesaria para saber si el comando enviado ha sido ejecutado satisfactoriamente.</remarks>
            	   * <param name='byVar1'>Código de operación {NPCADS}</param>
            	   * <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.CIERRE(System.String,System.String)">
            <summary>Cierre de jornada fiscal</summary>
            <remarks>Este comando imprime el reporte de Totales Diarios y, en forma opcional, transfiere los Totales Diarios desde la Memoria de Trabajo a la Memoria Fiscal. Por ello, la duración de la Memoria Fiscal es independiente de la cantidad de transacciones que se realizan en el día.</remarks>
            <param name='byVar1'>Tipo de reporte {ZX}</param>
            <param name='byVar2'>Imprimir {PN}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.CIERREZ">
            <summary>Efectúa un CierreZ</summary>
            <remarks>Se realizará un Cierre Diario que hará que se graben los Totales Diarios en la Memoria Fiscal, y se los borre de la Memoria de Trabajo y el mismo saldrá impreso.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.CIERREX">
            <summary>Efectua un CierreX</summary>
            <remarks>Se realiza un cierre X, se borran los totales X, dejando intactos los Totales Diarios. Estos totales intermedios son útiles para generar totales de cajero a lo largo del día sin volver a establecer los Totales Diarios.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.AUDITORIAF(System.String,System.String,System.String)">
            <summary>Reporte de auditoría por fechas</summary>
            <remarks>Este comando imprime un reporte de Cierres Diarios en forma selectiva por un rango de fechas. Este comando usa tiempo extendido para su finalización. Además brinda la opción de producir sólo totales, o totales y detalles de Cierres Diarios.</remarks>
            <param name='strVar1'>Fecha inicial (AAMMDD) (max 6 bytes)</param>
            <param name='strVar2'>Fecha final (AAMMDD) (max 6 bytes)</param>
            <param name='byVar3'>tipo {TDtd}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.AUDITORIAZ(System.Int16,System.Int16,System.String)">
            <summary>Reporte de auditoría por fechas</summary>
            <remarks>Este comando imprime un reporte de cierres diarios en forma selectiva por un rango de números de cierre. Este comando usa tiempo extendido para la finalización. Provee la opción de producir sólo totales, o totales y detalles de Cierres Diarios.</remarks>
            <param name='nVar1'>Nro Z inicial (nnnn)</param>
            <param name='nVar2'>Nro Z final (nnnn)</param>
            <param name='byVar3'>tipo {TDtd}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.TIQUEABRE(System.String)">
            <summary>Abrir comprobante fiscal</summary>
            <remarks>Este comando es el primer paso para producir un comprobante fiscal Tique. Los datos de la Hora y Fecha son impresos en el momento en que se facture el primer ítem o que se envíe una línea de texto Fiscal.</remarks>
            <param name='byVar1'>Formato para almacenar los datos {CG}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.TIQUETEXTO(System.String)">
            <summary>Imprimir texto fiscal</summary>
            <remarks>Corresponde a las líneas de descripción extra de Tique Fiscal, se deben enviar en forma previa al ítem de línea respectivo, se aceptarán como máximo 4 líneas de texto fiscal consecutivas las cuales se imprimirán cuando se envíe el ítem de línea correspondiente.</remarks>
            <param name='strVar1'>Texto fiscal a imprimir (max 26 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.TIQUEITEM(System.String,System.Double,System.Double,System.Double,System.String,System.Int16,System.Double,System.Double)">
            <summary>Imprimir Item</summary>
            <remarks>No se aceptará el comando si no hay un comprobante fiscal abierto. Se lo rechazará si hay papel en la entrada para impresión o validación de hojas sueltas.</remarks>
            <param name='strVar1'>Descripción del Item (max 20 bytes)</param>
            <param name='dblVar2'>Cantidad (nnnnn.nnn)</param>
            <param name='dblVar3'>Monto del ítem (nnnnnnn.nn)</param>
            <param name='dblVar4'>Tasa del IVA (10.5, 21.0) (nn.nn)</param>
            <param name='byVar5'>Calificador de la operación {MmRr}</param>
            <param name='nVar6'>Nro de bultos (nnnnn)</param>
            <param name='dblVar7'>Tasa de ajuste variable (.nnnnnnnn)</param>
            <param name='dblVar8'>Impuestos internos fijos (nnnnnnnnn.nnnnnnnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.TIQUEITEM2(System.String,System.Double,System.Double,System.Double,System.String,System.Int16,System.Double,System.Double)">
            <summary>Imprimir Item con 4 decimales en el precio</summary>
            <remarks>No se aceptará el comando si no hay un comprobante fiscal abierto. Se lo rechazará si hay papel en la entrada para impresión o validación de hojas sueltas.</remarks>
            <param name='strVar1'>Descripción del Item (max 20 bytes)</param>
            <param name='dblVar2'>Cantidad (nnnnn.nnn)</param>
            <param name='dblVar3'>Monto del ítem (nnnnnnn.nnnn)</param>
            <param name='dblVar4'>Tasa del IVA (10.5, 21.0) (nn.nn)</param>
            <param name='byVar5'>Calificador de la operación {MmRr}</param>
            <param name='nVar6'>Nro de bultos (nnnnn)</param>
            <param name='dblVar7'>Tasa de ajuste variable (.nnnnnnnn)</param>
            <param name='dblVar8'>Impuestos internos fijos (nnnnnnnnn.nnnnnnnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.TIQUESUBTOTAL(System.String,System.String)">
            <summary>Subtotal</summary>
            <remarks>Este comando será rechazado si no hay un comprobante Tique fiscal abierto. Se rechazará si la acumulación de montos genera un desborde de totales. Se usa este comando para enviar los totales de transacciones al Host e imprimir, opcionalmente, el subtotal.</remarks>
            <param name='byVar1'>Imprimir {PN}</param>
            <param name='strVar2'>Texto a imprimir en el subtotal (max 25 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.TIQUEPAGO(System.String,System.Double,System.String)">
            <summary>Devolución de envases, Bonificaciones y Recargos</summary>
            <remarks>Se usa este comando para imprimir información del total y del pago de la transacción. Cuando se envía un PAGO al Impresor Fiscal, se almacena y se imprime junto con el TOTAL cuando se cierra el Tique. Las transacciones de ventas deben emitir comandos de pago y pagar el total completo de la transacción antes de emitir un comando de Cierre de Comprobante Fiscal.</remarks>
            <param name='strVar1'>Texto con descripción del pago (max 25 bytes)</param>
            <param name='dblVar2'>monto (nnnnnnn.nn)</param>
            <param name='byVar3'>Calificador del ítem de línea {CTtDR}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.TIQUECIERRA(System.String)">
            <summary>Cerrar comprobante fiscal</summary>
            <remarks>Este comando se usa para cerrar el comprobante fiscal, acumular totales en Totales Diarios en la Memoria de Trabajo, imprimir el Importe Total del Tique, el importe de los pagos, el vuelto, el logo fiscal y cortar el comprobante fiscal.</remarks>
            <param name='byVar1'>Tipo de corte {TP}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.TIQUECANCEL">
            <summary>Cancela una ticket</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.NOFISABRE(System.String)">
            <summary>Abrir comprobante no-fiscal por rollo de papel</summary>
            <remarks>Este comando es el primer paso en la producción de un Documento No Fiscal. Se imprime el encabezado del comprobante fiscal, pero se lo identifica claramente como "NO FISCAL".</remarks>
            <param name='byVar1'>Se debe enviar S para imprimir en hoja suelta {S}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.NOFISITEM(System.String)">
            <summary>Imprimir texto no-fiscal en un Documento No Fiscal</summary>
            <remarks>El comando será rechazado si no está abierto un comprobante no fiscal. Se restringirá el texto al conjunto de Caracteres del Texto Fiscal.</remarks>
            <param name='strVar1'>Texto no fiscal (max 40 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.NOFISCIERRA(System.String)">
            <summary>Cerrar comprobante no-fiscal</summary>
            <remarks>El comando será rechazado si un comprobante no fiscal no está abierto. Se lo rechazará si hay formularios en las entradas para impresión o validación de hojas sueltas.</remarks>
            <param name='byVar1'>Tipo de corte {TP}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.DNFHTARJETADECREDITO(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Double,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Comando Voucher Tarjeta de Crédito generado con un comprobante no fiscal homologado.</summary>
            <remarks>En caso que no se use un campo se lo deja vacio ("") o se envía la letra ASCII 127 = DEL.</remarks>
            <param name='strVar1'>Nombre de tarjeta de crédito (max 20 bytes)</param>
            <param name='strVar2'>nro de la tarjeta de crédito (max 20 bytes)</param>
            <param name='strVar3'>Nombre del usuario de la tarjeta de crédito (max 23 bytes)</param>
            <param name='strVar4'>Fecha de vencimiento de la tarjeta de crédito (AAMMDD) (max 6 bytes)</param>
            <param name='strVar5'>número de establecimiento (max 20 bytes)</param>
            <param name='strVar6'>número de cupon (max 20 bytes)</param>
            <param name='strVar7'>número interno del comprobante que se esta emitiendo (max 20 bytes)</param>
            <param name='strVar8'>codigo de autorización de la transaccion (max 20 bytes)</param>
            <param name='strVar9'>tipo de operación (max 20 bytes)</param>
            <param name='dblVar10'>Importe que a pagar. (nnnnnnnnn.nn)</param>
            <param name='strVar11'>cantidad de cuotas (max 20 bytes)</param>
            <param name='strVar12'>en que moneda se ha realizado la transaccion (max 20 bytes)</param>
            <param name='strVar13'>número de terminal (max 20 bytes)</param>
            <param name='strVar14'>número de lote (max 20 bytes)</param>
            <param name='strVar15'>número de terminal electronica (max 20 bytes)</param>
            <param name='strVar16'>número de sucursal (max 20 bytes)</param>
            <param name='strVar17'>número o nombre del operador. (max 20 bytes)</param>
            <param name='strVar18'>número de documento fiscal al que se hace referencia (max 20 bytes)</param>
            <param name='byVar19'>Si se envia P se deja una línea para la firma del cliente {NP}</param>
            <param name='byVar20'>Si se envia P se deja una línea para la aclaración de la firma {NP}</param>
            <param name='byVar21'>Si se envia P se deja una línea para el nro de telefono {NP}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.DNFHOBRASOCIAL(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            	   * <summary>Comando Documento Exclusivo para Farmacias como Documento No Fiscal Homologado.</summary>
            	   * <remarks>Este comando se debe ejecutar luego de realizado el documento Fiscal de la Venta con opción de almacenamiento de ítems de venta (Opción `G´).
            	 Se imprimirán las líneas del Tique correspondientes a la descripción y el precio.</remarks>
            	   * <param name='strVar1'>Nombre de la Obra Social y/o el nro de Obra Social. (max 20 bytes)</param>
            	   * <param name='strVar2'>Linea para identificar el coseguro (max 20 bytes)</param>
            	   * <param name='strVar3'>Linea para identificar el coseguro (max 20 bytes)</param>
            	   * <param name='strVar4'>Linea para identificar el coseguro (max 20 bytes)</param>
            	   * <param name='strVar5'>Nro de afiliado (max 20 bytes)</param>
            	   * <param name='strVar6'>Nombre del afiliado (max 20 bytes)</param>
            	   * <param name='strVar7'>Fecha de vencimiento del carnet de la obra social. El formato es AAMMDD (max 6 bytes)</param>
            	   * <param name='strVar8'>Domicilio Fiscal del Vendedor línea 1 (max 20 bytes)</param>
            	   * <param name='strVar9'>Domicilio Fiscal del Vendedor línea 2 (max 20 bytes)</param>
            	   * <param name='strVar10'>número o nombre del establecimiento (max 20 bytes)</param>
            	   * <param name='strVar11'>número interno del comprobante que se esta emitiendo. (max 20 bytes)</param>
            	   * <param name='strVar12'>línea 1 para especificar algun dato a la obra social (max 20 bytes)</param>
            	   * <param name='strVar13'>línea 2 para especificar algun dato a la obra social (max 20 bytes)</param>
            	   * <param name='byVar14'>Si se envia 'P' se deja un espacio para que el cliente ponga su domicilio {NP}</param>
            	   * <param name='byVar15'>Si se envia 'P' se deja un espacio para que el cliente ponga su nro de documento {NP}</param>
            	   * <param name='byVar16'>Si se envia 'P' se deja un espacio para que el cliente ponga su firma {NP}</param>
            	   * <param name='byVar17'>Si se envia 'P' se deja un espacio para que el cliente aclare su firma {NP}</param>
            	   * <param name='byVar18'>Si se envia 'P' se deja un espacio para que el cliente ponga su telefono {NP}</param>
            	   * <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.PONEPREFERENCIA(System.String,System.String,System.String,System.String,System.Int16,System.Int16)">
            <summary>Seleccionar las preferencias del usuario</summary>
            <remarks>Este comando permite realizar configuraciones sobre la impresión en Hoja Suelta y/o Formulario Continuo, así como también seleccionar determinadas preferencias en comprobantes. Para saber cual es la configuración actual, se puede utilizar el comando Leer Preferencias del Usuario.</remarks>
            <param name='byVar1'>Se debe enviar 'P' {P}</param>
            <param name='byVar2'>Opción 1 {DPT}</param>
            <param name='byVar3'>Opción 2 {SRPQ}</param>
            <param name='byVar4'>Opción 3 {OUNS}</param>
            <param name='nVar5'>Si el campo 4 es 'U': establece la cantidad de columnas (nn)</param>
            <param name='nVar6'>Si el campo 4 es 'U': establece la cantidad de líneas que mide la hoja de papel a usar (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.LEEPREFERENCIA(System.String,System.String,System.String)">
            <summary>Leer las preferencias del usuario</summary>
            <remarks>Este comando se utiliza para leer de la memoria de trabajo las preferencias del usuario establecidas con el comando Seleccionar Preferencias del Usuario.</remarks>
            <param name='byVar1'>Se debe enviar P {P}</param>
            <param name='byVar2'>Opción 1 {DPT}</param>
            <param name='byVar3'>Opción 2 {SPQ}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.ESTACIONPPAL">
            <summary>Preparar estación principal</summary>
            <remarks>Este comando se utiliza para preparar la estación de hoja suelta, para la impresión del próximo documento no fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.CORTAPAPEL">
            <summary>Cortar papel</summary>
            <remarks>El comando será rechazado si está abierto un comprobante.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.AVANZATIQUE(System.Int16)">
            <summary>Avanzar papel de tickets</summary>
            <remarks>Mediante este formato de comando se hace avanzar el papel según la cantidad de líneas especificadas.</remarks>
            <param name='nVar1'>Nro de líneas a avanzar (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.AVANZAAUDIT(System.Int16)">
            <summary>Avanzar papel cinta de auditoría</summary>
            <remarks>Mediante este formato de comando se hace avanzar el papel según la cantidad de líneas especificadas.</remarks>
            <param name='nVar1'>Nro de líneas a avanzar (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.AVANZAAMBOS(System.Int16)">
            <summary>Avanzar papeles de tickets y cinta de auditoría</summary>
            <remarks>Mediante este formato de comando se hace avanzar el papel según la cantidad de líneas especificadas.</remarks>
            <param name='nVar1'>Nro de líneas a avanzar (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.AVANZAHOJA(System.Int16)">
            <summary>Avanzar hoja suelta o factura</summary>
            <remarks>Este comando hace avanzar una hoja suelta según la cantidad de líneas especificada. Se utiliza únicamente para Estación Slip.</remarks>
            <param name='nVar1'>Nro de líneas a avanzar (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.PONEFECHORA(System.String,System.String)">
            <summary>Ingresar fecha y hora</summary>
            <remarks>Este comando establece la fecha y hora del Reloj de Tiempo Real del Controlador Fiscal. La fecha y hora del reloj de tiempo real se estampa en todos los documentos fiscales y en todas las entradas de la Memoria Fiscal.</remarks>
            <param name='strVar1'>Fecha (AAMMDD) (max 6 bytes)</param>
            <param name='strVar2'>Hora (HHMMSS) (max 6 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.PIDEFECHORA">
            <summary>Consultar fecha y hora</summary>
            <remarks>Este comando devuelve la fecha y hora del reloj de tiempo real del Controlador Fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.PONEENCABEZADO(System.Int16,System.String)">
            <summary>Programar texto de encabezamiento y cola</summary>
            <remarks>Este comando almacena una línea de Datos Fijos de encabezado o pie en la Memoria de Trabajo. Este comando permite almacenar un código de barras a ser impreso, el cual sólo es permitido en las últimas líneas de un comprobante, ver Apéndice para más detalles.</remarks>
            <param name='nVar1'>Nro de línea de datos fijos (nnnnn)</param>
            <param name='strVar2'>Texto fiscal de datos fijos (max 40 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.PIDEENCABEZADO(System.Int16)">
            <summary>Consultar texto de encabezamiento y cola</summary>
            <remarks>Este comando devuelve una línea de Datos Fijos de encabezado o cola almacenada en la Memoria de Trabajo.</remarks>
            <param name='nVar1'>Nro de línea de datos fijos (nnnnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.BARCODE(System.Int16,System.String,System.Int16)">
            <summary>Imprimir Código de Barras en los encabezados o pié del Ticket.</summary>
            <remarks>Esta sección explica como deben programarse los Códigos de Barras usando el comando @BARCODE. </remarks>
            <param name='nVar1'>Tipo de código de Barra a imprimir (nn)</param>
            <param name='strVar2'>Datos a Imprimir (max 40 bytes)</param>
            <param name='nVar3'>Nro de línea de datos fijos (nnnnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.ABRECAJON1">
            <summary>Abrir gaveta de dinero 1</summary>
            <remarks>Este comando abre el cajón de efectivo 1 anexado a la Impresora Fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.ABRECAJON2">
            <summary>Abrir gaveta de dinero 2</summary>
            <remarks>Este comando abre el cajón de efectivo 2 anexado a la Impresora Fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.FACTABRE(System.String,System.String,System.String,System.Int16,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Abrir comprobante fiscal Ticket-Factura</summary>
            <remarks>Este comando es el primer paso para producir un Comprobante Fiscal tipo Factura, Nota de Crédito, Tique-Factura (TF) o Tique-Nota de Crédito (TNC) (según modelo del equipo). Se rechazará el comando si hay otro comprobante fiscal abierto.</remarks>
            <param name='byVar1'>Tipo de documento fiscal que se va a realizar {TM}</param>
            <param name='byVar2'>Tipo de salida impresa para factura fiscal o recibo - factura {CS}</param>
            <param name='byVar3'>Letra del documento fiscal (A,B o C) {ABC}</param>
            <param name='nVar4'>Cantidad de copias que se deben IMPRIMIR (1 a 5) (n)</param>
            <param name='byVar5'>Tipo de formulario que se utiliza para la factura emitidas en hoja suelta o formulario continuo {PFA}</param>
            <param name='strVar6'>Tamaño de los caracteres que se van a utilizar en toda la factura emitida en hoja suelta o formulario continuo) (max 2 bytes)</param>
            <param name='byVar7'>Responsabilidad frente al IVA del EMISOR en el modo entrenamiento {IRNEMT}</param>
            <param name='byVar8'>Responsabilidad frente al IVA del COMPRADOR {IRNEMFSTCV}</param>
            <param name='strVar9'>Nombre comercial del comprador línea 1 (max 40 bytes)</param>
            <param name='strVar10'>Nombre comercial del comprador línea 2 (max 40 bytes)</param>
            <param name='strVar11'>Tipo de documento del comprador (CUIT, CUIL,DNI) (max 6 bytes)</param>
            <param name='strVar12'>CUIT o documento del comprador (max 11 bytes)</param>
            <param name='byVar13'>Linea OPCIONAL bien de USO {NB}</param>
            <param name='strVar14'>Domicilio del comprador, línea 1 (max 40 bytes)</param>
            <param name='strVar15'>Domicilio del comprador, línea 2 (max 40 bytes)</param>
            <param name='strVar16'>Domicilio del comprador, línea 3 (max 40 bytes)</param>
            <param name='strVar17'>Línea 1 de texto variable (Nro. de Remito en Ticket-Factura o nro. de factura original en Notas de Crédito) (max 40 bytes)</param>
            <param name='strVar18'>Línea 2 de texto variable (max 40 bytes)</param>
            <param name='byVar19'>Formato para almacenar los datos (C o G) {CG}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.FACTITEM(System.String,System.Double,System.Double,System.Double,System.String,System.Int16,System.Double,System.String,System.String,System.String,System.Double,System.Double)">
            <summary>Imprimir Item</summary>
            <remarks>No se aceptará el comando si no hay un comprobante fiscal abierto. Se lo rechazará si no hay papel en la entrada para impresión o validación de hojas sueltas.</remarks>
            <param name='strVar1'>Descripción del producto (max 20 bytes)</param>
            <param name='dblVar2'>Cantidad de unidades (nnnnn.nnn)</param>
            <param name='dblVar3'>Monto del ítem (nnnnnnn.nn)</param>
            <param name='dblVar4'>Tasa del IVA (nn.nn)</param>
            <param name='byVar5'>Calificador de la operación {MmRr}</param>
            <param name='nVar6'>Nro de bultos (nnnnn)</param>
            <param name='dblVar7'>Tasa de ajuste variable (.nnnnnnnn)</param>
            <param name='strVar8'>Linea 1 descripción complementaria del ítem (max 30 bytes)</param>
            <param name='strVar9'>Linea 2 descripción complementaria del ítem (max 30 bytes)</param>
            <param name='strVar10'>Linea 3 descripción complementaria del ítem (max 30 bytes)</param>
            <param name='dblVar11'>Acrecentamiento (.nnnn)</param>
            <param name='dblVar12'>Impuestos internos fijos (nnnnnnnnn.nnnnnnnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.FACTITEM2(System.String,System.Double,System.Double,System.Double,System.String,System.Int16,System.Double,System.String,System.String,System.String,System.Double,System.Double)">
            <summary>Imprimir Item con 4 decimales</summary>
            <remarks>No se aceptará el comando si no hay un comprobante fiscal abierto. Se lo rechazará si no hay papel en la entrada para impresión o validación de hojas sueltas.</remarks>
            <param name='strVar1'>Descripción del producto (max 20 bytes)</param>
            <param name='dblVar2'>Cantidad de unidades (nnnnn.nnn)</param>
            <param name='dblVar3'>Monto del ítem (nnnnnnn.nnnn)</param>
            <param name='dblVar4'>Tasa del IVA (nn.nn)</param>
            <param name='byVar5'>Calificador de la operación {MmRr}</param>
            <param name='nVar6'>Nro de bultos (nnnnn)</param>
            <param name='dblVar7'>Tasa de ajuste variable (.nnnnnnnn)</param>
            <param name='strVar8'>Linea 1 descripción complementaria del ítem (max 30 bytes)</param>
            <param name='strVar9'>Linea 2 descripción complementaria del ítem (max 30 bytes)</param>
            <param name='strVar10'>Linea 3 descripción complementaria del ítem (max 30 bytes)</param>
            <param name='dblVar11'>Acrecentamiento (.nnnn)</param>
            <param name='dblVar12'>Impuestos internos fijos (nnnnnnnnn.nnnnnnnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.FACTSUBTOTAL(System.String,System.String)">
            <summary>Subtotal</summary>
            <remarks>Este comando será rechazado si no hay un comprobante fiscal abierto. Se usa este comando para enviar los totales de transacciones a la computadora.</remarks>
            <param name='byVar1'>Imprimir {PN}</param>
            <param name='strVar2'>Texto a imprimir en el subtotal (max 29 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.FACTPAGO(System.String,System.Double,System.String)">
            <summary>Pagos / Descuentos y Recargos/ Cancelar en Factura / Nota de Crédito / Tique-Factura / Tique-Nota de Crédito.</summary>
            <remarks>Se rechazará este comando si no hay un comprobante fiscal abierto. Se rechazará si los montos acumulados generan un desbordamiento de total. En Impresoras de Tique y Tique-Factura/TNC se rechazará si hay un papel en las estaciones de slip o validación, si no hay papel en la estación de rollo, o si se usó la máxima cantidad de pagos permitida.</remarks>
            <param name='strVar1'>Texto con descripción del pago (max 25 bytes)</param>
            <param name='dblVar2'>monto (nnnnnnnnnn.nn)</param>
            <param name='byVar3'>Calificador del ítem de línea {CTtDR}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.FACTPERCEP(System.String,System.String,System.Double,System.Double)">
            <summary>Percepciones en Factura / Nota de Crédito / TF / TNC.</summary>
            <remarks>Se rechazará este comando si no hay una Factura, Nota de Crédito, Tique-Factura o Tique-Nota de Crédito abierto y al menos un ítem de venta facturado o si los montos acumulados generan un desbordamiento de total. Se usa este comando para imprimir información sobre percepciones Globales o de IVA. Si se envía una Percepción de IVA y no se han facturado productos a dicha tasa, el comando será rechazado.</remarks>
            <param name='strVar1'>Descripción de la percepción (max 25 bytes)</param>
            <param name='byVar2'>Indica si es una percepción sobre el IVA u otra percepción {OIT}</param>
            <param name='dblVar3'>Monto de la percepción (nnnnnnnn.nn)</param>
            <param name='dblVar4'>Tasa del IVA (percepciones sobre el IVA) (nn.nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.FACTCIERRA(System.String,System.String,System.String)">
            <summary>Cerrar comprobante fiscal</summary>
            <remarks>Se rechazará este comando si no hay un comprobante fiscal abierto. Se rechazará si los montos acumulados generan un desbordamiento de total.</remarks>
            <param name='byVar1'>Tipo de documento {TM}</param>
            <param name='byVar2'>Letra del documento fiscal {ABC}</param>
            <param name='strVar3'>Descripción que se imprime en la línea TOTAL (max 20 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.FACTCANCEL">
            <summary>Cancela una factura</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.PAUSA(System.Int16)">
            <summary>Efectúa una pausa</summary>
            <param name='nVar1'>timeout (en milisegundos) (nnnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonTicket.SINCRO">
            <summary>Cancela cualquier comprobante fiscal abierto</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="T:FiscalNET.EpsonVE">
            <summary>Interfase de Alto Nivel para Impresoras Fiscales Epson de Venezuela</summary>
            <remarks>Esta interfase provee una interfase simplificada para enviarle comandos a la impresora fiscal</remarks>
        </member>
        <member name="M:FiscalNET.EpsonVE.#ctor">
            <summary>Inicializa una nueva instancia de la clase EpsonVE y carga automaticamente el driver
            correspondiente. </summary>
            <remarks>Debera asegurarse de copiar el driver en el mismo directorio del componente FiscalNET.dll</remarks>
        </member>
        <member name="M:FiscalNET.EpsonVE.StatusRequest(System.String)">
            <summary>Consulta de estado</summary>
            <remarks>Este comando es utilizado para evaluar el estado del controlador fiscal. También permite definir el comportamiento del equipo a las señales provenientes de los sensores de papel. Podrá ser ejecutado después y antes de cualquier otro comando.</remarks>
            <param name='byVar1'>Tipo de información solicitada {NEABCDRFJSU}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.DailyClose(System.String,System.String)">
            <summary>Cierre de jornada fiscal</summary>
            <remarks>Este comando imprime un reporte con los totales almacenados en la memoria de trabajo. Los montos pueden ser de los totales diarios (reporte Z) o de los totales parciales acumulados desde la emisión del último reporte X. Al realizar un reporte Z los montos almacenados en la memoria de trabajo son llevados a la memoria fiscal.</remarks>
            <param name='byVar1'>Tipo de reporte {ZX}</param>
            <param name='byVar2'>parametro de impresion</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.DailyCloseByDate(System.String,System.String,System.String)">
            <summary>Reporte de auditoria por fechas</summary>
            <remarks>Este comando permite generar un reporte que incluye los diferentes cierres diarios que han sido almacenados en la memoria fiscal durante el periodo de fechas seleccionado. Este comando usa tiempo extendido para su finalización. El reporte puede ser detallado o un resumen mensual.Adicionalmente, utilizando el calificador del comando con la opción ‘C’ la respuesta al comando contiene el rango de cierres diarios asociados al período de fechas. Este comando efectúa una verificación del contenido de la memoria fiscal. Su ejecución puede tardar varios minutos.</remarks>
            <param name='strVar1'>Fecha de inicio de selección AAMMDD (max 6 bytes)</param>
            <param name='strVar2'>Fecha de fin de selección AAMMDD (max 6 bytes)</param>
            <param name='byVar3'>Calificador de reporte {DMRC}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.DailyCloseByNumber(System.Int16,System.Int16,System.String)">
            <summary>Reporte de auditoria por numero</summary>
            <remarks>Este comando permite generar un reporte conformado por una secuencia de cierres diarios. Este comando usa tiempo extendido para su finalización.</remarks>
            <param name='nVar1'>Número de Z de inicio de selección (nnnn)</param>
            <param name='nVar2'>Número de Z de fin de selección (nnnn)</param>
            <param name='byVar3'>Calificador de reporte</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.OpenFiscalReceipt(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
                   * <summary>Abrir comprobante fiscal</summary>
                   * <remarks>Este comando es el primer paso para producir un comprobante fiscal. Se imprime el encabezado, el número, y la fecha y la hora de emisión del comprobante fiscal. Esta información se registra en la
                 memoria de trabajo.Se rechazará el comando si hay un comprobante fiscal abierto, si la memoria fiscal está llena, si hay un error en la memoria de trabajo, o si es necesario realizar un cierre de jornada (Reporte Z).
                 Este comando puede ser utilizado para generar comprobantes de devolución (notas de crédito), para esto se el calificador del comando (campo Nro 5) debe ser igual a 'D'. Si se está realizando una Nota de Crédito son permitidos todos los comandos que aplican para un comprobante
                 fiscal normal, excepto el comando ReturnRecharge.</remarks>
                   * <param name='strVar1'>Razón social 1 (max 40 bytes)</param>
                   * <param name='strVar2'>RIF del comprador (max 20 bytes)</param>
                   * <param name='strVar3'>Nro de comprobante (en devolución) (max 20 bytes)</param>
                   * <param name='strVar4'>Serial de la maquina fiscal que realizo el comprobante en devolución (Solo en nota de crédito) (max 20 bytes)</param>
                   * <param name='strVar5'>Fecha del comprobante en devolución (Solo en nota de crédito) (max 6 bytes)</param>
                   * <param name='strVar6'>Hora del comprobante en devolución (max 6 bytes)</param>
                   * <param name='byVar7'>Tipo de documento {TD}</param>
                   * <param name='byVar8'>Campo reservado</param>
                   * <param name='byVar9'>Campo reservado</param>
                   * <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.PrintFiscalText(System.String,System.String)">
                   * <summary>Imprimir texto fiscal</summary>
                   * <remarks>Se rechazará el comando si no hay un comprobante fiscal abierto. El texto sólo puede ser 'texto fiscal', y debe tener una longitud máxima limitada de manera que no se pueda imprimir nada en las columnas que
                 normalmente están ocupadas por campos de montos de ítems de líneas. No se pueden imprimir más de 3 líneas de texto fiscal consecutivas. Si se efectúo previamente un cierre parcial de un comprobante fiscal
                 se permitirá ejecutar el comando 0x41. Se debe ejecutar de nuevo el comando CloseFiscalReceipt para finalizar el comprobante. Si el campo 2 es igual 'S' no se imprime el texto en la cinta de
                 auditoria.</remarks>
                   * <param name='strVar1'>Texto Fiscal a Imprimir (max 26 bytes)</param>
                   * <param name='byVar2'>Calificador de Impresión {SO}</param>
                   * <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.PrintLineItem(System.String,System.Double,System.Double,System.Double,System.String,System.String,System.String,System.String)">
                   * <summary>Imprimir item</summary>
                   * <remarks>No se aceptará el comando si no hay un comprobante fiscal abierto. Se rechazará si la acumulación de montos genera un desborde de totales. El texto se encuentra limitado a 'texto fiscal' (se pueden utilizar
                 los efectos de impresión, solo para la descripción del ítem).</remarks>
                   * <param name='strVar1'>Descripción de hasta 20 caracteres (max 20 bytes)</param>
                   * <param name='dblVar2'>Cantidad (nnnn.nnn)</param>
                   * <param name='dblVar3'>Monto del ítem (nnnnnnnn.nn)</param>
                   * <param name='dblVar4'>Tasa impositiva (.nnnn)</param>
                   * <param name='byVar5'>Calificador de ítem de línea {Mm}</param>
                   * <param name='byVar6'>Reservado</param>
                   * <param name='byVar7'>Reservado</param>
                   * <param name='byVar8'>Reservado</param>
                   * <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.Subtotal(System.String,System.String)">
                   * <summary>Subtotal</summary>
                   * <remarks>Este comando será rechazado si no hay un comprobante fiscal abierto. Este comando es útil para verificar que los montos acumulados en la impresora fiscal, a través del proceso de facturación,
                 concuerdan con los llevados por el software en el host. Luego de este comando se pueden emitir comandos de impresión de ítem adicionales.</remarks>
                   * <param name='byVar1'>Reservado</param>
                   * <param name='byVar2'>Reservado</param>
                   * <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.ReturnRecharge(System.String,System.Double,System.String,System.Double)">
                   * <summary>Pago,Cancelar y Descuento en Comprobante fiscal</summary>
                   * <remarks>Se rechazará este comando si no hay un comprobante fiscal abierto, si los montos acumulados generan un desbordamiento de total. Se usa este comando para imprimir información del total y del pago de la
                 transacción. Después de este comando, no se pueden emitir comandos de impresión de línea de ítem adicionales.</remarks>
                   * <param name='strVar1'>Descripción de 20 caracteres (max 20 bytes)</param>
                   * <param name='dblVar2'>Monto de pago (nnnnnn.nn)</param>
                   * <param name='byVar3'>Calificador de comando {CTDP}</param>
                   * <param name='dblVar4'>Tasa impositiva sobre la que aplica la promoción (.nnnn)</param>
                   * <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.CloseFiscalReceipt(System.String)">
                   * <summary>Cerrar comprobante fiscal</summary>
                   * <remarks>Se rechazará el comando si no hay un comprobante fiscal abierto, o si los montos acumulativos originan un desbordamiento del total. Este comando se usa para cerrar el comprobante fiscal, acumular totales en
                 memoria de trabajo, imprimir el importe total y los impuestos, el logotipo fiscal y el serial del equipo.</remarks>
                   * <param name='byVar1'>Calificador de comando {AE}</param>
                   * <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.OpenNonFiscalReceipt">
                   * <summary>Abrir comprobante no-fiscal</summary>
                   * <remarks>Se debe utilizar este comando para comenzar a imprimir un documento no fiscal. Se imprime en el
                 encabezado y el número del documento. El comando será rechazado si hay un comprobante fiscal o un
                 documento no fiscal abierto.</remarks>
                   * <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.PrintNonFiscalText(System.String)">
                   * <summary>Imprimir texto no-fiscal</summary>
                   * <remarks>El comando será rechazado si no está abierto un documento no fiscal. Se restringirá el texto al conjunto
                 de caracteres definidos como “texto fiscal”.</remarks>
                   * <param name='strVar1'>Hasta 40 caracteres de texto fiscal (max 40 bytes)</param>
                   * <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.CloseNonFiscalReceipt(System.String)">
                   * <summary>Cerrar comprobante no-fiscal</summary>
                   * <remarks>El comando será rechazado si no está abierto un documento no fiscal. Este comando se utiliza para cerrar el documento no fiscal.
                 Si el calificador de comando es “E”, se termina el documento, se corta el papel y se imprimen las primeras líneas descriptivas del próximo comprobante fiscal. Después de cerrar el documento de esta
                 manera solo se podrá emitir un comprobante fiscal, en caso contrario se deberá cortar el papel.</remarks>
                   * <param name='byVar1'>Calificador de comando. 'E' = indica cierre económico. Se imprime encabezado del próximo comprobante</param>
                   * <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.PaperCut">
            <summary>Cortar papel</summary>
            <remarks>Este comando se utiliza para cortar el papel de recibo. Los comprobantes fiscales, los documentos no fiscales y los reportes con cortados automáticamente al finalizar los comandos respectivos</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.FeedReceipt">
            <summary>Avanzar papel de tickets</summary>
            <remarks>Este comando hace avanzar el papel de recibo.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.ActivateSlip">
            <summary>Activar Split</summary>
            <remarks>Este comando activa el funcionamiento del Slip. Debe ser ejecutado antes de cualquier otro comando relacionado con relacionado con el manejo del Slip.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.InActivateSlip">
            <summary>Este comando desactiva el funcionamiento del Slip.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.FormatoCheque(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Este comando imprime por el Slip en el formato de un cheque.</summary>
            <param name='strVar1'>Monto del Cheque (max 12 bytes)</param>
            <param name='strVar2'>Beneficiario (max 40 bytes)</param>
            <param name='strVar3'>Fecha de emisión (max 20 bytes)</param>
            <param name='byVar4'>'E' = Se imprime la frase 'NO ENDOSABLE', 'R' = Se imprime la frase 'NO ENDOSABLE' en negrita {ER}</param>
            <param name='byVar5'>Separacion entre lineas monto y benficiario(1 al 7)</param>
            <param name='byVar6'>Separacion entre 'la cantidad' y la fecha(1 al 7)</param>
            <param name='byVar7'>Separacion entre 'no endosable' y el monto superior(1 al 7)</param>
            <param name='byVar8'>Separacion entre 'beneficiario' y la cantidad ( 1 al 7)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.FormatoEndoso(System.String,System.String,System.String,System.String)">
            <summary>Este comando imprime por el Slip el endoso para un cheque.</summary>
            <param name='strVar1'>Texto a imprimir (max 33 bytes)</param>
            <param name='strVar2'>Texto a imprimir (max 40 bytes)</param>
            <param name='strVar3'>Texto a Imprimir (max 40 bytes)</param>
            <param name='byVar4'> {ABC}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.SetDateTime(System.String,System.String)">
            <summary>Ingresar fecha y hora </summary>
            <remarks>Este comando establece la fecha y hora del reloj de tiempo real del controlador fiscal, la cual se estampa en todos los documentos fiscales y en todas las entradas de la memoria fiscal.</remarks>
            <param name='strVar1'>Formato de Fecha AAMMDD (Año, Mes, Día) (max 6 bytes)</param>
            <param name='strVar2'>Formato de Hora HHMMSS (Hora, Minutos, Segundos) (max 6 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.GetDateTime">
            <summary>Consultar fecha y hora</summary>
            <remarks>Este comando devuelve la fecha y hora del reloj de tiempo real del controlador fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.SetHeader(System.Int16,System.String)">
            <summary>Programar texto de encabezamiento </summary>
            <remarks>Este comando almacena un línea de datos fijos que aparece en el encabezado o pie de página de los comprobantes fiscales. Se permite hasta un máximo de 5 línea para el encabezado y para el pie de página.</remarks>
            <param name='nVar1'>Número de línea de datos fijos (nn)</param>
            <param name='strVar2'>Texto Fiscal de hasta 40 caracteres (max 40 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.SetTrailer(System.Int16,System.String)">
            <summary>Programar texto de cola</summary>
            <remarks>Este comando almacena un línea de datos fijos que aparece en el encabezado o pie de página de los comprobantes fiscales. Se permite hasta un máximo de 5 línea para el encabezado y para el pie de página.</remarks>
            <param name='nVar1'>Número de línea de datos fijos (nn)</param>
            <param name='strVar2'>Texto Fiscal de hasta 40 caracteres (max 40 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.OpenDrawer1">
            <summary>Abrir gaveta de dinero 1</summary>
            <remarks>Este comando es utilizado para abrir la gaveta(s) de dinero conectada al puerto de la impresora fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.OpenDrawer2">
            <summary>Abrir gaveta de dinero 2</summary>
            <remarks>Este comando es utilizado para abrir la gaveta(s) de dinero conectada al puerto de la impresora fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.SerialRequest">
            <summary>Obtener el Nro de serie de la impresora</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonVE.ProgramTaxes(System.Double,System.Double,System.Double)">
            <summary>Obtener el Nro de serie de la impresora</summary>
            <param name='dblVar1'>Tasa Standard (.nnnn)</param>
            <param name='dblVar2'>Tasa IVA 2 (.nnnn)</param>
            <param name='dblVar3'>Tasa IVA 3 (.nnnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="T:FiscalNET.HasarForm">
            <summary>Interfase de Alto Nivel para Impresoras Fiscales Hasar de formulario continuo y laser de Argentina</summary>
            <remarks>Esta interfase provee una interfase simplificada para enviarle comandos a la impresora fiscal</remarks>
        </member>
        <member name="M:FiscalNET.HasarForm.#ctor">
            <summary>Inicializa una nueva instancia de la clase HasarForm y carga automaticamente el driver
            correspondiente. </summary>
            <remarks>Debera asegurarse de copiar el driver en el mismo directorio del componente FiscalNET.dll</remarks>
        </member>
        <member name="M:FiscalNET.HasarForm.ConfigureControllerByBlock(System.Double,System.Double,System.Double,System.Int16,System.String,System.String,System.String)">
            <summary>Configuración del controlador en bloque</summary>
            <remarks>Configura en bloque los siguientes parámetros del controlador fiscal (Leer más ...)</remarks>
            <param name='dblVar1'>Límite de ingreso datos consumidor (nnnnnnnnn.nn)</param>
            <param name='dblVar2'>Límite ticket factura (nnnnnnnnn.nn)</param>
            <param name='dblVar3'>Porcentaje IVA responsable inscripto (nn.nn)</param>
            <param name='nVar4'>Cantidad de copias (0-4)</param>
            <param name='byVar5'>Impresión CAMBIO {PN}</param>
            <param name='byVar6'>Impresion leyendas {PN}</param>
            <param name='byVar7'>Tipo de corte del papel de ticket {FPN}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.GeneralConfiguration(System.String,System.String,System.Double,System.Double,System.Double,System.Int16,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Configuración general del controlador</summary>
            <remarks>Configura en bloque los siguientes parámetros de funcionamiento del controlador (Leer más ...)</remarks>
            <param name='byVar1'>Impresión de reporte de configuración {PN}</param>
            <param name='byVar2'>Carga de valores por defecto de parámetros ausentes {PN}</param>
            <param name='dblVar3'>Límite ingreso datos consumidor final (nnnnnnnnn.nn)</param>
            <param name='dblVar4'>Límite ticket-factura (nnnnnnnnn.nn)</param>
            <param name='dblVar5'>Porcentaje IVA Responsable no inscripto (nn.nn) (nn.nn)</param>
            <param name='nVar6'>Cantidad de copias (0 a 4)</param>
            <param name='byVar7'>Impresión CAMBIO $0.00 {PN}</param>
            <param name='byVar8'>Impresión leyendas {PN}</param>
            <param name='byVar9'>Tipo de corte del papel de tickets {FPN}</param>
            <param name='byVar10'>Impresión marco {PN}</param>
            <param name='byVar11'>Reimpresión documentos {PN}</param>
            <param name='strVar12'>Texto a imprimir de existir saldo (max 80 bytes)</param>
            <param name='byVar13'>Señal sonora de falta de papel {PN}</param>
            <param name='byVar14'>Tamaño del papel {MACAO}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.ConfigureControllerByOne(System.String,System.String)">
            <summary>Configuración del controlador por parámetros</summary>
            <remarks>Configura uno (a elección) de los siguientes parámetros del controlador fiscal (Leer más ...)</remarks>
            <param name='byVar1'>Parámetro a modificar {456789ABCD}</param>
            <param name='strVar2'>Valor del parámetro</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.ChangeIVAResponsability(System.String)">
            <summary>Cambio de responsabilidad frente al IVA</summary>
            <remarks>Cambia el valor del parámetro de responsabilidad frente al IVA almacenado en la EPROM fiscal.</remarks>
            <param name='byVar1'>Responsabilidad frente al IVA {INEAMS}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.ChangeIBNumber(System.String)">
            <summary>Cambio de nro de ingresos brutos</summary>
            <remarks>Cambia el número de Ingresos Brutos almacenado en la EPROM fiscal.</remarks>
            <param name='strVar1'>Nro de ingresos brutos (max 30 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.ChangeStartDate(System.String)">
            <summary>Cambio de fecha de inicio de actividades</summary>
            <remarks>Cambia la fecha de inicio de actividades almacenada en memoria de trabajo.</remarks>
            <param name='strVar1'>Fecha (AAMMDD) (max 6 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.StoreLogoData(System.String,System.String)">
            <summary>Carga logotipo</summary>
            <remarks>Carga en memoria de trabajo el logotipo a imprimir en los formularios, de a una línea por vez. Una vez almacenado, el logotipo se conserva en memoria hasta ser borrado mediante el comando ResetLogoData.</remarks>
            <param name='byVar1'>Tipo de información {ICSF}</param>
            <param name='strVar2'>Datos (nro de caracteres en cantidad par) (max 128 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.ResetLogoData">
            <summary>Reset logotipo</summary>
            <remarks>Borra el logotipo existente en memoria de trabajo.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.SetComSpeed(System.Int16)">
            <summary>Configuración de velocidad de comunicación</summary>
            <remarks>Establece la velocidad de comunicación entre el host y el controlador fiscal. En caso de no emitirse este comando, el valor por defecto es de 9.600 bps.</remarks>
            <param name='nVar1'>Velocidad de comunicación</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.StatusRequest">
            <summary>Consulta de estado</summary>
            <remarks>Responde, a través de la línea serie, con el estado en que se encuentra el controlador fiscal, el hardware del impresor y los documentos emitidos.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.STATPRN">
            <summary>Consulta de estado intermedio</summary>
            <remarks>Responde, a través de la línea serie, con el estado en que se encuentra el controlador fiscal y el hardware del impresor.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.GetConfigurationData">
            <summary>Consulta de configuración</summary>
            <remarks>Responde, a través de la línea serie, con los parámetros de configuración en bloque con los que opera el controlador fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.GetGeneralConfigurationData">
            <summary>Consulta de configuración general</summary>
            <remarks>Responde, a través de la línea serie, con los parámetros de configuración general con los que opera el controlador fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.GetInitData">
            <summary>Consulta de datos de inicialización</summary>
            <remarks>Responde, a través de la línea serie, con los datos almacenados en memoria EPROM durante la inicialización.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.GetPrinterVersion">
            <summary>Consulta de versión de controlador fiscal</summary>
            <remarks>Responde, a través de la línea serie, con el modelo y versión del controlador fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.HistoryCapacity">
            <summary>Capacidad restante</summary>
            <remarks>Responde con 1) la cantidad total de registros diarios con que cuenta la memoria fiscal (3800 en el presente modelo) y 2) La cantidad de registros diarios que ya se han utilizados (restando la segunda cantidad de la primera se obtiene la cantidad de registros diarios libres).</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.DailyClose(System.String)">
            <summary>Cierre de jornada fiscal</summary>
            <remarks>Responde, según sea el contenido enviado en el Campo 01, con:</remarks>
            <param name='byVar1'>Tipo de reporte {ZX}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.DailyCloseByDate(System.String,System.String,System.String)">
            <summary>Reporte de auditoria por fechas</summary>
            <remarks>Responde imprimiendo un reporte de auditoría entre fecha_inicial / fecha_final, que son seleccionadas de la siguiente manera (Ver mas...)</remarks>
            <param name='strVar1'>Fecha inicial del período (formato AAMMDD) (max 6 bytes)</param>
            <param name='strVar2'>Fecha final del período (formato AAMMDD) (max 6 bytes)</param>
            <param name='byVar3'>Tipo de reporte {TD}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.DailyCloseByNumber(System.Int16,System.Int16,System.String)">
            <summary>Reporte de auditoria por número de Z</summary>
            <remarks>Responde imprimiendo un reporte de auditoría entre entre Z_inicial / Z_final, que son seleccionadas de la siguiente manera (Ver mas ...)</remarks>
            <param name='nVar1'>Número de Z inicial del período (nnnn)</param>
            <param name='nVar2'>Número de Z final del período (nnnn)</param>
            <param name='byVar3'>Tipo de reporte {TD}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.GetDailyReport(System.String,System.String)">
            <summary>Reporte de registro diario</summary>
            <remarks>Envía por el canal serie los datos correspondientes a uno de los registros diarios almacenados en la memoria EPROM fiscal, de acuerdo con lo siguiente:</remarks>
            <param name='strVar1'>Número de Z o fecha (campo de longitud variable) (max 6 bytes)</param>
            <param name='byVar2'>Tipo de reporte {ZF}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.GetWorkingMemory">
            <summary>Consulta de memoria de trabajo</summary>
            <remarks>Responde, a través de la línea serie, con los datos almacenados en memoria de trabajo durante la jornada fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.SendFirstIVA(System.String)">
            <summary>Iniciar información de IVA</summary>
            <remarks>Inicia el envío, por el canal serie, de montos asociados a porcentajes de IVA, impuestos internos, y percepciones. Si se lo emite inmediatamente después de haber cerrado una factura, nota de débito, recibo o nota de crédito (Leer más ...)</remarks>
            <param name='byVar1'>Tipo de informe {DO}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.NextIVATransmission">
            <summary>Continuar información de IVA</summary>
            <remarks>Este comando es complemento del comando SendFirstIVA, de manera que ambos informan, para cada porcentaje, el monto del IVA, las percepciones y el monto neto de las ventas (realizadas con dicho porcentaje). Este comando es complemento del comando (Leer más ...)</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.GetLastCAI">
            <summary>Consultar número de CAI del último documento A emitido</summary>
            <remarks>Este comando sólo se encuentra disponible en los modelos SMH/P-330F, SMH/PL-9F, SMH/PL-23F, SMH/P-1120F y en la v2.01 de los modelos SMH/PL-8F y SMH/P-322F.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.OpenFiscalReceipt(System.String,System.String)">
            <summary>Abrir comprobante fiscal</summary>
            <remarks>Abre un comprobante fiscal, imprimiendo el encabezamiento, borrando el comprobante provisorio que se encuentra en (Ver mas ...)</remarks>
            <param name='byVar1'>Tipo de documento {ABabDE}</param>
            <param name='byVar2'>T ó S (valor fijo) {TS}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.PrintFiscalText(System.String,System.String)">
            <summary>Imprimir texto fiscal</summary>
            <remarks>Responde imprimiendo un texto (típicamente, datos descriptivos de una venta) con una longitud máxima de 50 caracteres. En caso de que el documento abierto sea un recibo, el comando es aceptado pero no provoca ninguna acción.</remarks>
            <param name='strVar1'>Texto fiscal (max 50 bytes)</param>
            <param name='byVar2'>Parámetro display: 0, 1 o 2 {012}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.PrintLineItem(System.String,System.Double,System.Double,System.String,System.String,System.String,System.String,System.String)">
            <summary>Imprimir ítem</summary>
            <remarks>Imprime una línea dividida en varios campos. En facturas A y B los campos son: cantidad, descripción del ítem, (Leer más ...)</remarks>
            <param name='strVar1'>Texto descripción del item (max 50 bytes)</param>
            <param name='dblVar2'>Cantidad (nnnn.nnnnnnnnnn)</param>
            <param name='dblVar3'>Precio unitario (nnnnnnn.nnnn)</param>
            <param name='strVar4'>Porcentaje IVA (nn.nn)/(**.**) (max 5 bytes)</param>
            <param name='byVar5'>Calificador de la operación {Mm}</param>
            <param name='strVar6'>Impuestos internos</param>
            <param name='byVar7'>Parámetro display: 0, 1 o 2 {012}</param>
            <param name='byVar8'>Calificador de monto {TB}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.LastItemDiscount(System.String,System.Double,System.String,System.String,System.String)">
            <summary>Descuento/Recargo sobre último ítem vendido</summary>
            <remarks>Responde imprimiendo una línea con la leyenda DESCUENTO o RECARGO SOBRE ULTIMA VENTA, según sea el (Leer más ...)</remarks>
            <param name='strVar1'>Texto descripción (max 50 bytes)</param>
            <param name='dblVar2'>Monto (nnnnnnnnnn.nn)</param>
            <param name='byVar3'>Imputación {Mm}</param>
            <param name='byVar4'>Parámetro display: 0, 1 o 2 {012}</param>
            <param name='byVar5'>Calificador de monto {TB}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.GeneralDiscount(System.String,System.Double,System.String,System.String,System.String)">
            <summary>Descuento general</summary>
            <remarks>Responde imprimiendo una línea con la leyenda DESCUENTO o RECARGO GENERAL, según sea el (Leer más ...)</remarks>
            <param name='strVar1'>Texto descripción (max 50 bytes)</param>
            <param name='dblVar2'>Monto (nnnnnnnnnn.nn)</param>
            <param name='byVar3'>Imputación {Mm}</param>
            <param name='byVar4'>Parámetro display: 0, 1 o 2 {012}</param>
            <param name='byVar5'>Calificador de monto {TB}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.ReturnRecharge(System.String,System.Double,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Devolución de envases, Bonificaciones y Recargos</summary>
            <remarks>Responde imprimiendo una línea con la leyenda BONIFICACION, RECARGO o DEVOLUCION DE ENVASES, según sea el (Leer más ...)</remarks>
            <param name='strVar1'>Texto descripción (max 50 bytes)</param>
            <param name='dblVar2'>Monto (nnnnnnnnnn.nn)</param>
            <param name='strVar3'>Porcentaje IVA (nn.nn)/(**.**) (max 5 bytes)</param>
            <param name='byVar4'>Imputación {Mm}</param>
            <param name='strVar5'>Impuestos internos</param>
            <param name='byVar6'>Parámetro display: 0, 1 o 2 {012}</param>
            <param name='byVar7'>Calificador de monto {TB}</param>
            <param name='byVar8'>Calificador de operación {BD}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.ChargeNonRegisteredTax(System.Double)">
            <summary>Recargo IVA a Responsable no Inscripto</summary>
            <remarks>Responde almacenando un monto que luego será adicionado a la factura o nota de crédito A en reemplazo del monto resultante de aplicar el porcentaje correspondiente a IVA Responsable no Inscripto ingresado mediante los comandos de configuración. En el caso de los recibos, el monto resultante es guardado en memoria de trabajo. Cuando el recibo se imprime, la cantidad que figura como recibida es la suma de los montos así acumulados.</remarks>
            <param name='dblVar1'>Monto (nnnnnnnnn.nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.Perceptions(System.String,System.String,System.Double)">
            <summary>Percepciones</summary>
            <remarks>Responde almacenando en memoria (para imprimir luego al final del comprobante) los datos correspondientes a (Leer más ...)</remarks>
            <param name='strVar1'>Alícuota IVA (nn.nn / **.**) (max 5 bytes)</param>
            <param name='strVar2'>Texto descripción (max 20 bytes)</param>
            <param name='dblVar3'>Monto (nnnnnnnnn.nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.Subtotal(System.String,System.String,System.String)">
            <summary>Subtotal</summary>
            <remarks>Responde calculando el subtotal del comprobante abierto y enviándolo a través de la línea serie.</remarks>
            <param name='byVar1'>Parámetro impresión {PN}</param>
            <param name='strVar2'>Reservado (llenar con un caracter cualquiera) (max 26 bytes)</param>
            <param name='byVar3'>Parámetro display: 0, 1 o 2 {012}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.ReceiptText(System.String)">
            <summary>Texto de líneas de recibos</summary>
            <remarks>Responde almacenando en memoria una línea con el texto ingresado con las siguientes (Leer más ...)</remarks>
            <param name='strVar1'>Texto descripción (max 106 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.TotalTender(System.String,System.Double,System.String,System.String)">
            <summary>Total</summary>
            <remarks>Responde calculando el total, registrando el monto pagado y calculando el vuelto. Este comando (Leer más ...)</remarks>
            <param name='strVar1'>Texto de descripción (max 50 bytes)</param>
            <param name='dblVar2'>Monto pagado (nnnnnnnnn.nn)</param>
            <param name='byVar3'>Calificador operación {TRC}</param>
            <param name='byVar4'>Parámetro display: 0, 1 o 2 {012}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.CloseFiscalReceipt(System.String)">
            <summary>Cerrar comprobante fiscal</summary>
            <remarks>Si aún no se ha emitido el comando TotalTender, el comando de cierre (Leer más ...)</remarks>
            <param name='byVar1'>Nro de copias a imprimir automáticamente {01234}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.OpenNonFiscalReceipt">
            <summary>Abrir comprobante no fiscal</summary>
            <remarks>Este comando es similar a OpenNonFiscalSlip (se incluyen ambos por compatibilidad con otros modelos).</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.OpenNonFiscalSlip">
            <summary>Abrir comprobante no fiscal en impresora slip</summary>
            <remarks>Este comando es similar a OpenNonFiscalReceipt (se incluyen ambos por compatibilidad con otros modelos).</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.PrintNonFiscalText(System.String,System.String)">
            <summary>Imprimir texto no fiscal</summary>
            <remarks>Responde imprimiendo un texto con una longitud máxima de 120 caracteres.</remarks>
            <param name='strVar1'>Texto no fiscal (max 120 bytes)</param>
            <param name='byVar2'>Parámetro display: 0, 1 o 2 {012}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.CloseNonFiscalReceipt(System.String)">
            <summary>Cerrar comprobante no fiscal</summary>
            <remarks>Responde: 1) Cerrando el comprobante no fiscal; 2) Imprimiendo el trailer del comprobante (incluyendo la leyenda “NO FISCAL” cada 4 líneas). 3) Eyectando la hoja de la impresora (o pasando a la hoja siguiente en caso de tratarse de formulario continuo). </remarks>
            <param name='byVar1'>Nro de copias a imprimir automáticamente {01234}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.OpenDNFH(System.String,System.String,System.String)">
            <summary>Abrir documento no fiscal homologado</summary>
            <remarks>Responde abriendo un documento no fiscal homologado e imprimiendo el (Leer más ...)</remarks>
            <param name='byVar1'>Tipo de documento {RSrstUux0123456789ABCDEFG}</param>
            <param name='byVar2'>T ó S (valor fijo) {TS}</param>
            <param name='strVar3'>Identificación o número del documento (max 20 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.PrintEmbarkItem(System.String,System.Double,System.String)">
            <summary>Imprimir item en remito u orden de salida</summary>
            <remarks>Responde imprimiendo una línea dividida en dos campos: descripción y cantidad. Si se llena el campo de la cantidad con el valor cero, la columna de las cantidades se deja en blanco.</remarks>
            <param name='strVar1'>Descripción item (max 108 bytes)</param>
            <param name='dblVar2'>Cantidad (nnn.nnnn)</param>
            <param name='byVar3'>Parámetro display: 0, 1 o 2 {012}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.PrintAccountItem(System.String,System.String,System.String,System.Double,System.Double,System.String)">
            <summary>Imprimir item en resumen de cuenta o en cargo a la habitación</summary>
            <remarks>Responde imprimiendo una línea dividida en cinco campos: fecha del comprobante original, número del mismo, descripción de la venta o servicio, monto debe y monto haber.</remarks>
            <param name='strVar1'>Fecha del comprobante (AAMMDD) (max 6 bytes)</param>
            <param name='strVar2'>Número del comprobante (max 20 bytes)</param>
            <param name='strVar3'>Descripción venta o servicio (max 60 bytes)</param>
            <param name='dblVar4'>Monto debe (nnnnnnnnn.nn)</param>
            <param name='dblVar5'>Monto haber (nnnnnnnnn.nn)</param>
            <param name='byVar6'>Parámetro display: 0, 1 o 2 {012}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.PrintQuotationItem(System.String,System.String)">
            <summary>Imprimir item en cotización</summary>
            <remarks>Responde imprimiendo una línea de texto. Cuando se ingresa este comando por primera vez, antes de la línea se imprimen automáticamente otras dos con las leyendas “De nuestra consideración” y “Adjuntamos a continuación la siguiente cotización para ser presentada ante:”.</remarks>
            <param name='strVar1'>Descripción item (max 120 bytes)</param>
            <param name='byVar2'>Parámetro display: 0, 1 o 2 {012}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.PrintDNFHInfo(System.String,System.String,System.String)">
            <summary>Imprimir línea de información en DNFH</summary>
            <remarks>Responde imprimiendo una línea de texto. El uso que se da a este texto varía de acuerdo al (Leer más ...)</remarks>
            <param name='byVar1'>Campo a imprimir: 1, 2 o 3 {123}</param>
            <param name='strVar2'>Texto información (max 120 bytes)</param>
            <param name='byVar3'>Parámetro display: 0, 1 o 2 {012}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.CloseDNFH(System.String)">
            <summary>Cerrar documento no fiscal homologado</summary>
            <remarks>Responde cerrando el comprobante no fiscal homologado, además (Leer más ...)</remarks>
            <param name='byVar1'>Nro de copias a imprimir automáticamente {01234}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.SetVoucherData1(System.String,System.String,System.String,System.String,System.String,System.String,System.Int16)">
            <summary>Datos del voucher de tarjeta de crédito 1</summary>
            <remarks>Este comando sólo se encuentra disponible en el modelo SMH/P-330F y en la versión 2.01 de los modelos SMH/PL-8F y SMH/P-322F.</remarks>
            <param name='strVar1'>Nombre del cliente (max 50 bytes)</param>
            <param name='strVar2'>Nombre tarjeta de crédito (max 20 bytes)</param>
            <param name='byVar3'>Calificador de operación {CVDA}</param>
            <param name='strVar4'>Número de tarjeta (max 16 bytes)</param>
            <param name='strVar5'>Fecha vencimiento tarjeta (AAMM) (max 4 bytes)</param>
            <param name='byVar6'>Tipo de tarjeta usada {DC}</param>
            <param name='nVar7'>Cantidad de cuotas (2 dígitos) (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.SetVoucherData2(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Datos del voucher de tarjeta de crédito 2</summary>
            <remarks>Este comando sólo se encuentra disponible en el modelo SMH/P-330F y en la versión 2.01 de los modelos SMH/PL-8F y SMH/P-322F.</remarks>
            <param name='strVar1'>Código de comercio (max 15 bytes)</param>
            <param name='strVar2'>Número de terminal (max 8 bytes)</param>
            <param name='strVar3'>Número de lote (max 3 bytes)</param>
            <param name='strVar4'>Número de cupón (max 4 bytes)</param>
            <param name='byVar5'>Ingreso de datos tarjeta { *}</param>
            <param name='byVar6'>Tipo de operación {NF}</param>
            <param name='strVar7'>Número de autorización (max 6 bytes)</param>
            <param name='strVar8'>Importe (max 15 bytes)</param>
            <param name='strVar9'>Número de comprobante fiscal (max 20 bytes)</param>
            <param name='strVar10'>Nombre del vendedor (max 20 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.PrintVoucher(System.String)">
            <summary>Imprimir voucher</summary>
            <remarks>Este comando sólo se encuentra disponible en el modelo SMH/P-330F y en la versión 2.01 de los modelos SMH/PL-8F y SMH/P-322F.</remarks>
            <param name='byVar1'>Cantidad ejemplares a imprimir {0123}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.Cancel">
            <summary>Cancelación</summary>
            <remarks>Responde cancelando el documento abierto. Se aplica a los siguientes documentos: Documentos fiscales: Factura, Nota de débito, Recibo oficial Documentos no fiscales homologados: Nota de crédito, Recibo X, Remito, Orden de salida, Resumen de cuenta, Cargo a la habitación, Cotización Documentos no fiscales.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.Reprint">
            <summary>Reimpresión del último documento emitido</summary>
            <remarks>Responde imprimiendo una copia del último documento emitido. Se aplica a los siguientes documentos (Leer más ...)</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.BarCode(System.String,System.String,System.String,System.String)">
            <summary>Código de barras</summary>
            <remarks>Responde almacenando los datos de un código de barras y posteriormente imprimiéndolo automáticamente a la (Leer más ...).</remarks>
            <param name='byVar1'>Tipo de barras {12340}</param>
            <param name='strVar2'>Datos EAN 8 / UPCA / EAN 13 / ITS 2 de 5 (max 32 bytes)</param>
            <param name='byVar3'>Impresión de números {NO}</param>
            <param name='byVar4'>Sin efecto en este modelo (poner cualquier caracter)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.SetDateTime(System.String,System.String)">
            <summary>Ingresar fecha y hora</summary>
            <remarks>Pone en fecha y hora el reloj de tiempo real. La fecha y la hora del reloj de tiempo real son impresos en todos los documentos. La fecha es, además, grabada en los registros diarios cuando se realiza un cierre de jornada fiscal.</remarks>
            <param name='strVar1'>Fecha (formato AAMMDD) (max 6 bytes)</param>
            <param name='strVar2'>Hora (formato HHMMSS) (max 6 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.GetDateTime">
            <summary>Consultar fecha y hora</summary>
            <remarks>Responde con la fecha y la hora del reloj de tiempo real.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.SetFantasyName(System.String,System.String)">
            <summary>Programar texto del nombre de fantasía del propietario</summary>
            <remarks>Almacena en memoria de trabajo una línea de texto de la estructura FANTASY. La estructura FANTASY consta de dos líneas que se imprimen automáticamente en el encabezamiento de la factura, inmediatamente abajo del logotipo, y son usadas en los casos en los que el nombre con el que es conocida una empresa no es igual al nombre de la razón social.</remarks>
            <param name='byVar1'>Nro de línea del nombre de fantasía (1-2) {12}</param>
            <param name='strVar2'>Texto de descripción (max 50 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.GetFantasyName(System.String)">
            <summary>Reportar texto del nombre de fantasía del propietario</summary>
            <remarks>Envía, a través de la línea serie de comunicación con el host, una línea de texto de la estructura FANTASY.</remarks>
            <param name='byVar1'>Nro de línea a reportar (1-2) {12}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.SetHeaderTrailer(System.Int16,System.String)">
            <summary>Programar texto de encabezamiento y cola de documentos</summary>
            <remarks>Almacena una línea de texto en la estructura HEADER o TRAILER, para (Leer más ...)</remarks>
            <param name='nVar1'>Nro de línea de encabezamiento (1-5) o cola (11-14) (nn)</param>
            <param name='strVar2'>Texto de descripción (max 120 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.GetHeaderTrailer(System.Int16)">
            <summary>Reportar texto de encabezamiento y cola de documentos</summary>
            <remarks>Envía a través de la línea serie conectada al host una línea de encabezamiento o de cola de documento almacenada en la estructura HEADER o TRAILER.</remarks>
            <param name='nVar1'>Nro de línea de encabezamiento (1-5) o cola (11-14) (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.SetCustomerData(System.String,System.String,System.String,System.String,System.String)">
            <summary>Datos comprador factura</summary>
            <remarks>Almacenando el nombre, responsabilidad frente al IVA y número de (Leer más ...)</remarks>
            <param name='strVar1'>Nombre (max 50 bytes)</param>
            <param name='strVar2'>CUIT / Nro documento (max 11 bytes)</param>
            <param name='byVar3'>Responsabilidad frente al IVA {INEACBMSVWT}</param>
            <param name='byVar4'>Tipo de documento {CL1234-}</param>
            <param name='strVar5'>Domicilio comercial (max 50 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.SetEmbarkNumber(System.String,System.String)">
            <summary>Cargar información remito / comprobante original</summary>
            <remarks>Almacena en memoria de trabajo texto con la siguiente información: (Leer más ...)</remarks>
            <param name='byVar1'>Nro de línea de remito / comprobante original (1-2) {12}</param>
            <param name='strVar2'>Texto de descripción (max 20 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.GetEmbarkNumber(System.String)">
            <summary>Reportar información remito / comprobante original</summary>
            <remarks>Envía, a través de la línea serie de comunicación con el host, una línea de texto con la información relativa a un remito o comprobante original almacenada en memoria.</remarks>
            <param name='byVar1'>Nro de línea a reportar (1-2) {12}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.ChangeBusinessStartupDate(System.String)">
            <summary>Cambiar fecha de inicio de actividad</summary>
            <remarks>Este comando sólo se encuentra disponible en los modelos SMH/P-330F, SMH/PL-9F, SMH/PL-23F, SMH/P-1120F y en la versión 2.01 de los modelos SMH/PL-8F y SMH/P-320F.</remarks>
            <param name='strVar1'>Fecha (formato AAMMDD) (max 6 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarForm.Sincro">
            <summary>Cancela cualquier documento fiscal o no fiscal abierto</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="T:FiscalNET.HasarPA">
            <summary>Interfase de Alto Nivel para Impresoras Fiscales Hasar de Ticket, Formulario y Laser de Panamá</summary>
            <remarks>Esta interfase provee una interfase simplificada para enviarle comandos a la impresora fiscal</remarks>
        </member>
        <member name="M:FiscalNET.HasarPA.#ctor">
            <summary>Inicializa una nueva instancia de la clase HasarPA y carga automaticamente el driver
            correspondiente. </summary>
            <remarks>Debera asegurarse de copiar el driver en el mismo directorio del componente FiscalNET.dll</remarks>
        </member>
        <member name="M:FiscalNET.HasarPA.SetConfigCFData(System.String,System.String)">
            <summary>Config. del controlador por parámetros</summary>
            <remarks>El calificador de precio de venta se refiere al monto ingresado en el comando PrintLineItem.</remarks>
            <param name='byVar1'>Parámetro a modificar {12345}</param>
            <param name='strVar2'>Valor del parámetro</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.StoreLogoData(System.String,System.String)">
            <summary>Carga en la impresora el logotipo de usuario.</summary>
            <param name='byVar1'>Tipo de información {ICF}</param>
            <param name='strVar2'>Datos (nro de caracteres en cantidad par) (max 128 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.ResetLogoData">
            <summary>Reset logotipo</summary>
            <remarks>Este comando sólo puede ser ejecutado inmediatamente después de emitido el comando de cierre de jornada fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.SetFantasy(System.String,System.String)">
            <summary>Programar texto del nombre de fantasía del propietario</summary>
            <remarks>Programa o borra la línea de texto correspondiente al nombre comercial del usuario.</remarks>
            <param name='byVar1'>Nro de línea del nombre de fantasía (1-1) {1}</param>
            <param name='strVar2'>Texto de descripción (max 46 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.StatusExtra">
            <summary>Consulta extra de estado</summary>
            <remarks>Responde, a través de la línea serie conectada al host...</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.GetConfigCFData">
            <summary>Consulta de configuración</summary>
            <remarks>Responde, a través de la línea serie, ..</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.GetSerial">
            <summary>Consulta parcial de datos de inicialización</summary>
            <remarks>Responde, a través de la línea serie, con el número de registro (serial)...</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.GetPrinterVersion">
            <summary>Consulta de versión de controlador fiscal</summary>
            <remarks>Responde, a través de la línea serie, con el modelo y versión del controlador fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.GetInitData">
            <summary>Consulta de datos de inicialización</summary>
            <remarks>Responde, a través de la línea serie, conlos datos almacenados en memoria EPROM ...</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.GetFantasy(System.String)">
            <summary>Reportar texto del nombre de fantasía del propietario</summary>
            <remarks>Devuelve la línea de texto correspondiente al nombre comercial ...</remarks>
            <param name='byVar1'>Nro de línea a reportar (1-1) {1}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.DailyClose(System.String,System.String)">
            <summary>Cierre de jornada fiscal</summary>
            <remarks>Responde, según sea el valor enviado en el byte dedicado a tipo de informe, con:</remarks>
            <param name='byVar1'>Z: Cierre de jornada fiscal; X: Informe X {XZ}</param>
            <param name='byVar2'>Impresion del Reporte {NP}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.DailyCloseByDate(System.String,System.String,System.String)">
            <summary>Reporte de auditoria por fechas</summary>
            <remarks>Permite generar un reporte que incluye los diferentes cierres diarios ...</remarks>
            <param name='strVar1'>Fecha inicial del período (formato AAMMDD) (max 6 bytes)</param>
            <param name='strVar2'>Fecha final del período (formato AAMMDD) (max 6 bytes)</param>
            <param name='byVar3'>G: datos globales; otro caracter: datos detallados {GO}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.DailyCloseByNumber(System.Int16,System.Int16,System.String)">
            <summary>Reporte de auditoria por número de Z</summary>
            <remarks>Permite generar un reporte conformado por los acumulados correspondientes a ...</remarks>
            <param name='nVar1'>Número de Z inicial del período (nnnn)</param>
            <param name='nVar2'>Número de Z final del período (nnnn)</param>
            <param name='byVar3'>T: datos globales; otro caracter: datos por Z {TO}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.GetDailyReport(System.String,System.String)">
            <summary>Reporte de registro diario</summary>
            <remarks>Envía por el canal serie los datos correspondientes a uno de los ...</remarks>
            <param name='strVar1'>Número de Z o fecha (campo de longitud variable) (max 6 bytes)</param>
            <param name='byVar2'>Z: número de Z; F: fecha {ZF}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.GetWorkingMemory">
            <summary>Consulta de memoria de trabajo</summary>
            <remarks>Responde informando, a través de la línea serie, los datos almacenados en  memoria RAM durante la jornada fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.OpenFiscalReceipt(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Abrir comprobante fiscal</summary>
            <param name='strVar1'>Nombre o Razón Social del comprador (max 125 bytes)</param>
            <param name='strVar2'>Número de Registro Unico de Contribuyente (RUC) del comprador (max 30 bytes)</param>
            <param name='strVar3'>Número del comprobante original (max 24 bytes)</param>
            <param name='strVar4'>Número de registro de la impresora fiscal que emitió el comprobante original (max 22 bytes)</param>
            <param name='strVar5'>Fecha del comprobante original (formato AAMMDD) (max 6 bytes)</param>
            <param name='strVar6'>Hora del comprobante original (formato HHMMSS) (max 6 bytes)</param>
            <param name='byVar7'>Tipo de documento {ABD}</param>
            <param name='byVar8'>Reservado</param>
            <param name='byVar9'>Reservado</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.PrintFiscalText(System.String,System.String)">
            <summary>Imprimir texto fiscal</summary>
            <remarks>Responde imprimiendo un texto (típicamente, datos descriptivos de una venta) con una longitud máxima de 42 caracteres.</remarks>
            <param name='strVar1'>Texto fiscal (max 42 bytes)</param>
            <param name='byVar2'>Reservado</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.PrintLineItem(System.String,System.Double,System.Double,System.Double,System.String,System.String)">
            <summary>Imprimir ítem</summary>
            <param name='strVar1'>Texto descripción del item (max 20 bytes)</param>
            <param name='dblVar2'>Cantidad (nnnnnn.nnn)</param>
            <param name='dblVar3'>Precio unitario (nnnnnnnnn.nn)</param>
            <param name='dblVar4'>Tasa de ITBMS (nn.nn)</param>
            <param name='byVar5'>Calificador de la operación {Mm}</param>
            <param name='strVar6'>Codigo del Producto (max 10 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.Subtotal">
            <summary>Subtotal</summary>
            <remarks>Responde calculando el subtotal del comprobante y enviándolo a través de ...</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.TotalTender(System.String,System.Double,System.String,System.Int16)">
            <summary>Pago/Cancelación/Descuento en DF</summary>
            <remarks>Calculando el total, registrando el monto pagado, calculando el vuelto ...</remarks>
            <param name='strVar1'>Texto de descripción (max 20 bytes)</param>
            <param name='dblVar2'>Monto pagado (nnnnnnnnn.nn)</param>
            <param name='byVar3'>Calificador operación {CTD}</param>
            <param name='nVar4'>Medio de pago (n)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.CloseFiscalReceipt(System.String)">
            <summary>Cerrar comprobante fiscal</summary>
            <remarks>El Cierre parcial imprime el Total del comprobante y luego permite ...</remarks>
            <param name='byVar1'>Tipo de cierre {AEO}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.OpenNonFiscalReceipt(System.String)">
            <summary>Abrir comprobante no fiscal</summary>
            <remarks>Responde abriendo un comprobante no-fiscal</remarks>
            <param name='byVar1'>Tipo de documento {CO}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.PrintNonFiscalText(System.String)">
            <summary>Imprimir texto no fiscal</summary>
            <remarks>Responde imprimiendo un texto con una longitud máxima de 80 caracteres.</remarks>
            <param name='strVar1'>Texto no fiscal (max 42 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.CloseNonFiscalReceipt(System.String)">
            <summary>Cerrar comprobante no fiscal</summary>
            <remarks>El Cierre económico imprime el Total del comprobante, ...</remarks>
            <param name='byVar1'>Tipo de cierre {EO}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.SetIVARates(System.Double,System.Double,System.Double,System.Double,System.String)">
            <summary>Programación de Alícuotas ITBMS</summary>
            <remarks>Reservado para uso exclusivo de Compañía Hasar. Se lo menciona en este manual para referencia de desarrolladores de software</remarks>
            <param name='dblVar1'>Tasa imponible ITBMS1 (nn.nn)</param>
            <param name='dblVar2'>Tasa imponible ITBMS2 (nn.nn)</param>
            <param name='dblVar3'>Tasa imponible ITBMS3 (nn.nn)</param>
            <param name='dblVar4'>Tasa imponible ITBMS4 (nn.nn)</param>
            <param name='strVar5'>Clave de validación (max 4 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.GetIVARates">
            <summary>Consulta de Alícuotas ITBMS programadas</summary>
            <remarks>Envía a través de la línea serie el valor programado correspondiente a ...</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.Cancel">
            <summary>Cancelación</summary>
            <remarks>Responde cancelando el documento abierto, cualquiera que fuese éste.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.SetBarCode(System.String,System.String,System.String,System.String)">
            <summary>Código de barras</summary>
            <remarks>Responde almacenando los datos de un código de barras y posteriormente imprimiéndolo al final del comprobante.</remarks>
            <param name='byVar1'>Tipo de barras {01234}</param>
            <param name='strVar2'>Datos EAN 8 / UPCA / EAN 13 / ITS 2 de 5 (max 32 bytes)</param>
            <param name='byVar3'>P: imprime números; otro: no imprime números {PO}</param>
            <param name='byVar4'>Reservado</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.FeedReceipt(System.Int16)">
            <summary>Avanzar papel de tickets</summary>
            <remarks>Responde avanzando el papel de facturas tantas líneas como se indica en el campo correspondiente</remarks>
            <param name='nVar1'>Cantidad de líneas a avanzar (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.CutPaper">
            <summary>Cortar Papel de recibo</summary>
            <remarks>Ejecuta el corte de papel de recibo.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.SetDateTime(System.String,System.String)">
            <summary>Ingresar fecha y hora</summary>
            <remarks>Establece la fecha y hora del reloj de tiempo real interno del controlador fiscal.</remarks>
            <param name='strVar1'>Fecha (formato AAMMDD) (max 6 bytes)</param>
            <param name='strVar2'>Hora (formato HHMMSS) (max 6 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.GetDateTime">
            <summary>Consultar fecha y hora</summary>
            <remarks>Responde con la fecha y la hora del reloj de tiempo real.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.SetHeader(System.Int16,System.String)">
            <summary>Programar texto de encabezamiento y cola de documentos</summary>
            <remarks>Chequea el estado de la memoria de trabajo, y verifica si ...</remarks>
            <param name='nVar1'>Nro de línea de encabezamiento (1-10) (nn)</param>
            <param name='strVar2'>Texto de descripción (max 46 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.SetTrailer(System.Int16,System.String)">
            <summary>Programar texto de encabezamiento y cola de documentos</summary>
            <remarks>Chequea el estado de la memoria de trabajo, y verifica si ...</remarks>
            <param name='nVar1'>Nro de línea de cola (1-10) (nn)</param>
            <param name='strVar2'>Texto de descripción (max 46 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.GetHeader(System.Int16)">
            <summary>Reportar texto de encabezamiento y cola de documentos</summary>
            <remarks>Envía a través de la línea serie una línea de encabezamiento almacenada en la estructura HEADER.</remarks>
            <param name='nVar1'>Nro de línea de encabezamiento (1-10) (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.GetTrailer(System.Int16)">
            <summary>Reportar texto de encabezamiento y cola de documentos</summary>
            <remarks>Envía a través de la línea serie una línea de pié almacenada en la estructura TRAILER.</remarks>
            <param name='nVar1'>Nro de línea de cola (1-10) (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.SetCustExtraData(System.Int16,System.String)">
            <summary>Programación Datos Adicionales del Comprador</summary>
            <remarks>Almacena una línea de datos adicionales del comprador en la estructura CUSTOMER, ...</remarks>
            <param name='nVar1'>Número de línea de datos adicionales del comprador (1-5) (n)</param>
            <param name='strVar2'>Texto de hasta 46 caracteres (max 46 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.GetCustExtraData(System.Int16)">
            <summary>Consulta Datos Adicionales del Comprador</summary>
            <remarks>Envía a través de la línea serie una línea de datos adicionales del Comprador almacenada en la estructura CUSTOMER.</remarks>
            <param name='nVar1'>Número de línea de datos adicionales del comprador (1-5) (n)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.OpenDrawer1">
            <summary>Abrir gaveta 1 de dinero</summary>
            <remarks>Abre la gaveta 1 de dinero conectada a la impresora fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.OpenDrawer2">
            <summary>Abrir gaveta 2 de dinero</summary>
            <remarks>Abre la gaveta 2 de dinero conectada a la impresora fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.SetFiscalAddress(System.Int16,System.String)">
            <summary>Programación de líneas de Domicilio Fiscal</summary>
            <remarks>Almacena en memoria de trabajo una de las 10 líneas de texto del Domicilio Fiscal, las ...</remarks>
            <param name='nVar1'>Nº de línea de Domicilio Fiscal (1-10) (n)</param>
            <param name='strVar2'>Texto de hasta 46 caracteres (max 46 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.GetFiscalAddress(System.Int16)">
            <summary>Consulta de líneas de Domicilio Fiscal</summary>
            <remarks>Envía, a través de la línea serie de comunicación con el host, una línea de texto de Domicilio Fiscal.</remarks>
            <param name='nVar1'>Nº de línea de Domicilio Fiscal (1-10) (n)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.GetDocNumZRange(System.Int16,System.Int16)">
            <summary>Consulta de cierre zeta en el que fue emitido un determinado comprobante</summary>
            <remarks>Este comando identifica el número de cierre Z (el rango de jornadas fiscales) en ...</remarks>
            <param name='nVar1'>Identificador del comprobante buscado (n)</param>
            <param name='nVar2'>Nro del comprobante buscado</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.GetPublicKey">
            <summary>Leer clave pública</summary>
            <remarks>Obtiene la clave pública asociada al controlador fiscal –la cual fue generada en la inicialización del mismo.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.GetAuditRangeZNum(System.String,System.String,System.String)">
            <summary>Obtener rango de cierres Z por números</summary>
            <remarks>Dado un rango de fechas obtiene el rango de números de cierres Z comprendido entre ambas.</remarks>
            <param name='strVar1'>Fecha inicial del período (formato AAMMDD) (max 6 bytes)</param>
            <param name='strVar2'>Fecha final del período (formato AAMMDD) (max 6 bytes)</param>
            <param name='byVar3'>Fuente de la encuesta {AO}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.GetAuditFirstBlock(System.Int16,System.Int16)">
            <summary>Obtener primer bloque de registro de cinta de auditoría</summary>
            <remarks>Dado rango de números de registros Z solicitado responde el número del ...</remarks>
            <param name='nVar1'>Número de Z inicial del período (nnnnnnnn)</param>
            <param name='nVar2'>Número de Z fina del período (nnnnnnnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.GetAuditNextBlock">
            <summary>Obtener siguiente bloque de registro de cinta de auditoría</summary>
            <remarks>Información del registro -codificada en formato ascii85, Firma del registro -no codificada en formato ascii85</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarPA.GetAuditSeqNum">
            <summary>Obtener número de secuencia actual de cinta de auditoría</summary>
            <remarks>Responde el número de secuencia actual de la cinta de auditoría.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="T:FiscalNET.HasarTicket">
            <summary>Interfase de Alto Nivel para Impresoras Fiscales Hasar de Tickets de Argentina</summary>
            <remarks>Esta interfase provee una interfase simplificada para enviarle comandos a la impresora fiscal</remarks>
        </member>
        <member name="M:FiscalNET.HasarTicket.#ctor">
            <summary>Inicializa una nueva instancia de la clase HasarTicket y carga automaticamente el driver
            correspondiente. </summary>
            <remarks>Debera asegurarse de copiar el driver en el mismo directorio del componente FiscalNET.dll</remarks>
        </member>
        <member name="M:FiscalNET.HasarTicket.ConfigureControllerByBlock(System.Double,System.Double,System.Double,System.Int16,System.String,System.String,System.String)">
            <summary>Configuración del controlador en bloque</summary>
            <remarks>Para configurar algunos de los parámetros del presente comando puede usarse el comando ConfigureControllerByOne</remarks>
            <param name='dblVar1'>Límite de ingreso datos consumidor (nnnnnn.nn)</param>
            <param name='dblVar2'>Límite ticket factura (nnnnnn.nn)</param>
            <param name='dblVar3'>Porcentaje IVA responsable inscripto (nn.nn)</param>
            <param name='nVar4'>Cantidad de copias (0-4)</param>
            <param name='byVar5'>Impresión CAMBIO {PN}</param>
            <param name='byVar6'>Impresion leyendas opcionales {PN}</param>
            <param name='byVar7'>Tipo de corte del papel de ticket {FPN}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.GeneralConfiguration(System.String,System.String,System.Double,System.Double,System.Double,System.Int16,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Configuración general del controlador</summary>
            <remarks>Para configurar algunos de los parámetros del presente comando puede usarse el comando ConfigureControllerByOne.</remarks>
            <param name='byVar1'>Imprimir reportes de configuración {PN}</param>
            <param name='byVar2'>Valor predeterminado en parámetros ausentes {PN}</param>
            <param name='dblVar3'>Límite ingreso datos consumidor final (nnnnnnnnn.nn)</param>
            <param name='dblVar4'>Límite tique-factura (nnnnnnnnn.nn)</param>
            <param name='dblVar5'>Porcentaje IVA Responsable No Inscripto (nn.nn)</param>
            <param name='nVar6'>Cantidad de copias (0 a 4)</param>
            <param name='byVar7'>Impresión CAMBIO {PN}</param>
            <param name='byVar8'>Impresion leyendas opcionales {PN}</param>
            <param name='byVar9'>Tipo de corte del papel de ticket {FPN}</param>
            <param name='byVar10'>Reimpresión de comprobantes cancelados {PN}</param>
            <param name='strVar11'>Texto para saldo en medios de pago (max 24 bytes)</param>
            <param name='byVar12'>Señal sonora ante falta de papel {PN}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.ConfigureControllerByOne(System.String,System.String)">
            <summary>Configuración del controlador fiscal por parámetros</summary>
            <remarks>La deshabilitación de la impresión automática de leyendas del encabezado es para uso en controladores fiscales con papel que tenga dicha información preimpresa al dorso.</remarks>
            <param name='byVar1'>Parámetro a modificar {45689ABD}</param>
            <param name='strVar2'>Valor del parámetro</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.ChangeIVAResponsability(System.String)">
            <summary>Cambio de responsabilidad frente al IVA</summary>
            <remarks>Cambia el valor del parámetro de responsabilidad frente al IVA almacenado en la memoria EPROM fiscal.</remarks>
            <param name='byVar1'>Responsabilidad frente al IVA {INEAMS}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.ChangeIBNumber(System.String)">
            <summary>Cambio de nro de ingresos brutos</summary>
            <remarks>Este comando sólo se encuentra disponible en los modelos SMH/P-715F y SMH/P-PR5F)</remarks>
            <param name='strVar1'>Nro de ingresos brutos (max 20 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.ChangeStartDate(System.String)">
            <summary>Cambio fecha de inicio de actividades</summary>
            <remarks>Este comando sólo se encuentra disponible en los modelos SMH/P-715F, SMH/P-PR5F y SMH/P-441F.</remarks>
            <param name='strVar1'>Fecha (AAMMDD) (max 6 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.SetComSpeed(System.Int16)">
            <summary>Seteo de velocidad de comunicación</summary>
            <remarks>Establece la velocidad de comunicación entre el host y el controlador fiscal.</remarks>
            <param name='nVar1'>Velocidad de comunicación (en bps)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.StatusRequest">
            <summary>Consulta de estado</summary>
            <remarks>Responde, a través de la línea serie, con el estado en que se encuentra el controlador fiscal y el hardware de la impresora.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.GetConfigurationData">
            <summary>Consulta de configuración</summary>
            <remarks>Responde, a través de la línea serie, con los parámetros de configuración con los que opera el controlador fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.GetGeneralConfigurationData">
            <summary>Consulta de configuración general</summary>
            <remarks>Responde, a través de la línea serie, con los parametros de configuración general con los que opera el controlador fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.GetInitData">
            <summary>Consulta de datos de inicialización</summary>
            <remarks>Responde, a través de la línea serie, con los datos almacenados en memoria EPROM fiscal durante la inicialización del controlador fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.GetPrinterVersion">
            <summary>Consulta de versión de controlador fiscal</summary>
            <remarks>Este comando sólo se encuentra disponible en los modelos SMH/P-715F, SMH/P-PR5F y SMH/P-441F.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.HistoryCapacity">
            <summary>Capacidad restante</summary>
            <remarks>Responde con: a. La cantidad total de registros diarios con que cuenta la memoria fiscal. b. La cantidad de registros diarios que ya se han utilizados. Restando la segunda cantidad de la primera se obtiene la cantidad de registros diarios libres.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.DailyClose(System.String)">
            <summary>Cierre de jornada fiscal</summary>
            <remarks>Responde, según sea el contenido enviado en el Campo 01, con: </remarks>
            <param name='byVar1'>Tipo de reporte {ZX}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.DailyCloseByDate(System.String,System.String,System.String)">
            <summary>Reporte de auditoria por fechas</summary>
            <remarks>Responde imprimiendo un reporte de auditoría entre fecha inicial / fecha final.</remarks>
            <param name='strVar1'>Fecha inicial del período (formato AAMMDD) (max 6 bytes)</param>
            <param name='strVar2'>Fecha final del período (formato AAMMDD) (max 6 bytes)</param>
            <param name='byVar3'>Tipo de reporte {TD}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.DailyCloseByNumber(System.Int16,System.Int16,System.String)">
            <summary>Reporte de auditoria por número de Z</summary>
            <remarks>Responde imprimiendo un reporte de auditoría entre Z Inicial / Z Final.</remarks>
            <param name='nVar1'>Número de Z inicial del período (nnnn)</param>
            <param name='nVar2'>Número de Z final del período (nnnn)</param>
            <param name='byVar3'>Tipo de reporte {TD}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.GetDailyReport(System.String,System.String)">
            <summary>Reporte de registro diario</summary>
            <remarks>Envía por el canal serie los datos correspondientes a uno de los registros diarios almacenados en la memoria EPROM fiscal, de acuerdo con lo siguiente:</remarks>
            <param name='strVar1'>Número de Z o fecha (campo de longitud variable) (max 6 bytes)</param>
            <param name='byVar2'>Tipo de reporte {ZF}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.GetWorkingMemory">
            <summary>Consulta de memoria de trabajo</summary>
            <remarks>Responde, a través de la línea serie, con los datos almacenados en memoria de trabajo durante la jornada fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.SendFirstIVA(System.String)">
            <summary>Iniciar información de IVA</summary>
            <remarks>Inicia el envío, por el canal serie, de montos asociados a porcentajes de IVA acumulados en el último comprobante fiscal (o nota de crédito) emitido, o de acumulados en la memoria de trabajo.</remarks>
            <param name='byVar1'>Tipo de informe {DO}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.NextIVATransmission">
            <summary>Continuar información de IVA</summary>
            <remarks>Continúa el envío, por el canal serie, de montos asociados a porcentajes de IVA acumulados en el último comprobante fiscal (o nota de crédito) emitido, o de los acumulados en la memoria de trabajo.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.OpenFiscalReceipt(System.String,System.String)">
            <summary>Abrir comprobante fiscal</summary>
            <remarks>Si se desea abrir un tique factura, o un tique nota de débito, previamente deben cargarse obligatoriamente los datos del comprador mediante el comando SetCustomerData, excepto en el caso de que el comprador sea consumidor final y el tique factura o tique nota de débito no supere el monto ingresado al configurar el controlador fiscal (comando ConfigureControllerByBlock, valor predeterminado: $1000 –establecido por AFIP-).</remarks>
            <param name='byVar1'>Tipo de documento {TABDE}</param>
            <param name='byVar2'>T ó S (valor fijo) {TS}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.PrintFiscalText(System.String,System.String)">
            <summary>Imprimir texto fiscal</summary>
            <remarks>Responde imprimiendo un texto (típicamente, datos descriptivos de una venta) con una longitud máxima de 30 caracteres (en el comprobante fiscal, o tique nota de crédito, sólo se imprimen los 28 primeros caracteres, el valor 30 es por compatibilidad con futuros modelos).</remarks>
            <param name='strVar1'>Texto fiscal (max 30 bytes)</param>
            <param name='byVar2'>Parámetro display {012}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.PrintLineItem(System.String,System.Double,System.Double,System.String,System.String,System.String,System.String,System.String)">
            <summary>Imprimir ítem</summary>
            <remarks>Responde imprimiendo en el comprobante la información asociada al ítem y sumando los montos de venta e IVA a los acumulados en el documento fiscal o tique nota de crédito provisorio</remarks>
            <param name='strVar1'>Texto descripción del item (max 20 bytes)</param>
            <param name='dblVar2'>Cantidad (nnnn.nnnnnnnnnn)</param>
            <param name='dblVar3'>Precio unitario (nnnnnnn.nn)</param>
            <param name='strVar4'>Porcentaje IVA (nn.nn)/(**.**) (max 5 bytes)</param>
            <param name='byVar5'>Calificador de la operación {Mm}</param>
            <param name='strVar6'>Impuestos internos</param>
            <param name='byVar7'>Parámetro display {012}</param>
            <param name='byVar8'>Calificador de monto {TB}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.PrintLineItem2(System.String,System.Double,System.Double,System.String,System.String,System.String,System.String,System.String)">
            <summary>Imprimir ítem con 4 decimales</summary>
            <remarks>Este comando permite enviar el monto con 4 decimales. Los comentarios son los mismos que para el comando PrintLineItem.</remarks>
            <param name='strVar1'>Texto descripción del item (max 20 bytes)</param>
            <param name='dblVar2'>Cantidad (nnnnnnn.nnnnnnnnnn)</param>
            <param name='dblVar3'>Precio unitario (nnnnnnn.nnnn)</param>
            <param name='strVar4'>Porcentaje IVA (nn.nn)/(**.**) (max 5 bytes)</param>
            <param name='byVar5'>Calificador de la operación {Mm}</param>
            <param name='strVar6'>Impuestos internos</param>
            <param name='byVar7'>Parámetro display {012}</param>
            <param name='byVar8'>Calificador de monto {TB}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.LastItemDiscount(System.String,System.Double,System.String,System.String,System.String)">
            <summary>Descuento/Recargo sobre último ítem vendido</summary>
            <remarks>Responde imprimiendo una línea donde se muestra: descripción del descuento (o recargo), impuestos y monto del descuento (o recargo) -con posterioridad a la impresión de la línea con la leyenda “Descuento (o Recargo) sobre última venta”-; y restando o sumando en memoria el valor de los bytes 30-42 al valor del último ítem vendido.</remarks>
            <param name='strVar1'>Texto descripción (max 20 bytes)</param>
            <param name='dblVar2'>Monto (nnnnnnn.nn)</param>
            <param name='byVar3'>Imputación {Mm}</param>
            <param name='byVar4'>Parámetro display {012}</param>
            <param name='byVar5'>Calificador de monto {TB}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.GeneralDiscount(System.String,System.Double,System.String,System.String,System.String)">
            <summary>Descuento general</summary>
            <remarks>Responde imprimiendo una línea donde se muestra: descripción del descuento (o recargo), impuestos y monto del descuento (o recargo) con posterioridad a la impresión de la línea con la leyenda “Descuento (o Recargo) general” y restando (o sumando) en memoria el valor del campo 02 a todos los items vendidos en forma proporcional </remarks>
            <param name='strVar1'>Texto descripción (max 20 bytes)</param>
            <param name='dblVar2'>Monto (nnnnnnn.nn)</param>
            <param name='byVar3'>Imputación {Mm}</param>
            <param name='byVar4'>Parámetro display {012}</param>
            <param name='byVar5'>Calificador de monto {TB}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.ReturnRecharge(System.String,System.Double,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Devolución de envases, Bonificaciones y Recargos</summary>
            <remarks>Responde imprimiendo una línea donde se muestra: descripción del descuento (o recargo), impuestos y monto del descuento (o recargo) -con posterioridad a la impresión de la línea con la leyenda “Bonificación (o Recargo,o Devolución de envases)”- y restando o sumando en memoria el monto al valor ya vendido con esa misma alícuota</remarks>
            <param name='strVar1'>Texto descripción (max 20 bytes)</param>
            <param name='dblVar2'>Monto (nnnnnnn.nn)</param>
            <param name='strVar3'>Porcentaje IVA (nn.nn)/(**.**) (max 5 bytes)</param>
            <param name='byVar4'>Imputación {Mm}</param>
            <param name='strVar5'>Impuestos internos</param>
            <param name='byVar6'>Parámetro display {012}</param>
            <param name='byVar7'>Calificador de monto {TB}</param>
            <param name='byVar8'>Calificador de operación {BD}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.ChargeNonRegisteredTax(System.Double)">
            <summary>Recargo IVA a Responsable no Inscripto</summary>
            <remarks>Este comando no existe en el modelo los modelos SMH/P-715F, SMH/P-PR5F y SMH/P-441F</remarks>
            <param name='dblVar1'>Monto (nnnnnnn.nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.Perceptions(System.String,System.String,System.Double)">
            <summary>Percepciones</summary>
            <remarks>Responde imprimiendo al final del comprobante (antes de la totalización del mismo) una línea dividida en tres campos: descripción de la percepción (típicamente, percepciones a aplicar sobre los montos netos sin IVA), alícuota del IVA –no se imprime si se trata de una percepción general- correspondiente a los ítems sobre los que se aplicará la percepción, y monto a aplicar. En el caso de tiques factura ‘A’ (o tique nota de crédito ‘A’, sólo en modelos SMH/P-715F y SMH/P-PR5F), las percepciones aplicadas a un IVA determinado se imprimen al final de la discriminación de la alícuota correspondiente</remarks>
            <param name='strVar1'>Alícuota IVA (nn.nn / **.**) (max 5 bytes)</param>
            <param name='strVar2'>Texto descripción (max 20 bytes)</param>
            <param name='dblVar3'>Monto (nnnnnnn.nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.Subtotal(System.String,System.String,System.String)">
            <summary>Subtotal</summary>
            <remarks>Responde calculando el subtotal del comprobante abierto y enviándolo a través de la línea serie.Si el Campo 01 se llena con el caracter ‘P’, imprimiendo la palabra “Subtot”, seguida del monto (excepto en el caso de tique factura (o tique nota de crédito), en el que el subtotal no se imprime nunca, cualquiera sea el valor Campo 01). Si el comando se emite a continuación del comando TotalTender, la palabra “Subtot” y el monto no se imprimen, cualquiera sea el caracter del Campo 01 (pero igual se envía el monto ya pagado por la línea serie).</remarks>
            <param name='byVar1'>Parámetro impresión {PN}</param>
            <param name='strVar2'>Reservado (llenar con un caracter cualquiera) (max 26 bytes)</param>
            <param name='byVar3'>Parámetro display {012}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.TotalTender(System.String,System.Double,System.String,System.String,System.String)">
            <summary>Total / Pago</summary>
            <remarks>Responde calculando el total, registrando el monto pagado, calculando el vuelto e imprimiendo estos datos. Alternativamente, cancela el comprobante fiscal abierto. Una vez ingresado un pago, el documento no puede ser cancelado, excepto en los modelos SMH/P-PR5F (versión 2.01), SMH/P-715F (versiones 3.02 y posteriores), y SMH/P-441F</remarks>
            <param name='strVar1'>Texto de descripción (max 30 bytes)</param>
            <param name='dblVar2'>Monto pagado (nnnnnnn.nn)</param>
            <param name='byVar3'>Calificador operación {CTR}</param>
            <param name='byVar4'>Parámetro display {012}</param>
            <param name='strVar5'>Texto adicional identificación de tarjeta de hasta 20 caracteres (max 20 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.CloseFiscalReceipt(System.String)">
            <summary>Cerrar comprobante fiscal</summary>
            <remarks>Si aún no se ha emitido el comando TotalTender: Se considera como monto pagado al total de lo vendido (de manera que el vuelto es igual a $0.00). Se imprime como texto identificatorio del monto pagado la leyenda programada como texto para saldos mediante el comando ConfigureControllerByOne, o la configurada por defecto en fábrica: “Cuenta Corriente”.</remarks>
            <param name='byVar1'>Nro de copias a imprimir automáticamente {01234}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.OpenNonFiscalReceipt">
            <summary>Abrir comprobante no fiscal</summary>
            <remarks>Responde abriendo un comprobante no fiscal, imprimiendo el encabezamiento (excepto la razón social y el número de CUIT, que ya se encuentran impresos), que incluye la leyenda “*** NO FISCAL ***”.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.OpenNonFiscalSlip">
            <summary>Abrir comprobante no fiscal en impresora slip</summary>
            <remarks>Este comando no se encuentra disponible en los modelos SMH/P-615F, SMH/P-715F y SMH/P-441F.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.PrintNonFiscalText(System.String,System.String)">
            <summary>Imprimir texto no fiscal</summary>
            <remarks>Responde imprimiendo un texto con una longitud máxima de 80 caracteres. En un documento no fiscal emitido mediante la impresora de tiques sólo se imprimen los 40 primeros caracteres (45 en el modelo SMH/P-441F); en uno emitido mediante la estación slip, se imprimen los 80 caracteres. (La estación slip no se encuentra disponible en los modelos SMH/P-615F, SMH/P-715F y SMH/P-441F).</remarks>
            <param name='strVar1'>Texto no fiscal (max 80 bytes)</param>
            <param name='byVar2'>Parámetro display {012}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.CloseNonFiscalReceipt(System.String)">
            <summary>Cerrar comprobante no fiscal</summary>
            <remarks>Responde:</remarks>
            <param name='byVar1'>Nro de copias a imprimir automáticamente {01234}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.OpenDNFH(System.String,System.String,System.String)">
            <summary>Abrir documento no fiscal homologado</summary>
            <remarks>Este comando sólo se encuentra disponible en los modelos SMH/P-715F, SMH/P-PR5F y SMH/P-441F.</remarks>
            <param name='byVar1'>Tipo de documento {RSxABCDE012345678}</param>
            <param name='byVar2'>T ó S (valor fijo) {TS}</param>
            <param name='strVar3'>Identificación del documento (max 20 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.PrintDNFHInfo(System.Int16,System.String,System.String,System.Int16)">
            <summary>Imprimir línea de información en DNFH</summary>
            <remarks>Este comando sólo está disponible en los modelos SMH/P-715F (versiones 3.02 y posteriores), y SMH/P-441F.</remarks>
            <param name='nVar1'>Campo a imprimir: 1-12 dependiendo del tipo de documento</param>
            <param name='strVar2'>Texto información (max 40 bytes)</param>
            <param name='byVar3'>Parámetro display {012}</param>
            <param name='nVar4'>Cantidad de unidades</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.PrintSignDNFH(System.String)">
            <summary>Impresión de firma y aclaración en DNFH</summary>
            <remarks>Este comando sólo se encuentra disponible en el modelo SMH/P-441F.</remarks>
            <param name='byVar1'>Impresión de Firma, aclaración y otras leyendas {PN}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.ReceiptText(System.String)">
            <summary>Texto de líneas de recibos</summary>
            <remarks>Responde almacenando en memoria una línea con el texto ingresado con las siguientes características:</remarks>
            <param name='strVar1'>Texto de hasta 40 caracteres (max 40 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.CloseDNFH(System.String)">
            <summary>Cerrar documento no fiscal homologado</summary>
            <remarks>Este comando sólo se encuentra disponible en los modelos SMH/P-715F, SMH/P-PR5F y SMH/P-441F.</remarks>
            <param name='byVar1'>Nro de copias a imprimir automáticamente {01234}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.DNFHFarmacias(System.Int16)">
            <summary>Documento No Fiscal Homologado para Farmacias</summary>
            <remarks>Este documento no existe en el modelo SMH/P-441F. En su lugar puede emitirse el documento no fiscal homologado Uso interno farmacias.</remarks>
            <param name='nVar1'>Cantidad de ejemplares a imprimir (max 2) (n)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.DNFHReparto(System.Int16)">
            <summary>Documento No Fiscal Homologado, ticket de reparto</summary>
            <remarks>Este documento no existe en el modelo SMH/P-441F. En su lugar puede emitirse el documento no fiscal homologado Talón de reparto.</remarks>
            <param name='nVar1'>Cantidad de ejemplares a imprimir (max 3) (n)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.SetVoucherData1(System.String,System.String,System.String,System.String,System.String,System.String,System.Int16)">
            <summary>Datos del voucher de tarjeta de crédito 1</summary>
            <remarks>Responde almacenando en memoria datos correspondientes a un voucher de tarjeta de crédito.</remarks>
            <param name='strVar1'>Nombre del cliente (max 30 bytes)</param>
            <param name='strVar2'>Nombre tarjeta de crédito (max 20 bytes)</param>
            <param name='byVar3'>Calificador de operación {CVDA}</param>
            <param name='strVar4'>Número de tarjeta (max 16 bytes)</param>
            <param name='strVar5'>Fecha vencimiento tarjeta (AAMM) (max 4 bytes)</param>
            <param name='byVar6'>Tipo de tarjeta usada {DC}</param>
            <param name='nVar7'>Cantidad de cuotas (2 dígitos) (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.SetVoucherData2(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Datos del voucher de tarjeta de crédito 2</summary>
            <remarks>Responde almacenando en memoria datos correspondientes a un voucher de tarjeta de crédito.</remarks>
            <param name='strVar1'>Código de comercio (max 15 bytes)</param>
            <param name='strVar2'>Número de terminal (max 8 bytes)</param>
            <param name='strVar3'>Número de lote (max 3 bytes)</param>
            <param name='strVar4'>Número de cupón (max 4 bytes)</param>
            <param name='byVar5'>Ingreso de datos tarjeta { *}</param>
            <param name='byVar6'>Tipo de operación {NF}</param>
            <param name='strVar7'>Número de autorización (max 6 bytes)</param>
            <param name='strVar8'>Importe (max 15 bytes)</param>
            <param name='strVar9'>Número de comprobante fiscal (max 20 bytes)</param>
            <param name='strVar10'>Nombre del vendedor (max 20 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.PrintVoucher(System.Int16)">
            <summary>Imprimir voucher</summary>
            <remarks>Responde imprimiendo un voucher de tarjeta de crédito con los datos ingresados mediante los comandos SetVoucherData1 y SetVoucherData2.</remarks>
            <param name='nVar1'>Cantidad ejemplares a imprimir</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.Cancel">
            <summary>Cancelación</summary>
            <remarks>Este comando sólo se encuentra disponible en los modelos SMH/P-715F, SMH/P-PR5F y SMH/P-441F.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.Reprint">
            <summary>Reimpresión del último comprobante emitido</summary>
            <remarks>Este comando se encuentra disponible sólo en el modelo SMH/P-441F.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.BarCode(System.String,System.String,System.String,System.String)">
            <summary>Código de barras</summary>
            <remarks>Este comando no se encuentra disponible en el modelo SMH/P-615F.</remarks>
            <param name='byVar1'>Tipo de barras {12340}</param>
            <param name='strVar2'>Datos EAN 8 / UPCA / EAN 13 / ITS 2 de 5 (max 16 bytes)</param>
            <param name='byVar3'>Impresión de números {NO}</param>
            <param name='byVar4'>Impresión {PN}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.FeedReceipt(System.Int16)">
            <summary>Avanzar papel de tickets</summary>
            <remarks>Responde avanzando el papel de tiques tantas líneas como se indiquen.</remarks>
            <param name='nVar1'>Cantidad de líneas a avanzar (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.FeedJournal(System.Int16)">
            <summary>Avanzar papel cinta de auditoría</summary>
            <remarks>Responde avanzando el papel de tiques tantas líneas como se indiquen.</remarks>
            <param name='nVar1'>Cantidad de líneas a avanzar (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.FeedReceiptJournal(System.Int16)">
            <summary>Avanzar papeles de tickets y cinta de auditoría</summary>
            <remarks>Responde avanzando el papel de tiques tantas líneas como se indiquen.</remarks>
            <param name='nVar1'>Cantidad de líneas a avanzar (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.SetDateTime(System.String,System.String)">
            <summary>Ingresar fecha y hora</summary>
            <remarks>Pone en fecha y hora el reloj de tiempo real. La fecha y la hora del reloj de tiempo real son impresos en todos los documentos. La fecha es, además, grabada en los registros diarios cuando se realiza un cierre de jornada fiscal.</remarks>
            <param name='strVar1'>Fecha (formato AAMMDD) (max 6 bytes)</param>
            <param name='strVar2'>Hora (formato HHMMSS) (max 6 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.GetDateTime">
            <summary>Consultar fecha y hora</summary>
            <remarks>Responde con la fecha y la hora del reloj de tiempo real.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.SetHeaderTrailer(System.Int16,System.String)">
            <summary>Programar texto de encabezamiento y cola de documentos</summary>
            <remarks>Almacena una línea de texto en la estructura HEADER o TRAILER, para ser impresa en el encabezamiento o la cola de un comprobante (fiscal, no fiscal, o no fiscal homologado).</remarks>
            <param name='nVar1'>Nro de línea de encabezamiento (1-10) o cola (11-20) (nn)</param>
            <param name='strVar2'>Texto de descripción (max 40 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.GetHeaderTrailer(System.Int16)">
            <summary>Reportar texto de encabezamiento y cola de documentos</summary>
            <remarks>Este comando devuelve una línea de Datos Fijos de cabecera o cola almacenada en la Memoria de Trabajo.</remarks>
            <param name='nVar1'>Nro de línea de encabezamiento (1-10) o cola (11-20) (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.SetCustomerData(System.String,System.String,System.String,System.String,System.String)">
            <summary>Datos comprador factura</summary>
            <remarks>Responde ...</remarks>
            <param name='strVar1'>Nombre (max 45 bytes)</param>
            <param name='strVar2'>CUIT / Nro documento (max 11 bytes)</param>
            <param name='byVar3'>Responsabilidad frente al IVA {INEACBMSVWT}</param>
            <param name='byVar4'>Tipo de documento {CL01234 }</param>
            <param name='strVar5'>Domicilio comercial (max 45 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.SetFantasyName(System.String,System.String)">
            <summary>Programar texto del nombre de fantasía del propietario</summary>
            <remarks>Almacena en memoria de trabajo una línea de texto de la estructura FANTASY. La estructura FANTASY consta de dos líneas que se imprimen automáticamente al comienzo del ticket, inmediatamente antes de la razón social, y son usadas en los casos en los que el nombre con el que es conocida una empresa no es igual al nombre de la razón social.</remarks>
            <param name='byVar1'>Nro de línea del nombre de fantasía (0,1,2) {012}</param>
            <param name='strVar2'>Texto de descripción (max 45 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.GetFantasyName(System.String)">
            <summary>Reportar texto del nombre de fantasía del propietario</summary>
            <remarks>Este comando no se encuentra disponible en el modelo SMH/P-615F</remarks>
            <param name='byVar1'>Nro de línea a reportar (1,2) {12}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.SetEmbarkNumber(System.Int16,System.String)">
            <summary>Cargar información remito / comprobante original</summary>
            <remarks>Este comando sólo se encuentra disponible en los modelos SMH/P-715F, SMH/P-PR5F, y SMH/P-441F.</remarks>
            <param name='nVar1'>Nro de línea de remito / comprobante original (0,1,2) (n)</param>
            <param name='strVar2'>Texto de descripción (max 20 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.GetEmbarkNumber(System.Int16)">
            <summary>Reportar información remito / comprobante original</summary>
            <remarks>Este comando sólo se encuentra disponible en los modelos SMH/P-715F, SMH/P-PR5F, y SMH/P-441F.</remarks>
            <param name='nVar1'>Nro de línea a reportar (1-2) (n)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.ChangeBussinessStartupDate(System.String)">
            <summary>Cambiar fecha de inicio de actividad</summary>
            <remarks>Este comando sólo se encuentra disponible en los modelos SMH/P-PR5F (versión 2.01), SMH/P-715F (versiones 2.01 y posteriores), y SMH/P-441F.</remarks>
            <param name='strVar1'>Fecha (formato AAMMDD) (max 6 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.OpenDrawer">
            <summary>Abrir gaveta</summary>
            <remarks>Abre el cajón de dinero conectado a la impresora fiscal.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.WriteDisplay(System.String,System.String)">
            <summary>Escribir en display</summary>
            <remarks>Este comando sólo es operativo en el modelo SMH/P-615F, variante con display.</remarks>
            <param name='byVar1'>Campo sobre el que se escribe {KLN}</param>
            <param name='strVar2'>Mensaje a exhibir (max 16 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.HasarTicket.Sincro">
            <summary>Cancela cualquier documento fiscal o no fiscal abierto</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="T:FiscalNET.EpsonDO">
            <summary>Interfase de Alto Nivel para Impresoras Fiscales Epson de la Rep. Dominicana</summary>
            <remarks>Esta interfase provee una interfase simplificada para enviarle comandos a la impresora fiscal</remarks>
        </member>
        <member name="M:FiscalNET.EpsonDO.#ctor">
            <summary>Inicializa una nueva instancia de la clase EpsonDO y carga automaticamente el driver correspondiente. </summary>
            <remarks>Debera asegurarse de copiar el driver en el mismo directorio del componente FiscalNET.dll</remarks>
        </member>
        <member name="M:FiscalNET.EpsonDO.Sincro">
            <summary>Cancela cualquier comprobante fiscal o no fiscal abierto</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.StatusRequest">
            <summary>Obtiene los valores de estado fiscal y de impresora en tiempo real.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetInitErrorInfo">
            <summary>Obtiene el código de error correspondiente si se ha producido un error en el inicio de la impresora fiscal.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetInternalError">
            <summary>Obtiene el código de error correspondiente si se ha producido un error en operaciones internas.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.SetComSpeed(System.String)">
            <summary>Configura la velocidad de comunicación del puerto de usuario (host port). La configuración se hará efectiva una vez que se apague y se vuelva a encender la impresora.</summary>
            <param name='byVar1'>Velocidad</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetPrinterStatus(System.String)">
            <summary>Imprime un documento con las características del mecanismo impresor.</summary>
            <param name='byVar1'>Imprimir</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.RippleTest(System.String,System.Int16)">
            <summary>Imprime el documento de ripple test.</summary>
            <param name='byVar1'>Impresión</param>
            <param name='nVar2'>Cantidad de lineas (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetFiscalFeatures(System.String)">
            <summary>Obtiene las características fiscales de la impresora fiscal.</summary>
            <param name='byVar1'>Imprimir</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetSysEvents">
            <summary>Obtiene información acerca de los eventos más recientes ocurridos en el sistema desde el último desbloqueo de fábrica (dip-switch 8 habilitado).</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetPrinterVersion(System.String)">
            <summary>Obtiene los datos de serialización que se encuentran configurados en el equipo. Es posible obtener una salida impresa.</summary>
            <param name='byVar1'>Impresion</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.SetDateTime(System.String,System.String)">
            <summary>Establece el valor del reloj interno de la impresora fiscal.</summary>
            <param name='strVar1'>Fecha (DDMMCCYY) (max 8 bytes)</param>
            <param name='strVar2'>Hora  (HHMMSS) (max 6 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetDateTime">
            <summary>Obtiene los valores actuales de configuración del reloj interno de la impresora fiscal.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetInitData(System.String)">
            <summary>Obtiene los datos de fiscalización que se encuentran configurados en el equipo. Es posible obtener una salida impresa.</summary>
            <param name='byVar1'>Imprimir</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.SetHeader(System.Int16,System.String)">
            <summary>Configura el valor de las líneas de encabezado que se almacenan en la memoria de trabajo del equipo.</summary>
            <remarks>Para que la línea de encabezado no sea impresa se debe enviar el campo texto vacío.</remarks>
            <param name='nVar1'>Nro de línea (1 al 10) (nnn)</param>
            <param name='strVar2'>Texto del encabezamiento (max 42 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetHeader(System.Int16)">
            <summary>Obtiene los valores de las líneas de encabezado almacenadas en la memoria de trabajo de la impresora fiscal.</summary>
            <remarks>Si se recibe el campo texto vacío implica que la línea de encabezado no será impresa.</remarks>
            <param name='nVar1'>Nro de línea (1 al 10) (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.SetTrailer(System.Int16,System.String)">
            <summary>Configura el valor de las líneas de cola que se almacenan en la memoria de trabajo del equipo.</summary>
            <remarks>Para que la línea de cola no sea impresa se debe enviar el campo texto vacío.</remarks>
            <param name='nVar1'>Nro de línea (1 al 10) (nnn)</param>
            <param name='strVar2'>Texto de la línea (max 42 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetTrailer(System.Int16)">
            <summary>Obtiene los valores de las líneas de cola almacenadas en la memoria de trabajo de la impresora fiscal.</summary>
            <remarks>Si se recibe el campo texto vacío implica que la línea de cola no será impresa.</remarks>
            <param name='nVar1'>Nro de línea (1 al 10) (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.SetPaymentMedia(System.Int16,System.String)">
            <summary>Configura un tipo de pago para ser utilizado durante el proceso de facturación.</summary>
            <remarks>El número de tipo de pago debe estar comprendido entre 1 y 20.</remarks>
            <param name='nVar1'>Número de tipo de pago (nn)</param>
            <param name='strVar2'>Texto</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetPaymentMedia(System.Int16)">
            <summary>Obtiene los valores que han sido configurados como tipos de pago.</summary>
            <remarks>El número de tipo de pago debe estar comprendido entre 1 y 20.</remarks>
            <param name='nVar1'>Número de tipo de pago (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.SetVendorLineInfo(System.Int16,System.String)">
            <summary>Configura el valor de las líneas de establecimiento que se almacenan en la memoria de trabajo del equipo.</summary>
            <param name='nVar1'>Número de línea de establecimiento (nnn)</param>
            <param name='strVar2'>Texto (max 42 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetVendorLineInfo(System.Int16)">
            <summary>Obtiene los valores de las líneas de establecimiento almacenadas en la memoria de trabajo de la impresora fiscal.</summary>
            <param name='nVar1'>Número de línea de establecimiento (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.SetSystemFont(System.String)">
            <summary>Configura la fuente utilizada por el equipo.</summary>
            <param name='byVar1'>Fuente a utilizar</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetSystemFont">
            <summary>Obtiene la fuente utilizada por el equipo.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.SetCancelMode(System.Int16)">
            <summary>Configurar modo de cancelación de comprobantes fiscales</summary>
            <remarks>Configura el modo de cancelación de los comprobantes fiscales. Este modo controla lo que ocurre con los comprobantes cuya impresión fue interrumpida por un corte de corriente</remarks>
            <param name='nVar1'>Modo de cancelamiento (n)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetCancelMode">
            <summary>Obtiene el modo de cancelación de los comprobantes fiscales.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.PaperFeed(System.Int16,System.String)">
            <summary>Avanza el papel en la estación indicada la cantidad de líneas especificadas.</summary>
            <param name='nVar1'>Cantidad de líneas a avanzar (nn)</param>
            <param name='byVar2'>Estación</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.PaperCut">
            <summary>Corta el papel en la estación roll.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.PaperLoad(System.String)">
            <summary>Habilita la carga de papel en la estación slip o de validación.</summary>
            <param name='byVar1'>estación</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.PaperEject(System.String,System.String)">
            <summary>Expulsa el papel de la estación slip o validación.</summary>
            <param name='byVar1'>estación</param>
            <param name='byVar2'>modo</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.WaitCancel">
            <summary>Cancela la espera de carga o retiro de papel de la estación slip o de validación.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.OpenDrawer(System.String)">
            <summary>Realiza la apertura de las gavetas de dinero.</summary>
            <param name='byVar1'>Nro de cajon (1 o 2)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.CheckStartMICR(System.String,System.String,System.String)">
            <summary>Prepara la estación para cargar un cheque y realizar la lectura del mismo.</summary>
            <remarks>El mecanismo impresor esperará la carga del cheque y una vez cargado, procederá a la carga y lectura del mismo en forma simultánea.</remarks>
            <param name='byVar1'>Tipo de letra {01}</param>
            <param name='byVar2'>Recibir informacion extendida {SN}</param>
            <param name='byVar3'>Reemplazar los caracteres no reconocidos por ? (S/N)  {SN}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.CheckEjectMICR">
            <summary>Expulsa el cheque de la estación de slip (MICR).</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.SelectSlipMICR">
            <summary>Selecciona la estación slip cuando se encuentra cargado papel en estación slip para lectura de MICR.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetCheckDataMICR">
            <summary>Obtiene el valor de la última lectura realizada al cargar el cheque.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.ClearHeaderMICR">
            <summary>Realiza la limpieza del cabezal MICR.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.CheckResetPos(System.String)">
            <summary>Prepara el cheque en la posición inicial de impresión.</summary>
            <param name='byVar1'>Modo {FR}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.SetScannerArea(System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>Configura los valores de las coordenadas para realizar el scan de imágenes por la estación slip.</summary>
            <remarks>En caso de enviarse valor por fuera de los límites establecido, la impresora establecerá el valor mas cercano posible.</remarks>
            <param name='nVar1'>Valor x1 (coordenada superior izquierda) (nnn)</param>
            <param name='nVar2'>Valor y1 (coordenada superior izquierda) (nnn)</param>
            <param name='nVar3'>Valor x2 (coordenada inferior derecha) (nnn)</param>
            <param name='nVar4'>Valor y2 (coordenada inferior derecha) (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetScannerArea">
            <summary>Obtiene los valores de configuración de las coordenadas para realizar el scan de imágenes por la estación slip.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.SetScannerCropArea(System.Int16,System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>Configura los valores de las coordenadas para recortar un área cuando se realiza el scan de imágenes por la estación slip.</summary>
            <remarks>El número de área de recorte debe estar comprendido entre 1 y 10.</remarks>
            <param name='nVar1'>Nro de area de recorte (nnn)</param>
            <param name='nVar2'>Valor x1 (coordenada superior izquierda) (nnn)</param>
            <param name='nVar3'>Valor y1 (coordenada superior izquierda) (nnn)</param>
            <param name='nVar4'>Valor x2 (coordenada inferior derecha) (nnn)</param>
            <param name='nVar5'>Valor y2 (coordenada inferior derecha) (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetScannerCropArea">
            <summary>Obtiene los valores de configuración de las coordenadas para recortar un área cuando se realiza el scan de imágenes por la estación slip.</summary>
            <remarks>El número de área de recorte debe estar comprendido entre 1 y 10.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.ClearScannerCropArea(System.Int16)">
            <summary>Borra la configuración de un área de recorte para cuando se realiza el scan de imágenes por la estación slip.</summary>
            <remarks>El número de área de recorte debe estar comprendido entre 1 y 10. Si se envía 0 la impresora borrará todas las configuraciones de área de recorte.</remarks>
            <param name='nVar1'>Número de área de recorte (0 = todas las áreas) (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.ScannerPreScan">
            <summary>Efectúa un pre-scan de imagen por la estación slip.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.ScannerStartScan(System.String,System.Int16)">
            <summary>Comienza el proceso de scan por la estación slip.</summary>
            <remarks>Si el proceso de scan falla, los campos 5 al 10 serán retornados vacíos.</remarks>
            <param name='byVar1'>Formato {NBF}</param>
            <param name='nVar2'>Valor del brillo del scan</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.ScannerGetNextData">
            <summary>Obtiene el siguiente set de datos de scan.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.ScannerEndScan">
            <summary>Finaliza el proceso de descarga de datos de scan.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.ScannerCancelScan">
            <summary>Cancela el proceso de descarga de scan.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.DailyCloseZ(System.String)">
            <summary>Realiza el cierre de la jornada fiscal almacenando los importes facturados en memoria fiscal.</summary>
            <param name='byVar1'>Imprimir el reporte</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.DailyCloseX(System.String)">
            <summary>Realiza el cierre de cajero (cambio de turno). Imprimiendo la información parcial desde el último cierre de cajero o desde el inicio de la jornada fiscal.</summary>
            <remarks>El número de cierre de cajero es el correspondiente al número de reporte emitido dentro de la jornada fiscal.</remarks>
            <param name='byVar1'>Imprimir</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.PrintReportX">
            <summary>Realiza el informe X (al igual que el de la secuencia del botón).</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetCurrentFiscalReport(System.String)">
            <summary>Obtiene información de la jornada fiscal en curso.</summary>
            <remarks>Si no se han emitido boletas durante la jornada fiscal, los campos 4 y 5 retornarán vacío.</remarks>
            <param name='byVar1'>Imprimir</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetCurrentVatReport(System.String)">
            <summary>Obtiene información de impuestos (ITBIS) de la jornada fiscal en curso.</summary>
            <param name='byVar1'>Imprimir</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetCurrentPaymentReport(System.String,System.String)">
            <summary>Obtiene información de pagos de la jornada fiscal en curso.</summary>
            <remarks>La impresora fiscal devolverá 2 campos por cada tipo de pago que haya sido utilizado durante la jornada fiscal en el orden indicado del campo 3 al 4.</remarks>
            <param name='byVar1'>Imprimir</param>
            <param name='byVar2'>Modo</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetWorkingMemory">
            <summary>Informa los acumuladores y contadores en la memoria fiscal.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.DailyCloseByDate(System.String,System.String,System.String,System.String)">
            <summary>Inicia un informe de cierres Z. Obtiene la información de acuerdo a los parámetros solicitados y prepara la descarga electrónica de datos.</summary>
            <remarks>En caso de solicitar un informe por mes o por día la impresora fiscal considera los datos del primer campo para realizar el reporte.</remarks>
            <param name='strVar1'>Fecha inicial (DDMMCCYY) (max 8 bytes)</param>
            <param name='strVar2'>Fecha final (DDMMCCYY)(opcional) (max 8 bytes)</param>
            <param name='byVar3'>Tipo de informe</param>
            <param name='byVar4'>Imprimir</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.DailyCloseByNumber(System.Int16,System.Int16,System.String,System.String)">
            <summary>Inicia un informe de cierres Z. Obtiene la información de acuerdo a los parámetros solicitados y prepara la descarga electrónica de datos.</summary>
            <remarks>En caso de solicitar un informe por número de Z la impresora fiscal considera los datos del primer campo para realizar el reporte.</remarks>
            <param name='nVar1'>Nro de cierre Z inicial (nnnnn)</param>
            <param name='nVar2'>Nro de cierre Z final (opcional) (nnnnn)</param>
            <param name='byVar3'>Tipo de informe</param>
            <param name='byVar4'>Imprime</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetNextDailyCloseReportData">
            <summary>Obtiene el primero o siguiente registro a descargar.</summary>
            <remarks>Los datos son descargados en forma continua. La estructura de los mismos corresponderá de acuerdo al tipo de informe solicitado.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.CloseDailyCloseReport">
            <summary>Confirma la descarga existosa y da por finalizado el informe.</summary>
            <remarks>No deben existir pendientes de descarga</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.CancelDailyCloseReport">
            <summary>Cancela el informe en proceso de descarga.</summary>
            <remarks>Debe existir un informe de cierres Z iniciado</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetBriefReportByDate(System.String,System.String,System.String)">
            <summary>Obtiene información acumulada (resumida) de las jornadas fiscales de acuerdo a un rango de fechas.</summary>
            <remarks>Si no se han emitido boletas durante el periodo consultado, los campos 5 y 6 retornarán vacío.</remarks>
            <param name='strVar1'>Fecha inicial (DDMMCCYY) (max 8 bytes)</param>
            <param name='strVar2'>Fecha final (DDMMCCYY) (max 8 bytes)</param>
            <param name='byVar3'>Imprimir</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetBriefReportByNumber(System.Int16,System.Int16,System.String)">
            <summary>Obtiene información acumulada (resumida) de las jornadas fiscales de acuerdo a un rango de números de cierre Z.</summary>
            <remarks>Si no se han emitido boletas durante el periodo consultado, los campos 5 y 6 retornarán vacío.</remarks>
            <param name='nVar1'>Nro del primer cierrez (nnnnn)</param>
            <param name='nVar2'>Nro del último cierrez (nnnnn)</param>
            <param name='byVar3'>Imprimir</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.StartTransactionReportByDate(System.String,System.String,System.String,System.String)">
            <summary>Inicia un informe de transacciones. Obtiene la información de acuerdo a los parámetros solicitados y prepara la descarga electrónica de datos.</summary>
            <remarks>En caso de solicitar un informe por mes o por día la impresora fiscal considera los datos del primer campo para realizar el reporte.</remarks>
            <param name='strVar1'>Fecha inicial (DDMMCCYY) (max 8 bytes)</param>
            <param name='strVar2'>Fecha final (DDMMCCYY)(opcional) (max 8 bytes)</param>
            <param name='byVar3'>Tipo de informe</param>
            <param name='byVar4'>Imprimir</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.StartTransactionReportByNumber(System.Int16,System.Int16,System.String,System.String)">
            <summary>Inicia un informe de transacciones. Obtiene la información de acuerdo a los parámetros solicitados y prepara la descarga electrónica de datos.</summary>
            <remarks>En caso de solicitar un informe por número de Z la impresora fiscal considera los datos del primer campo para realizar el reporte</remarks>
            <param name='nVar1'>Nro de cierre Z inicial (nnnnn)</param>
            <param name='nVar2'>Nro de cierre Z final (opcional) (nnnnn)</param>
            <param name='byVar3'>Tipo de informe</param>
            <param name='byVar4'>Imprimir</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetNextTransactionReportData">
            <summary>Obtiene el primero o siguiente registro a descargar.</summary>
            <remarks>Los datos son descargados en forma continua. La estructura de los mismos corresponderá de acuerdo al tipo de informe solicitado.</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.CloseTransactionReport">
            <summary>Confirma la descarga existosa y da por finalizado el informe.</summary>
            <remarks>No deben existir pendientes de descarga</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.CancelTransactionReport">
            <summary>Cancela el informe en proceso de descarga.</summary>
            <remarks>Debe existir un informe de cierres Z ó de transacciones iniciado</remarks>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.TicketOpen(System.String,System.Int16,System.Int16,System.String,System.String,System.String,System.String,System.String,System.Int16,System.Int16,System.Int16)">
            <summary>Realiza la apertura de un documento boleta fiscal.</summary>
            <remarks>Si la jornada fiscal se encuentra abierta, no deben haber transcurrido mas de 24 horas desde el inicio de la jornada.</remarks>
            <param name='byVar1'>Tipo de documento {ABCDEF}</param>
            <param name='nVar2'>Número de sucursal (nnnn)</param>
            <param name='nVar3'>Número de caja (nnnn)</param>
            <param name='strVar4'>NCF (max 19 bytes)</param>
            <param name='strVar5'>Razón social del comprador (max 40 bytes)</param>
            <param name='strVar6'>RNC del comprador (max 11 bytes)</param>
            <param name='strVar7'>NCF de referencia (max 19 bytes)</param>
            <param name='byVar8'>Fuente a utilizar (opcional) {ABP}</param>
            <param name='nVar9'>Cantidad de copias 0-7 (opcional) (n)</param>
            <param name='nVar10'>Nro de logo a imprimir (opcional)</param>
            <param name='nVar11'>Densidad de impresion (opcional)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.TicketItem(System.String,System.Double,System.Double,System.Double,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Realiza la emisión de ítem de venta o la devolución de un ítem en forma total o parcial.</summary>
            <remarks>Acumula los importes facturados en la memoria de trabajo y calcula los impuestos de acuerdo a la tasa deimpuestos enviada. Permite la emisión de ítems de bonificación y su correspondiente anulación</remarks>
            <param name='strVar1'>Descripción del item (max 42 bytes)</param>
            <param name='dblVar2'>Cantidad (nnnnn.nnn)</param>
            <param name='dblVar3'>Precio unitario (nnnnnnn.nn)</param>
            <param name='dblVar4'>Tasa de impuestos (nn.nn)</param>
            <param name='byVar5'>Calificador de la operacion {MmRrDR}</param>
            <param name='byVar6'>Promoción</param>
            <param name='strVar7'>Descripción extra #1 (Opcional) (max 42 bytes)</param>
            <param name='strVar8'>Descripción extra #2 (Opcional) (max 42 bytes)</param>
            <param name='strVar9'>Descripción extra #3 (Opcional) (max 42 bytes)</param>
            <param name='strVar10'>Descripción extra #4 (Opcional) (max 42 bytes)</param>
            <param name='strVar11'>Descripción extra #5 (Opcional) (max 42 bytes)</param>
            <param name='strVar12'>Descripción extra #6 (Opcional) (max 42 bytes)</param>
            <param name='strVar13'>Descripción extra #7 (Opcional) (max 42 bytes)</param>
            <param name='strVar14'>Descripción extra #8 (Opcional) (max 42 bytes)</param>
            <param name='strVar15'>Descripción extra #9 (Opcional) (max 42 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.TicketSubtotal(System.String)">
            <summary>Retorna el subtotal facturado dentro de la boleta fiscal.</summary>
            <param name='byVar1'>Imprimir el subtotal</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.TicketReturnRecharge(System.String,System.Double,System.String)">
            <summary>Aplica un descuento o recargo global a los montos facturados en la boleta fiscal.</summary>
            <remarks>No haber efectuado pagos dentro de la boleta fiscal</remarks>
            <param name='strVar1'>Descripción (max 42 bytes)</param>
            <param name='dblVar2'>Monto del descuento o recargo (nnnnnnnnn.nn)</param>
            <param name='byVar3'>Calificador de la operación</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.TicketPayment(System.Int16,System.Double,System.String,System.String,System.String)">
            <summary>Aplica un pago a la boleta fiscal en proceso de emisión.</summary>
            <remarks>La impresión de las líneas de pagos se efectúa en el momento del cierre de la boleta fiscal.</remarks>
            <param name='nVar1'>Tipo de pago</param>
            <param name='dblVar2'>Monto del pago (nnnnnnnnn.nn)</param>
            <param name='strVar3'>Descripción extra #1 (max 42 bytes)</param>
            <param name='strVar4'>Descripción extra #2 (max 42 bytes)</param>
            <param name='strVar5'>Descripción extra #3 (max 42 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.TicketClose(System.Int16,System.String,System.Int16,System.String,System.Int16,System.String)">
            <summary>Realiza el cierre de la boleta fiscal almacenando los datos de la transacción en la memoria de transacciones. </summary>
            <param name='nVar1'>Número de línea de cola de reemplazo 1 (opcional) (nnn)</param>
            <param name='strVar2'>Descripción de reemplazo 1 (opcional) (max 42 bytes)</param>
            <param name='nVar3'>Número de línea de cola de reemplazo 2 (opcional) (nnn)</param>
            <param name='strVar4'>Descripción de reemplazo 2 (opcional) (max 42 bytes)</param>
            <param name='nVar5'>Número de línea de cola de reemplazo 3 (opcional) (nnn)</param>
            <param name='strVar6'>Descripción de reemplazo 3 (opcional) (max 42 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.TicketCancel">
            <summary>Realiza la cancelación del comprobante fiscal.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.SetTicketOptions(System.String,System.String)">
            <summary>Configura las diferentes opciones para la emisión de boletas fiscales.</summary>
            <remarks>El vuelto incluye a la primer línea de vuelto (luego de los pagos) y a la segunda y última (luego de las donaciones).</remarks>
            <param name='byVar1'>Imprimir encabezados y cola</param>
            <param name='byVar2'>Imprimir cantidad x precio</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetTicketOptions">
            <summary>Obtiene los valores de configuración para la emisión de boletas fiscales que se encuentran almacenados en la memoria de trabajo.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetTicketInfo">
            <summary>Obtiene información de la boleta fiscal en proceso de emisión.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetTicketVatInfo">
            <summary>Obtiene información de impuestos (ITBIS) de la boleta fiscal en curso.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetTicketPaymentInfo(System.String)">
            <summary>Obtiene información de pagos de la boleta fiscal en curso.</summary>
            <param name='byVar1'>Tipo</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.TicketDonation(System.String,System.Double,System.String)">
            <summary>Aplica una donación a la boleta fiscal en proceso de emisión.</summary>
            <remarks>La impresión de las líneas de donaciones se efectúa en el momento del cierre de la boleta fiscal.</remarks>
            <param name='strVar1'>Descripción (max 42 bytes)</param>
            <param name='dblVar2'>Monto donación (nnnnnnnnn.nn)</param>
            <param name='byVar3'>Calificador de la operación</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.TicketFiscalText(System.String)">
            <summary>Imprime una línea de comentario dentro de un comprobante fiscal.</summary>
            <param name='strVar1'>Comentario (max 42 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.TicketTip(System.Double)">
            <summary>Envía una propina al comprobante fiscal en proceso de emisión</summary>
            <param name='dblVar1'>Monto de la propina (nnnnnnnnn.nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetLastTicketStatus">
            <summary>Retorna los valores de respuesta del último comprobante cerrado.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.OpenNonFiscalReceipt(System.String)">
            <summary>Realiza la apertura de un documento no fiscal.</summary>
            <param name='byVar1'>Fuente a utilizar (opcional) {ABP}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.PrintNonFiscalText(System.String)">
            <summary>Imprime una línea de texto no fiscal dentro de un documento no fiscal.</summary>
            <remarks>Se permiten sólo 30 (treinta) líneas de texto no fiscal.</remarks>
            <param name='strVar1'>Texto no fiscal (max 42 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.CloseNonFiscalReceipt(System.String)">
            <summary>Realiza el cierre del documento no fiscal en proceso de emisión.</summary>
            <param name='byVar1'>Cortar papel {CN}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.GetNonFiscalReceiptInfo">
            <summary>Obtiene información del documento no fiscal en proceso de emisión.</summary>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.PrintNonFiscalSingleItem(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Realiza un Documento No Fiscal de 30 líneas.</summary>
            <param name='strVar1'>Texto No fiscal línea 1 (opcional) (max 42 bytes)</param>
            <param name='strVar2'>Texto No fiscal línea 2 (opcional) (max 42 bytes)</param>
            <param name='strVar3'>Texto No fiscal línea 3 (opcional) (max 42 bytes)</param>
            <param name='strVar4'>Texto No fiscal línea 4 (opcional) (max 42 bytes)</param>
            <param name='strVar5'>Texto No fiscal línea 5 (opcional) (max 42 bytes)</param>
            <param name='strVar6'>Texto No fiscal línea 6 (opcional) (max 42 bytes)</param>
            <param name='strVar7'>Texto No fiscal línea 7 (max 42 bytes)</param>
            <param name='strVar8'>Texto No fiscal línea 8 (max 42 bytes)</param>
            <param name='strVar9'>Texto No fiscal línea 9 (max 42 bytes)</param>
            <param name='strVar10'>Texto No fiscal línea 10 (max 42 bytes)</param>
            <param name='strVar11'>Texto No fiscal línea 11 (max 42 bytes)</param>
            <param name='strVar12'>Texto No fiscal línea 12 (max 42 bytes)</param>
            <param name='strVar13'>Texto No fiscal línea 13 (max 42 bytes)</param>
            <param name='strVar14'>Texto No fiscal línea 14 (max 42 bytes)</param>
            <param name='strVar15'>Texto No fiscal línea 15 (max 42 bytes)</param>
            <param name='strVar16'>Texto No fiscal línea 16 (max 42 bytes)</param>
            <param name='strVar17'>Texto No fiscal línea 17 (max 42 bytes)</param>
            <param name='strVar18'>Texto No fiscal línea 18 (max 42 bytes)</param>
            <param name='strVar19'>Texto No fiscal línea 19 (max 42 bytes)</param>
            <param name='strVar20'>Texto No fiscal línea 20 (max 42 bytes)</param>
            <param name='strVar21'>Texto No fiscal línea 21 (max 42 bytes)</param>
            <param name='strVar22'>Texto No fiscal línea 22 (max 42 bytes)</param>
            <param name='strVar23'>Texto No fiscal línea 23 (max 42 bytes)</param>
            <param name='strVar24'>Texto No fiscal línea 24 (max 42 bytes)</param>
            <param name='strVar25'>Texto No fiscal línea 25 (max 42 bytes)</param>
            <param name='strVar26'>Texto No fiscal línea 26 (max 42 bytes)</param>
            <param name='strVar27'>Texto No fiscal línea 27 (max 42 bytes)</param>
            <param name='strVar28'>Texto No fiscal línea 28 (max 42 bytes)</param>
            <param name='strVar29'>Texto No fiscal línea 29 (max 42 bytes)</param>
            <param name='strVar30'>Texto No fiscal línea 30 (max 42 bytes)</param>
            <param name='byVar31'>Cortar papel {CN}</param>
            <param name='byVar32'>Fuente a utilizar (opcional) {ABP}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.DisplayWriteText(System.String)">
            <summary>Muestra una línea de texto en un display EPSON conectado a la impresora fiscal.</summary>
            <param name='strVar1'>Texto a imprimir (max 42 bytes)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.DisplayClear(System.String)">
            <summary>Borra una línea de texto en un display EPSON conectado a la impresora fiscal.</summary>
            <param name='byVar1'>Borrar todo {LT}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.DisplaySetCursor(System.String,System.Int16,System.Int16)">
            <summary>Posiciona y configura las propiedades del cursor en un display EPSON conectado a la impresora fiscal.</summary>
            <param name='byVar1'>Calificador de la operación</param>
            <param name='nVar2'>Nro de columna (opcional) (nn)</param>
            <param name='nVar3'>Nro de fila (opcional) (nn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.DisplayConfigure(System.String,System.Int16)">
            <summary>Configura las preferencias de visualización de un display EPSON conectado a la impresora fiscal.</summary>
            <param name='byVar1'>Parametro a modificar</param>
            <param name='nVar2'>Valor del parámetro</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.DisplayTest(System.String,System.String)">
            <summary>Ejecuta un test de diagnóstico en un display EPSON conectado a la impresora fiscal.</summary>
            <param name='byVar1'>Inicializar el Display {IN}</param>
            <param name='byVar2'>Realizar Autoverificacion {AN}</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.SlipStartPrint(System.String,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>Inicia la impresión por la terminal slip, validación o para imprimir un cheque. Este paso es requerido para poder imprimir líneas en las estaciones mencionadas.</summary>
            <remarks>Si la coordenada X no es especificada, la misma será tomada como valor 0 (cero)</remarks>
            <param name='byVar1'>Estación</param>
            <param name='nVar2'>Valor de la coordenada X del origen del papel (opcional) (nnn)</param>
            <param name='nVar3'>Valor de la coordenada Y del origen del papel (opcional) (nnn)</param>
            <param name='nVar4'>Ancho del papel a partir del origen X (opcional) (nnn)</param>
            <param name='nVar5'>Largo del papel a partir del origen Y (opcional) (nnn)</param>
            <param name='nVar6'>Número de logo a imprimir (opcional) (nnn)</param>
            <param name='nVar7'>Densidad de impresión (opcional) (n)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.SlipPrintText(System.String,System.String,System.Int16)">
            <summary>Imprime una línea de texto en la estación de slip, validación o cheque tanto para el frente como para el reverso</summary>
            <remarks>No se acepta código de barras.</remarks>
            <param name='strVar1'>Texto</param>
            <param name='byVar2'>Tipo de avance</param>
            <param name='nVar3'>Tamaño de avance de línea (opcional) (nnn)</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.SlipEndPrint(System.String,System.String)">
            <summary>Finaliza la impresión por la terminal slip o validación.</summary>
            <remarks>Este paso es requerido para dar por finalizada la impresión en la estación seleccionada.</remarks>
            <param name='byVar1'>Expulsar papel</param>
            <param name='byVar2'>Modo</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
        <member name="M:FiscalNET.EpsonDO.SlipCancelPrint(System.String,System.String)">
            <summary>Cancela la impresión por la terminal slip o validación. Expulsa la hoja que se encuentra cargada en la estación.</summary>
            <param name='byVar1'>Expulsar papel</param>
            <param name='byVar2'>Modo</param>
            <returns> 0 si no hay error, != 0 si hay un error</returns>
        </member>
    </members>
</doc>
